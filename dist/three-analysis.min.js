// Version 0.0.0 three-analysis - https://github.com/hanmag/three.analysis#readme
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.ThreeAnalysis=e()}(this,function(){"use strict";/**
 * https://github.com/mrdoob/eventdispatcher.js/
 */
function t(){}/**
 * @author mrdoob / http://mrdoob.com/
 * @author philogb / http://blog.thejit.org/
 * @author egraether / http://egraether.com/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 */
function e(t,e){this.x=t||0,this.y=e||0}/**
 * @author mrdoob / http://mrdoob.com/
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author philogb / http://blog.thejit.org/
 * @author jordi_ros / http://plattsoft.com
 * @author D1plo1d / http://github.com/D1plo1d
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author timknip / http://www.floorplanner.com/
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 */
function i(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://clara.io
 */
function n(t,e,i,n){this._x=t||0,this._y=e||0,this._z=i||0,this._w=void 0!==n?n:1}/**
 * @author mrdoob / http://mrdoob.com/
 * @author kile / http://kile.stravaganza.org/
 * @author philogb / http://blog.thejit.org/
 * @author mikael emtinger / http://gomo.se/
 * @author egraether / http://egraether.com/
 * @author WestLangley / http://github.com/WestLangley
 */
function r(t,e,i){this.x=t||0,this.y=e||0,this.z=i||0}/**
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://clara.io
 * @author tschw
 */
function a(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function o(t,i,n,r,s,c,h,l,u,d){Object.defineProperty(this,"id",{value:su++}),this.uuid=ou.generateUUID(),this.name="",this.image=void 0!==t?t:o.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==i?i:o.DEFAULT_MAPPING,this.wrapS=void 0!==n?n:ll,this.wrapT=void 0!==r?r:ll,this.magFilter=void 0!==s?s:ml,this.minFilter=void 0!==c?c:vl,this.anisotropy=void 0!==u?u:1,this.format=void 0!==h?h:Il,this.type=void 0!==l?l:yl,this.offset=new e(0,0),this.repeat=new e(1,1),this.center=new e(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new a,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)
// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.
//
// Also changing the encoding after already used by a Material will not automatically make the Material
// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.
this.encoding=void 0!==d?d:Ql,this.version=0,this.onUpdate=null}/**
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author philogb / http://blog.thejit.org/
 * @author mikael emtinger / http://gomo.se/
 * @author egraether / http://egraether.com/
 * @author WestLangley / http://github.com/WestLangley
 */
function s(t,e,i,n){this.x=t||0,this.y=e||0,this.z=i||0,this.w=void 0!==n?n:1}/**
 * @author szimek / https://github.com/szimek/
 * @author alteredq / http://alteredqualia.com/
 * @author Marius Kintel / https://github.com/kintel
 */
/*
 In options, we can specify:
 * Texture parameters for an auto-generated target texture
 * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers
*/
function c(t,e,i){this.uuid=ou.generateUUID(),this.width=t,this.height=e,this.scissor=new s(0,0,t,e),this.scissorTest=!1,this.viewport=new s(0,0,t,e),void 0===(i=i||{}).minFilter&&(i.minFilter=ml),this.texture=new o(void 0,void 0,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0===i.stencilBuffer||i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}/**
 * @author alteredq / http://alteredqualia.com
 */
function h(t,e,i){c.call(this,t,e,i),this.activeCubeFace=0,// PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5
this.activeMipMapLevel=0}/**
 * @author alteredq / http://alteredqualia.com/
 */
function l(t,e,i,n,r,a,s,c,h,l,u,d){o.call(this,null,a,s,c,h,l,n,r,u,d),this.image={data:t,width:e,height:i},this.magFilter=void 0!==h?h:dl,this.minFilter=void 0!==l?l:dl,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}/**
 * @author mrdoob / http://mrdoob.com/
 */
function u(t,e,i,n,r,a,s,c,h,l){o.call(this,t=void 0!==t?t:[],e=void 0!==e?e:il,i,n,r,a,s,c,h,l),this.flipY=!1}
// --- Base for inner nodes (including the root) ---
function d(){this.seq=[],this.map={}}
// Flattening for arrays of vectors and matrices
function p(t,e,i){var n=t[0];if(n<=0||n>0)return t;
// unoptimized: ! isNaN( firstElem )
// see http://jacksondunstan.com/articles/983
var r=e*i,a=lu[r];if(void 0===a&&(a=new Float32Array(r),lu[r]=a),0!==e){n.toArray(a,0);for(var o=1,s=0;o!==e;++o)s+=i,t[o].toArray(a,s)}return a}
// Texture unit allocation
function f(t,e){var i=uu[e];void 0===i&&(i=new Int32Array(e),uu[e]=i);for(var n=0;n!==e;++n)i[n]=t.allocTextureUnit();return i}
// --- Setters ---
// Note: Defining these methods externally, because they come in a bunch
// and this way their names minify.
// Single scalar
function m(t,e){t.uniform1f(this.addr,e)}function g(t,e){t.uniform1i(this.addr,e)}
// Single float vector (from flat array or THREE.VectorN)
function v(t,e){void 0===e.x?t.uniform2fv(this.addr,e):t.uniform2f(this.addr,e.x,e.y)}function y(t,e){void 0!==e.x?t.uniform3f(this.addr,e.x,e.y,e.z):void 0!==e.r?t.uniform3f(this.addr,e.r,e.g,e.b):t.uniform3fv(this.addr,e)}function x(t,e){void 0===e.x?t.uniform4fv(this.addr,e):t.uniform4f(this.addr,e.x,e.y,e.z,e.w)}
// Single matrix (from flat array or MatrixN)
function b(t,e){t.uniformMatrix2fv(this.addr,!1,e.elements||e)}function _(t,e){void 0===e.elements?t.uniformMatrix3fv(this.addr,!1,e):(pu.set(e.elements),t.uniformMatrix3fv(this.addr,!1,pu))}function w(t,e){void 0===e.elements?t.uniformMatrix4fv(this.addr,!1,e):(du.set(e.elements),t.uniformMatrix4fv(this.addr,!1,du))}
// Single texture (2D / Cube)
function M(t,e,i){var n=i.allocTextureUnit();t.uniform1i(this.addr,n),i.setTexture2D(e||cu,n)}function E(t,e,i){var n=i.allocTextureUnit();t.uniform1i(this.addr,n),i.setTextureCube(e||hu,n)}
// Integer / Boolean vectors or arrays thereof (always flat arrays)
function T(t,e){t.uniform2iv(this.addr,e)}function S(t,e){t.uniform3iv(this.addr,e)}function A(t,e){t.uniform4iv(this.addr,e)}
// Array of scalars
function L(t,e){t.uniform1fv(this.addr,e)}function R(t,e){t.uniform1iv(this.addr,e)}
// Array of vectors (flat or from THREE classes)
function P(t,e){t.uniform2fv(this.addr,p(e,this.size,2))}function C(t,e){t.uniform3fv(this.addr,p(e,this.size,3))}function I(t,e){t.uniform4fv(this.addr,p(e,this.size,4))}
// Array of matrices (flat or from THREE clases)
function U(t,e){t.uniformMatrix2fv(this.addr,!1,p(e,this.size,4))}function N(t,e){t.uniformMatrix3fv(this.addr,!1,p(e,this.size,9))}function O(t,e){t.uniformMatrix4fv(this.addr,!1,p(e,this.size,16))}
// Array of textures (2D / Cube)
function D(t,e,i){var n=e.length,r=f(i,n);t.uniform1iv(this.addr,r);for(var a=0;a!==n;++a)i.setTexture2D(e[a]||cu,r[a])}function F(t,e,i){var n=e.length,r=f(i,n);t.uniform1iv(this.addr,r);for(var a=0;a!==n;++a)i.setTextureCube(e[a]||hu,r[a])}
// --- Uniform Classes ---
function B(t,e,i){this.id=t,this.addr=i,this.setValue=
// Helper to pick the right setter for the singular case
function(t){switch(t){case 5126:return m;// FLOAT
case 35664:return v;// _VEC2
case 35665:return y;// _VEC3
case 35666:return x;// _VEC4
case 35674:return b;// _MAT2
case 35675:return _;// _MAT3
case 35676:return w;// _MAT4
case 35678:case 36198:return M;// SAMPLER_2D, SAMPLER_EXTERNAL_OES
case 35680:return E;// SAMPLER_CUBE
case 5124:case 35670:return g;// INT, BOOL
case 35667:case 35671:return T;// _VEC2
case 35668:case 35672:return S;// _VEC3
case 35669:case 35673:return A}}(e.type)}function z(t,e,i){this.id=t,this.addr=i,this.size=e.size,this.setValue=
// Helper to pick the right setter for a pure (bottom-level) array
function(t){switch(t){case 5126:return L;// FLOAT
case 35664:return P;// _VEC2
case 35665:return C;// _VEC3
case 35666:return I;// _VEC4
case 35674:return U;// _MAT2
case 35675:return N;// _MAT3
case 35676:return O;// _MAT4
case 35678:return D;// SAMPLER_2D
case 35680:return F;// SAMPLER_CUBE
case 5124:case 35670:return R;// INT, BOOL
case 35667:case 35671:return T;// _VEC2
case 35668:case 35672:return S;// _VEC3
case 35669:case 35673:return A}}(e.type)}function G(t){this.id=t,d.call(this)}
// extracts
// 	- the identifier (member name or array index)
//  - followed by an optional right bracket (found when array index)
//  - followed by an optional left bracket or dot (type of subscript)
//
// Note: These portions can be read in a non-overlapping fashion and
// allow straightforward parsing of the hierarchy that WebGL encodes
// in the uniform names.
function H(t,e){t.seq.push(e),t.map[e.id]=e}function V(t,e,i){var n=t.name,r=n.length;for(
// reset RegExp object, because of the early exit of a previous run
fu.lastIndex=0;;){var a=fu.exec(n),o=fu.lastIndex,s=a[1],c="]"===a[2],h=a[3];// convert to integer
if(c&&(s|=0),void 0===h||"["===h&&o+2===r){
// bare name or "pure" bottom-level array "[0]" suffix
H(i,void 0===h?new B(s,t,e):new z(s,t,e));break}
// step into inner node / create it in case it doesn't exist
var l=i.map[s];void 0===l&&H(i,l=new G(s)),i=l}}
// Root Container
function k(t,e,i){d.call(this),this.renderer=i;for(var n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS),r=0;r<n;++r){var a=t.getActiveUniform(e,r),o=a.name;V(a,t.getUniformLocation(e,o),this)}}function j(t,e,i){return void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}/**
 * @author bhouston / http://clara.io
 */
function W(t,i){this.min=void 0!==t?t:new e(1/0,1/0),this.max=void 0!==i?i:new e(-1/0,-1/0)}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */
function X(t,i,n,a,o){function s(){var t=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),e=new Uint16Array([0,1,2,0,2,3]);
// buffers
c=i.createBuffer(),h=i.createBuffer(),i.bindBuffer(i.ARRAY_BUFFER,c),i.bufferData(i.ARRAY_BUFFER,t,i.STATIC_DRAW),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,h),i.bufferData(i.ELEMENT_ARRAY_BUFFER,e,i.STATIC_DRAW),
// textures
f=i.createTexture(),m=i.createTexture(),n.bindTexture(i.TEXTURE_2D,f),i.texImage2D(i.TEXTURE_2D,0,i.RGB,16,16,0,i.RGB,i.UNSIGNED_BYTE,null),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),n.bindTexture(i.TEXTURE_2D,m),i.texImage2D(i.TEXTURE_2D,0,i.RGBA,16,16,0,i.RGBA,i.UNSIGNED_BYTE,null),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.NEAREST),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.NEAREST),l={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","\tvUV = uv;","\tvec2 pos = position;","\tif ( renderType == 2 ) {","\t\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","\t\tvVisibility =        visibility.r / 9.0;","\t\tvVisibility *= 1.0 - visibility.g / 9.0;","\t\tvVisibility *=       visibility.b / 9.0;","\t\tvVisibility *= 1.0 - visibility.a / 9.0;","\t\tpos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","\t\tpos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","\t}","\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {",
// pink square
"\tif ( renderType == 0 ) {","\t\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );",
// restore
"\t} else if ( renderType == 1 ) {","\t\tgl_FragColor = texture2D( map, vUV );",
// flare
"\t} else {","\t\tvec4 texture = texture2D( map, vUV );","\t\ttexture.a *= opacity * vVisibility;","\t\tgl_FragColor = texture;","\t\tgl_FragColor.rgb *= color;","\t}","}"].join("\n")},u=function(t){var e=i.createProgram(),n=i.createShader(i.FRAGMENT_SHADER),r=i.createShader(i.VERTEX_SHADER),a="precision "+o.precision+" float;\n";return i.shaderSource(n,a+t.fragmentShader),i.shaderSource(r,a+t.vertexShader),i.compileShader(n),i.compileShader(r),i.attachShader(e,n),i.attachShader(e,r),i.linkProgram(e),e}(l),d={vertex:i.getAttribLocation(u,"position"),uv:i.getAttribLocation(u,"uv")},p={renderType:i.getUniformLocation(u,"renderType"),map:i.getUniformLocation(u,"map"),occlusionMap:i.getUniformLocation(u,"occlusionMap"),opacity:i.getUniformLocation(u,"opacity"),color:i.getUniformLocation(u,"color"),scale:i.getUniformLocation(u,"scale"),rotation:i.getUniformLocation(u,"rotation"),screenPosition:i.getUniformLocation(u,"screenPosition")}}var c,h,l,u,d,p,f,m;/*
	 * Render lens flares
	 * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,
	 *         reads these back and calculates occlusion.
	 */
this.render=function(t,o,l,g){if(0!==t.length){var v=new r,y=g.w/g.z,x=.5*g.z,b=.5*g.w,_=16/g.w,w=new e(_*y,_),M=new r(1,1,0),E=new e(1,1),T=new W;T.min.set(g.x,g.y),T.max.set(g.x+(g.z-16),g.y+(g.w-16)),void 0===u&&s(),n.useProgram(u),n.initAttributes(),n.enableAttribute(d.vertex),n.enableAttribute(d.uv),n.disableUnusedAttributes(),
// loop through all lens flares to update their occlusion and positions
// setup gl and common used attribs/uniforms
i.uniform1i(p.occlusionMap,0),i.uniform1i(p.map,1),i.bindBuffer(i.ARRAY_BUFFER,c),i.vertexAttribPointer(d.vertex,2,i.FLOAT,!1,16,0),i.vertexAttribPointer(d.uv,2,i.FLOAT,!1,16,8),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,h),n.disable(i.CULL_FACE),n.buffers.depth.setMask(!1);for(var S=0,A=t.length;S<A;S++){_=16/g.w,w.set(_*y,_);
// calc object screen position
var L=t[S];
// screen cull
if(v.set(L.matrixWorld.elements[12],L.matrixWorld.elements[13],L.matrixWorld.elements[14]),v.applyMatrix4(l.matrixWorldInverse),v.applyMatrix4(l.projectionMatrix),
// setup arrays for gl programs
M.copy(v),
// horizontal and vertical coordinate of the lower left corner of the pixels to copy
E.x=g.x+M.x*x+x-8,E.y=g.y+M.y*b+b-8,!0===T.containsPoint(E)){
// save current RGB to temp texture
n.activeTexture(i.TEXTURE0),n.bindTexture(i.TEXTURE_2D,null),n.activeTexture(i.TEXTURE1),n.bindTexture(i.TEXTURE_2D,f),i.copyTexImage2D(i.TEXTURE_2D,0,i.RGB,E.x,E.y,16,16,0),
// render pink quad
i.uniform1i(p.renderType,0),i.uniform2f(p.scale,w.x,w.y),i.uniform3f(p.screenPosition,M.x,M.y,M.z),n.disable(i.BLEND),n.enable(i.DEPTH_TEST),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0),
// copy result to occlusionMap
n.activeTexture(i.TEXTURE0),n.bindTexture(i.TEXTURE_2D,m),i.copyTexImage2D(i.TEXTURE_2D,0,i.RGBA,E.x,E.y,16,16,0),
// restore graphics
i.uniform1i(p.renderType,1),n.disable(i.DEPTH_TEST),n.activeTexture(i.TEXTURE1),n.bindTexture(i.TEXTURE_2D,f),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0),
// update object positions
L.positionScreen.copy(M),L.customUpdateCallback?L.customUpdateCallback(L):L.updateLensFlares(),
// render flares
i.uniform1i(p.renderType,2),n.enable(i.BLEND);for(var R=0,P=L.lensFlares.length;R<P;R++){var C=L.lensFlares[R];C.opacity>.001&&C.scale>.001&&(M.x=C.x,M.y=C.y,M.z=C.z,_=C.size*C.scale/g.w,w.x=_*y,w.y=_,i.uniform3f(p.screenPosition,M.x,M.y,M.z),i.uniform2f(p.scale,w.x,w.y),i.uniform1f(p.rotation,C.rotation),i.uniform1f(p.opacity,C.opacity),i.uniform3f(p.color,C.color.r,C.color.g,C.color.b),n.setBlending(C.blending,C.blendEquation,C.blendSrc,C.blendDst),a.setTexture2D(C.texture,1),i.drawElements(i.TRIANGLES,6,i.UNSIGNED_SHORT,0))}}}
// restore gl
n.enable(i.CULL_FACE),n.enable(i.DEPTH_TEST),n.buffers.depth.setMask(!0),n.reset()}}}/**
 * @author mrdoob / http://mrdoob.com/
 */
function q(t,e,i,n,r,a,s,c,h){o.call(this,t,e,i,n,r,a,s,c,h),this.needsUpdate=!0}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */
function Y(t,e,i,a,o){function s(){var t=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),i=new Uint16Array([0,1,2,0,2,3]);h=e.createBuffer(),l=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,h),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,l),e.bufferData(e.ELEMENT_ARRAY_BUFFER,i,e.STATIC_DRAW),u=function(){var t=e.createProgram(),i=e.createShader(e.VERTEX_SHADER),n=e.createShader(e.FRAGMENT_SHADER);return e.shaderSource(i,["precision "+o.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float fogDepth;","void main() {","\tvUV = uvOffset + uv * uvScale;","\tvec2 alignedPosition = position * scale;","\tvec2 rotatedPosition;","\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","\tvec4 mvPosition;","\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","\tmvPosition.xy += rotatedPosition;","\tgl_Position = projectionMatrix * mvPosition;","\tfogDepth = - mvPosition.z;","}"].join("\n")),e.shaderSource(n,["precision "+o.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","varying float fogDepth;","void main() {","\tvec4 texture = texture2D( map, vUV );","\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","\tif ( gl_FragColor.a < alphaTest ) discard;","\tif ( fogType > 0 ) {","\t\tfloat fogFactor = 0.0;","\t\tif ( fogType == 1 ) {","\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );","\t\t} else {","\t\t\tconst float LOG2 = 1.442695;","\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );","\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","\t\t}","\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );","\t}","}"].join("\n")),e.compileShader(i),e.compileShader(n),e.attachShader(t,i),e.attachShader(t,n),e.linkProgram(t),t}(),d={position:e.getAttribLocation(u,"position"),uv:e.getAttribLocation(u,"uv")},p={uvOffset:e.getUniformLocation(u,"uvOffset"),uvScale:e.getUniformLocation(u,"uvScale"),rotation:e.getUniformLocation(u,"rotation"),scale:e.getUniformLocation(u,"scale"),color:e.getUniformLocation(u,"color"),map:e.getUniformLocation(u,"map"),opacity:e.getUniformLocation(u,"opacity"),modelViewMatrix:e.getUniformLocation(u,"modelViewMatrix"),projectionMatrix:e.getUniformLocation(u,"projectionMatrix"),fogType:e.getUniformLocation(u,"fogType"),fogDensity:e.getUniformLocation(u,"fogDensity"),fogNear:e.getUniformLocation(u,"fogNear"),fogFar:e.getUniformLocation(u,"fogFar"),fogColor:e.getUniformLocation(u,"fogColor"),fogDepth:e.getUniformLocation(u,"fogDepth"),alphaTest:e.getUniformLocation(u,"alphaTest")};var n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");n.width=8,n.height=8;var r=n.getContext("2d");r.fillStyle="white",r.fillRect(0,0,8,8),f=new q(n)}function c(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:e.id-t.id}var h,l,u,d,p,f,m=new r,g=new n,v=new r;this.render=function(n,r,o){if(0!==n.length){
// setup gl
void 0===u&&s(),i.useProgram(u),i.initAttributes(),i.enableAttribute(d.position),i.enableAttribute(d.uv),i.disableUnusedAttributes(),i.disable(e.CULL_FACE),i.enable(e.BLEND),e.bindBuffer(e.ARRAY_BUFFER,h),e.vertexAttribPointer(d.position,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(d.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,l),e.uniformMatrix4fv(p.projectionMatrix,!1,o.projectionMatrix.elements),i.activeTexture(e.TEXTURE0),e.uniform1i(p.map,0);var y=0,x=0,b=r.fog;b?(e.uniform3f(p.fogColor,b.color.r,b.color.g,b.color.b),b.isFog?(e.uniform1f(p.fogNear,b.near),e.uniform1f(p.fogFar,b.far),e.uniform1i(p.fogType,1),y=1,x=1):b.isFogExp2&&(e.uniform1f(p.fogDensity,b.density),e.uniform1i(p.fogType,2),y=2,x=2)):(e.uniform1i(p.fogType,0),y=0,x=0);
// update positions and sort
for(var _=0,w=n.length;_<w;_++){(E=n[_]).modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,E.matrixWorld),E.z=-E.modelViewMatrix.elements[14]}n.sort(c);for(var M=[],_=0,w=n.length;_<w;_++){var E=n[_],T=E.material;if(!1!==T.visible){E.onBeforeRender(t,r,o,void 0,T,void 0),e.uniform1f(p.alphaTest,T.alphaTest),e.uniformMatrix4fv(p.modelViewMatrix,!1,E.modelViewMatrix.elements),E.matrixWorld.decompose(m,g,v),M[0]=v.x,M[1]=v.y;var S=0;r.fog&&T.fog&&(S=x),y!==S&&(e.uniform1i(p.fogType,S),y=S),null!==T.map?(e.uniform2f(p.uvOffset,T.map.offset.x,T.map.offset.y),e.uniform2f(p.uvScale,T.map.repeat.x,T.map.repeat.y)):(e.uniform2f(p.uvOffset,0,0),e.uniform2f(p.uvScale,1,1)),e.uniform1f(p.opacity,T.opacity),e.uniform3f(p.color,T.color.r,T.color.g,T.color.b),e.uniform1f(p.rotation,T.rotation),e.uniform2fv(p.scale,M),i.setBlending(T.blending,T.blendEquation,T.blendSrc,T.blendDst,T.blendEquationAlpha,T.blendSrcAlpha,T.blendDstAlpha,T.premultipliedAlpha),i.buffers.depth.setTest(T.depthTest),i.buffers.depth.setMask(T.depthWrite),i.buffers.color.setMask(T.colorWrite),a.setTexture2D(T.map||f,0),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),E.onAfterRender(t,r,o,void 0,T,void 0)}}
// restore gl
i.enable(e.CULL_FACE),i.reset()}}}function Z(){Object.defineProperty(this,"id",{value:bu++}),this.uuid=ou.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=xh,this.side=dh,this.flatShading=!1,this.vertexColors=mh,// THREE.NoColors, THREE.VertexColors, THREE.FaceColors
this.opacity=1,this.transparent=!1,this.blendSrc=Uh,this.blendDst=Nh,this.blendEquation=Eh,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=kh,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,// override the renderer's default precision for this material
this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,// Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer
this.visible=!0,this.userData={},this.needsUpdate=!0}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author bhouston / https://clara.io
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 * }
 */
function J(t){Z.call(this),this.type="MeshDepthMaterial",this.depthPacking=ru,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(t)}/**
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *
 *  referencePosition: <float>,
 *  nearDistance: <float>,
 *  farDistance: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>
 *
 * }
 */
function Q(t){Z.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new r,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.lights=!1,this.setValues(t)}/**
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 */
function K(t,e){this.min=void 0!==t?t:new r(1/0,1/0,1/0),this.max=void 0!==e?e:new r(-1/0,-1/0,-1/0)}/**
 * @author bhouston / http://clara.io
 * @author mrdoob / http://mrdoob.com/
 */
function $(t,e){this.center=void 0!==t?t:new r,this.radius=void 0!==e?e:0}/**
 * @author bhouston / http://clara.io
 */
function tt(t,e){
// normal is assumed to be normalized
this.normal=void 0!==t?t:new r(1,0,0),this.constant=void 0!==e?e:0}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author bhouston / http://clara.io
 */
function et(t,e,i,n,r,a){this.planes=[void 0!==t?t:new tt,void 0!==e?e:new tt,void 0!==i?i:new tt,void 0!==n?n:new tt,void 0!==r?r:new tt,void 0!==a?a:new tt]}/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */
function it(t,n,a){function o(e,i,n,r,a,o){var s=e.geometry,c=null,h=x,l=e.customDepthMaterial;if(n&&(h=b,l=e.customDistanceMaterial),l)c=l;else{var u=!1;i.morphTargets&&(s&&s.isBufferGeometry?u=s.morphAttributes&&s.morphAttributes.position&&s.morphAttributes.position.length>0:s&&s.isGeometry&&(u=s.morphTargets&&s.morphTargets.length>0)),e.isSkinnedMesh&&!1===i.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e);var d=e.isSkinnedMesh&&i.skinning,p=0;u&&(p|=g),d&&(p|=v),c=h[p]}if(t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){
// in this case we need a unique material instance reflecting the
// appropriate state
var f=c.uuid,m=i.uuid,y=_[f];void 0===y&&(y={},_[f]=y);var w=y[m];void 0===w&&(w=c.clone(),y[m]=w),c=w}c.visible=i.visible,c.wireframe=i.wireframe;var M=i.side;return P.renderSingleSided&&M==fh&&(M=dh),P.renderReverseSided&&(M===dh?M=ph:M===ph&&(M=dh)),c.side=M,c.clipShadows=i.clipShadows,c.clippingPlanes=i.clippingPlanes,c.clipIntersection=i.clipIntersection,c.wireframeLinewidth=i.wireframeLinewidth,c.linewidth=i.linewidth,n&&c.isMeshDistanceMaterial&&(c.referencePosition.copy(r),c.nearDistance=a,c.farDistance=o),c}function h(e,i,r,a){if(!1!==e.visible){if(e.layers.test(i.layers)&&(e.isMesh||e.isLine||e.isPoints)&&e.castShadow&&(!e.frustumCulled||l.intersectsObject(e))){e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld);var s=n.update(e),c=e.material;if(Array.isArray(c))for(var u=s.groups,d=0,p=u.length;d<p;d++){var f=u[d],g=c[f.materialIndex];if(g&&g.visible){v=o(e,g,a,m,r.near,r.far);t.renderBufferDirect(r,null,s,v,e,f)}}else if(c.visible){var v=o(e,c,a,m,r.near,r.far);t.renderBufferDirect(r,null,s,v,e,null)}}for(var y=e.children,x=0,b=y.length;x<b;x++)h(y[x],i,r,a)}}
// init
for(var l=new et,u=new i,d=new e,p=new e(a,a),f=new r,m=new r,g=1,v=2,y=1+(g|v),x=new Array(y),b=new Array(y),_={},w=[new r(1,0,0),new r(-1,0,0),new r(0,0,1),new r(0,0,-1),new r(0,1,0),new r(0,-1,0)],M=[new r(0,1,0),new r(0,1,0),new r(0,1,0),new r(0,1,0),new r(0,0,1),new r(0,0,-1)],E=[new s,new s,new s,new s,new s,new s],T=0;T!==y;++T){var S=0!=(T&g),A=0!=(T&v),L=new J({depthPacking:au,morphTargets:S,skinning:A});x[T]=L;
//
var R=new Q({morphTargets:S,skinning:A});b[T]=R}
//
var P=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=lh,this.renderReverseSided=!0,this.renderSingleSided=!0,this.render=function(e,i,n){if(!1!==P.enabled&&(!1!==P.autoUpdate||!1!==P.needsUpdate)&&0!==e.length){
// TODO Clean up (needed in case of contextlost)
var r=t.context,a=t.state;
// Set GL state for depth map.
a.disable(r.BLEND),a.buffers.color.setClear(1,1,1,1),a.buffers.depth.setTest(!0),a.setScissorTest(!1);for(var o,s=0,g=e.length;s<g;s++){var v=e[s],y=v.shadow,x=v&&v.isPointLight;if(void 0!==y){var b=y.camera;if(d.copy(y.mapSize),d.min(p),x){var _=d.x,T=d.y;
// These viewports map a cube-map onto a 2D texture with the
// following orientation:
//
//  xzXZ
//   y Y
//
// X - Positive x direction
// x - Negative x direction
// Y - Positive y direction
// y - Negative y direction
// Z - Positive z direction
// z - Negative z direction
// positive X
E[0].set(2*_,T,_,T),
// negative X
E[1].set(0,T,_,T),
// positive Z
E[2].set(3*_,T,_,T),
// negative Z
E[3].set(_,T,_,T),
// positive Y
E[4].set(3*_,0,_,T),
// negative Y
E[5].set(_,0,_,T),d.x*=4,d.y*=2}if(null===y.map){var S={minFilter:dl,magFilter:dl,format:Il};y.map=new c(d.x,d.y,S),y.map.texture.name=v.name+".shadowMap",b.updateProjectionMatrix()}y.isSpotLightShadow&&y.update(v);var A=y.map,L=y.matrix;m.setFromMatrixPosition(v.matrixWorld),b.position.copy(m),x?(o=6,
// for point lights we set the shadow matrix to be a translation-only matrix
// equal to inverse of the light's position
L.makeTranslation(-m.x,-m.y,-m.z)):(o=1,f.setFromMatrixPosition(v.target.matrixWorld),b.lookAt(f),b.updateMatrixWorld(),
// compute shadow matrix
L.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),L.multiply(b.projectionMatrix),L.multiply(b.matrixWorldInverse)),t.setRenderTarget(A),t.clear();
// render shadow map for each cube face (if omni-directional) or
// run a single pass if not
for(var R=0;R<o;R++){if(x){f.copy(b.position),f.add(w[R]),b.up.copy(M[R]),b.lookAt(f),b.updateMatrixWorld();var C=E[R];a.viewport(C)}
// update camera matrices and frustum
u.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),l.setFromMatrix(u),
// set object matrices & frustum culling
h(i,n,b,x)}}else console.warn("THREE.WebGLShadowMap:",v,"has no shadow.")}P.needsUpdate=!1}}}/**
 * @author mrdoob / http://mrdoob.com/
 */
function nt(t){var e={};return{get:
//
function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e[t.uuid]},remove:function(i){i.isInterleavedBufferAttribute&&(i=i.data);var n=e[i.uuid];n&&(t.deleteBuffer(n.buffer),delete e[i.uuid])},update:function(i,n){i.isInterleavedBufferAttribute&&(i=i.data);var r=e[i.uuid];void 0===r?e[i.uuid]=function(e,i){var n=e.array,r=e.dynamic?t.DYNAMIC_DRAW:t.STATIC_DRAW,a=t.createBuffer();t.bindBuffer(i,a),t.bufferData(i,n,r),e.onUploadCallback();var o=t.FLOAT;return n instanceof Float32Array?o=t.FLOAT:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?o=t.UNSIGNED_SHORT:n instanceof Int16Array?o=t.SHORT:n instanceof Uint32Array?o=t.UNSIGNED_INT:n instanceof Int32Array?o=t.INT:n instanceof Int8Array?o=t.BYTE:n instanceof Uint8Array&&(o=t.UNSIGNED_BYTE),{buffer:a,type:o,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version}}(i,n):r.version<i.version&&(function(e,i,n){var r=i.array,a=i.updateRange;t.bindBuffer(n,e),!1===i.dynamic?t.bufferData(n,r,t.STATIC_DRAW):-1===a.count?
// Not using update ranges
t.bufferSubData(n,0,r):0===a.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(t.bufferSubData(n,a.offset*r.BYTES_PER_ELEMENT,r.subarray(a.offset,a.offset+a.count)),a.count=-1)}(r.buffer,i,n),r.version=i.version)}}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://clara.io
 */
function rt(t,e,i,n){this._x=t||0,this._y=e||0,this._z=i||0,this._order=n||rt.DefaultOrder}/**
 * @author mrdoob / http://mrdoob.com/
 */
function at(){this.mask=1}function ot(){Object.defineProperty(this,"id",{value:_u++}),this.uuid=ou.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ot.DefaultUp.clone();var t=new r,e=new rt,o=new n,s=new r(1,1,1);e.onChange(function(){o.setFromEuler(e,!1)}),o.onChange(function(){e.setFromQuaternion(o,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:t},rotation:{enumerable:!0,value:e},quaternion:{enumerable:!0,value:o},scale:{enumerable:!0,value:s},modelViewMatrix:{value:new i},normalMatrix:{value:new a}}),this.matrix=new i,this.matrixWorld=new i,this.matrixAutoUpdate=ot.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new at,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author mikael emtinger / http://gomo.se/
 * @author WestLangley / http://github.com/WestLangley
*/
function st(){ot.call(this),this.type="Camera",this.matrixWorldInverse=new i,this.projectionMatrix=new i}/**
 * @author alteredq / http://alteredqualia.com/
 * @author arose / http://github.com/arose
 */
function ct(t,e,i,n,r,a){st.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=n,this.near=void 0!==r?r:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
function ht(t,e,i,n,a,o){this.a=t,this.b=e,this.c=i,this.normal=n&&n.isVector3?n:new r,this.vertexNormals=Array.isArray(n)?n:[],this.color=a&&a.isColor?a:new j,this.vertexColors=Array.isArray(a)?a:[],this.materialIndex=void 0!==o?o:0}// Geometry uses even numbers as Id
function lt(){Object.defineProperty(this,"id",{value:wu+=2}),this.uuid=ou.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,
// update flags
this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}/**
 * @author mrdoob / http://mrdoob.com/
 */
function ut(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=ou.generateUUID(),this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===i,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}
//
function dt(t,e,i){ut.call(this,new Int8Array(t),e,i)}function pt(t,e,i){ut.call(this,new Uint8Array(t),e,i)}function ft(t,e,i){ut.call(this,new Uint8ClampedArray(t),e,i)}function mt(t,e,i){ut.call(this,new Int16Array(t),e,i)}function gt(t,e,i){ut.call(this,new Uint16Array(t),e,i)}function vt(t,e,i){ut.call(this,new Int32Array(t),e,i)}function yt(t,e,i){ut.call(this,new Uint32Array(t),e,i)}function xt(t,e,i){ut.call(this,new Float32Array(t),e,i)}function bt(t,e,i){ut.call(this,new Float64Array(t),e,i)}/**
 * @author mrdoob / http://mrdoob.com/
 */
function _t(){this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],
// this.lineDistances = [];
this.boundingBox=null,this.boundingSphere=null,
// update flags
this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}/**
 * @author mrdoob / http://mrdoob.com/
 */
function wt(t){if(0===t.length)return-1/0;for(var e=t[0],i=1,n=t.length;i<n;++i)t[i]>e&&(e=t[i]);return e}// BufferGeometry uses odd numbers as Id
function Mt(){Object.defineProperty(this,"id",{value:Mu+=2}),this.uuid=ou.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */
// BoxGeometry
function Et(t,e,i,n,r,a){lt.call(this),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:a},this.fromBufferGeometry(new Tt(t,e,i,n,r,a)),this.mergeVertices()}
// BoxBufferGeometry
function Tt(t,e,i,n,a,o){function s(t,e,i,n,a,o,s,m,g,v,y){var x,b,_=o/g,w=s/v,M=o/2,E=s/2,T=m/2,S=g+1,A=v+1,L=0,R=0,P=new r;
// generate vertices, normals and uvs
for(b=0;b<A;b++){var C=b*w-E;for(x=0;x<S;x++){var I=x*_-M;
// set values to correct vector component
P[t]=I*n,P[e]=C*a,P[i]=T,
// now apply vector to vertex buffer
l.push(P.x,P.y,P.z),
// set values to correct vector component
P[t]=0,P[e]=0,P[i]=m>0?1:-1,
// now apply vector to normal buffer
u.push(P.x,P.y,P.z),
// uvs
d.push(x/g),d.push(1-b/v),
// counters
L+=1}}
// indices
// 1. you need three indices to draw a single face
// 2. a single segment consists of two faces
// 3. so we need to generate six (2*3) indices per segment
for(b=0;b<v;b++)for(x=0;x<g;x++){var U=p+x+S*b,N=p+x+S*(b+1),O=p+(x+1)+S*(b+1),D=p+(x+1)+S*b;
// faces
h.push(U,N,D),h.push(N,O,D),
// increase counter
R+=6}
// add a group to the geometry. this will ensure multi material support
c.addGroup(f,R,y),
// calculate new start value for groups
f+=R,
// update total number of vertices
p+=L}Mt.call(this),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:a,depthSegments:o};var c=this;t=t||1,e=e||1,i=i||1,
// segments
n=Math.floor(n)||1,a=Math.floor(a)||1;
// buffers
var h=[],l=[],u=[],d=[],p=0,f=0;
// build each side of the box geometry
s("z","y","x",-1,-1,i,e,t,o=Math.floor(o)||1,a,0),// px
s("z","y","x",1,-1,i,e,-t,o,a,1),// nx
s("x","z","y",1,1,t,i,e,n,o,2),// py
s("x","z","y",1,-1,t,i,-e,n,o,3),// ny
s("x","y","z",1,-1,t,e,i,n,a,4),// pz
s("x","y","z",-1,-1,t,e,-i,n,a,5),// nz
// build geometry
this.setIndex(h),this.addAttribute("position",new xt(l,3)),this.addAttribute("normal",new xt(u,3)),this.addAttribute("uv",new xt(d,2))}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */
// PlaneGeometry
function St(t,e,i,n){lt.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n},this.fromBufferGeometry(new At(t,e,i,n)),this.mergeVertices()}
// PlaneBufferGeometry
function At(t,e,i,n){Mt.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};var r,a,o=(t=t||1)/2,s=(e=e||1)/2,c=Math.floor(i)||1,h=Math.floor(n)||1,l=c+1,u=h+1,d=t/c,p=e/h,f=[],m=[],g=[],v=[];
// generate vertices, normals and uvs
for(a=0;a<u;a++){var y=a*p-s;for(r=0;r<l;r++){var x=r*d-o;m.push(x,-y,0),g.push(0,0,1),v.push(r/c),v.push(1-a/h)}}
// indices
for(a=0;a<h;a++)for(r=0;r<c;r++){var b=r+l*a,_=r+l*(a+1),w=r+1+l*(a+1),M=r+1+l*a;
// faces
f.push(b,_,M),f.push(_,w,M)}
// build geometry
this.setIndex(f),this.addAttribute("position",new xt(m,3)),this.addAttribute("normal",new xt(g,3)),this.addAttribute("uv",new xt(v,2))}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>
 * }
 */
function Lt(t){Z.call(this),this.type="MeshBasicMaterial",this.color=new j(16777215),// emissive
this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Yh,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(t)}/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  defines: { "label" : "value" },
 *  uniforms: { "parameter1": { value: 1.0 }, "parameter2": { value2: 2 } },
 *
 *  fragmentShader: <string>,
 *  vertexShader: <string>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  lights: <bool>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */
function Rt(t){Z.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,// set to use scene fog
this.lights=!1,// set to use scene lights
this.clipping=!1,// set to use user-defined clipping planes
this.skinning=!1,// set to use skinning attribute streams
this.morphTargets=!1,// set to use morph targets
this.morphNormals=!1,// set to use morph normals
this.extensions={derivatives:!1,// set to use derivatives
fragDepth:!1,// set to use fragment depth values
drawBuffers:!1,// set to use draw buffers
shaderTextureLOD:!1},
// When rendered geometry doesn't include these attributes but the material does,
// use these default values in WebGL. This avoids errors when buffer data is missing.
this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}/**
 * @author bhouston / http://clara.io
 */
function Pt(t,e){this.origin=void 0!==t?t:new r,this.direction=void 0!==e?e:new r}/**
 * @author bhouston / http://clara.io
 */
function Ct(t,e){this.start=void 0!==t?t:new r,this.end=void 0!==e?e:new r}/**
 * @author bhouston / http://clara.io
 * @author mrdoob / http://mrdoob.com/
 */
function It(t,e,i){this.a=void 0!==t?t:new r,this.b=void 0!==e?e:new r,this.c=void 0!==i?i:new r}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author jonobr1 / http://jonobr1.com/
 */
function Ut(t,e){ot.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new Mt,this.material=void 0!==e?e:new Lt({color:16777215*Math.random()}),this.drawMode=Yl,this.updateMorphTargets()}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Nt(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program&&e.program&&t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Ot(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Dt(){var t={};return{get:function(e,i){var n=e.id+","+i.id,r=t[n];
// console.log( 'THREE.WebGLRenderLists:', hash );
return void 0===r&&(r=new function(){var t=[],e=0,i=[],n=[];return{opaque:i,transparent:n,init:function(){e=0,i.length=0,n.length=0},push:function(r,a,o,s,c){var h=t[e];void 0===h?(h={id:r.id,object:r,geometry:a,material:o,program:o.program,renderOrder:r.renderOrder,z:s,group:c},t[e]=h):(h.id=r.id,h.object=r,h.geometry=a,h.material=o,h.program=o.program,h.renderOrder=r.renderOrder,h.z=s,h.group=c),(!0===o.transparent?n:i).push(h),e++},sort:function(){i.length>1&&i.sort(Nt),n.length>1&&n.sort(Ot)}}},t[n]=r),r},dispose:function(){t={}}}}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Ft(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Bt(){var t=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(){var t={};return{get:function(i){if(void 0!==t[i.id])return t[i.id];var n;switch(i.type){case"DirectionalLight":n={direction:new r,color:new j,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new e};break;case"SpotLight":n={position:new r,direction:new r,color:new j,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new e};break;case"PointLight":n={position:new r,color:new j,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new e,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":n={direction:new r,skyColor:new j,groundColor:new j};break;case"RectAreaLight":n={color:new j,position:new r,halfWidth:new r,halfHeight:new r}}return t[i.id]=n,n}}},n={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},a=new r,o=new i,s=new i;return{setup:function(e,i,r){for(var c=0,h=0,l=0,u=0,d=0,p=0,f=0,m=0,g=r.matrixWorldInverse,v=0,y=e.length;v<y;v++){var x=e[v],b=x.color,_=x.intensity,w=x.distance,M=x.shadow&&x.shadow.map?x.shadow.map.texture:null;if(x.isAmbientLight)c+=b.r*_,h+=b.g*_,l+=b.b*_;else if(x.isDirectionalLight)(T=t.get(x)).color.copy(x.color).multiplyScalar(x.intensity),T.direction.setFromMatrixPosition(x.matrixWorld),a.setFromMatrixPosition(x.target.matrixWorld),T.direction.sub(a),T.direction.transformDirection(g),T.shadow=x.castShadow,x.castShadow&&(E=x.shadow,T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize),n.directionalShadowMap[u]=M,n.directionalShadowMatrix[u]=x.shadow.matrix,n.directional[u]=T,u++;else if(x.isSpotLight)(T=t.get(x)).position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(g),T.color.copy(b).multiplyScalar(_),T.distance=w,T.direction.setFromMatrixPosition(x.matrixWorld),a.setFromMatrixPosition(x.target.matrixWorld),T.direction.sub(a),T.direction.transformDirection(g),T.coneCos=Math.cos(x.angle),T.penumbraCos=Math.cos(x.angle*(1-x.penumbra)),T.decay=0===x.distance?0:x.decay,T.shadow=x.castShadow,x.castShadow&&(E=x.shadow,T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize),n.spotShadowMap[p]=M,n.spotShadowMatrix[p]=x.shadow.matrix,n.spot[p]=T,p++;else if(x.isRectAreaLight)
// (a) intensity controls irradiance of entire light
(T=t.get(x)).color.copy(b).multiplyScalar(_/(x.width*x.height)),
// (b) intensity controls the radiance per light area
// uniforms.color.copy( color ).multiplyScalar( intensity );
T.position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(g),
// extract local rotation of light to derive width/height half vectors
s.identity(),o.copy(x.matrixWorld),o.premultiply(g),s.extractRotation(o),T.halfWidth.set(.5*x.width,0,0),T.halfHeight.set(0,.5*x.height,0),T.halfWidth.applyMatrix4(s),T.halfHeight.applyMatrix4(s),
// TODO (abelnation): RectAreaLight distance?
// uniforms.distance = distance;
n.rectArea[f]=T,f++;else if(x.isPointLight){if((T=t.get(x)).position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(g),T.color.copy(x.color).multiplyScalar(x.intensity),T.distance=x.distance,T.decay=0===x.distance?0:x.decay,T.shadow=x.castShadow,x.castShadow){var E=x.shadow;T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize,T.shadowCameraNear=E.camera.near,T.shadowCameraFar=E.camera.far}n.pointShadowMap[d]=M,n.pointShadowMatrix[d]=x.shadow.matrix,n.point[d]=T,d++}else if(x.isHemisphereLight){var T=t.get(x);T.direction.setFromMatrixPosition(x.matrixWorld),T.direction.transformDirection(g),T.direction.normalize(),T.skyColor.copy(x.color).multiplyScalar(_),T.groundColor.copy(x.groundColor).multiplyScalar(_),n.hemi[m]=T,m++}}n.ambient[0]=c,n.ambient[1]=h,n.ambient[2]=l,n.directional.length=u,n.spot.length=p,n.rectArea.length=f,n.point.length=d,n.hemi.length=m,
// TODO (sam-g-steel) why aren't we using join
n.hash=u+","+d+","+p+","+f+","+m+","+i.length},state:n}}function zt(t,e,i){var n=t.createShader(e);
// --enable-privileged-webgl-extension
// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );
/**
 * @author mrdoob / http://mrdoob.com/
 */
return t.shaderSource(n,i),t.compileShader(n),!1===t.getShaderParameter(n,t.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(n)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",e===t.VERTEX_SHADER?"vertex":"fragment",t.getShaderInfoLog(n),function(t){for(var e=t.split("\n"),i=0;i<e.length;i++)e[i]=i+1+": "+e[i];return e.join("\n")}(i)),n}function Gt(t){switch(t){case Ql:return["Linear","( value )"];case Kl:return["sRGB","( value )"];case tu:return["RGBE","( value )"];case eu:return["RGBM","( value, 7.0 )"];case iu:return["RGBM","( value, 16.0 )"];case nu:return["RGBD","( value, 256.0 )"];case $l:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+t)}}function Ht(t,e){var i=Gt(e);return"vec4 "+t+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function Vt(t){return""!==t}function kt(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights)}function jt(t){return t.replace(/^[ \t]*#include +<([\w\d.]+)>/gm,function(t,e){var i=yu[e];if(void 0===i)throw new Error("Can not resolve #include <"+e+">");return jt(i)})}function Wt(t){return t.replace(/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,function(t,e,i,n){for(var r="",a=parseInt(e);a<parseInt(i);a++)r+=n.replace(/\[ i \]/g,"[ "+a+" ]");return r})}function Xt(t,e,i,n,r,a){var o=t.context,s=n.defines,c=r.vertexShader,h=r.fragmentShader,l="SHADOWMAP_TYPE_BASIC";a.shadowMapType===lh?l="SHADOWMAP_TYPE_PCF":a.shadowMapType===uh&&(l="SHADOWMAP_TYPE_PCF_SOFT");var u="ENVMAP_TYPE_CUBE",d="ENVMAP_MODE_REFLECTION",p="ENVMAP_BLENDING_MULTIPLY";if(a.envMap){switch(n.envMap.mapping){case il:case nl:u="ENVMAP_TYPE_CUBE";break;case sl:case cl:u="ENVMAP_TYPE_CUBE_UV";break;case rl:case al:u="ENVMAP_TYPE_EQUIREC";break;case ol:u="ENVMAP_TYPE_SPHERE"}switch(n.envMap.mapping){case nl:case al:d="ENVMAP_MODE_REFRACTION"}switch(n.combine){case Yh:p="ENVMAP_BLENDING_MULTIPLY";break;case Zh:p="ENVMAP_BLENDING_MIX";break;case Jh:p="ENVMAP_BLENDING_ADD"}}var f,m,g=t.gammaFactor>0?t.gammaFactor:1,v=function(t,e,i){return[(t=t||{}).derivatives||e.envMapCubeUV||e.bumpMap||e.normalMap||e.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||e.logarithmicDepthBuffer)&&i.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&i.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||e.envMap)&&i.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Vt).join("\n")}(n.extensions,a,e),y=function(t){var e=[];for(var i in t){var n=t[i];!1!==n&&e.push("#define "+i+" "+n)}return e.join("\n")}(s),x=o.createProgram();n.isRawShaderMaterial?((f=[y].filter(Vt).join("\n")).length>0&&(f+="\n"),(m=[v,y].filter(Vt).join("\n")).length>0&&(m+="\n")):(f=["precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+r.name,y,a.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+g,"#define MAX_BONES "+a.maxBones,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+d:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexColors?"#define USE_COLOR":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.useVertexTexture?"#define BONE_TEXTURE":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&&!1===a.flatShading?"#define USE_MORPHNORMALS":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+a.numClippingPlanes,a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+l:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&e.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Vt).join("\n"),m=[v,"precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+r.name,y,a.alphaTest?"#define ALPHATEST "+a.alphaTest:"","#define GAMMA_FACTOR "+g,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+u:"",a.envMap?"#define "+d:"",a.envMap?"#define "+p:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexColors?"#define USE_COLOR":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+a.numClippingPlanes,"#define UNION_CLIPPING_PLANES "+(a.numClippingPlanes-a.numClipIntersection),a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+l:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&e.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",a.envMap&&e.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",a.toneMapping!==Qh?"#define TONE_MAPPING":"",a.toneMapping!==Qh?yu.tonemapping_pars_fragment:"",// this code is required here because it is used by the toneMapping() function defined below
a.toneMapping!==Qh?function(t,e){var i;switch(e){case Kh:i="Linear";break;case $h:i="Reinhard";break;case tl:i="Uncharted2";break;case el:i="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}("toneMapping",a.toneMapping):"",a.dithering?"#define DITHERING":"",a.outputEncoding||a.mapEncoding||a.envMapEncoding||a.emissiveMapEncoding?yu.encodings_pars_fragment:"",// this code is required here because it is used by the various encoding/decoding function defined below
a.mapEncoding?Ht("mapTexelToLinear",a.mapEncoding):"",a.envMapEncoding?Ht("envMapTexelToLinear",a.envMapEncoding):"",a.emissiveMapEncoding?Ht("emissiveMapTexelToLinear",a.emissiveMapEncoding):"",a.outputEncoding?function(t,e){var i=Gt(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}("linearToOutputTexel",a.outputEncoding):"",a.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Vt).join("\n")),c=kt(c=jt(c),a),h=kt(h=jt(h),a),n.isShaderMaterial||(c=Wt(c),h=Wt(h));var b=f+c,_=m+h,w=zt(o,o.VERTEX_SHADER,b),M=zt(o,o.FRAGMENT_SHADER,_);o.attachShader(x,w),o.attachShader(x,M),
// Force a particular attribute to index 0.
void 0!==n.index0AttributeName?o.bindAttribLocation(x,0,n.index0AttributeName):!0===a.morphTargets&&
// programs with morphTargets displace position out of attribute 0
o.bindAttribLocation(x,0,"position"),o.linkProgram(x);var E=o.getProgramInfoLog(x),T=o.getShaderInfoLog(w),S=o.getShaderInfoLog(M),A=!0,L=!0;
// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );
// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );
!1===o.getProgramParameter(x,o.LINK_STATUS)?(A=!1,console.error("THREE.WebGLProgram: shader error: ",o.getError(),"gl.VALIDATE_STATUS",o.getProgramParameter(x,o.VALIDATE_STATUS),"gl.getProgramInfoLog",E,T,S)):""!==E?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",E):""!==T&&""!==S||(L=!1),L&&(this.diagnostics={runnable:A,material:n,programLog:E,vertexShader:{log:T,prefix:f},fragmentShader:{log:S,prefix:m}}),
// clean up
o.deleteShader(w),o.deleteShader(M);
// set up caching for uniform locations
var R;this.getUniforms=function(){return void 0===R&&(R=new k(o,x,t)),R};
// set up caching for attribute locations
var P;
// free resource
// DEPRECATED
//
return this.getAttributes=function(){return void 0===P&&(P=function(t,e){for(var i={},n=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES),r=0;r<n;r++){var a=t.getActiveAttrib(e,r).name;
// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );
i[a]=t.getAttribLocation(e,a)}return i}(o,x)),P},this.destroy=function(){o.deleteProgram(x),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=Eu++,this.code=i,this.usedTimes=1,this.program=x,this.vertexShader=w,this.fragmentShader=M,this}/**
 * @author mrdoob / http://mrdoob.com/
 */
function qt(t,e,i){function n(t,e){var i;
// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.
return t?t.isTexture?i=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),i=t.texture.encoding):i=Ql,i===Ql&&e&&(i=$l),i}var r=[],a={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow"},o=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering"];this.getParameters=function(e,r,o,s,c,h,l){var u=a[e.type],d=l.isSkinnedMesh?function(t){var e=t.skeleton.bones;if(i.floatVertexTextures)return 1024;
// default for when object is not specified
// ( for example when prebuilding shader to be used with multiple objects )
//
//  - leave some extra space for other uniforms
//  - limit here is ANGLE's 254 max uniform vectors
//    (up to 54 should be safe)
var n=i.maxVertexUniforms,r=Math.floor((n-20)/4),a=Math.min(r,e.length);return a<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+a+"."),0):a}(l):0,p=i.precision;null!==e.precision&&(p=i.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",p,"instead.");var f=t.getRenderTarget();return{shaderID:u,precision:p,supportsVertexTextures:i.vertexTextures,outputEncoding:n(f?f.texture:null,t.gammaOutput),map:!!e.map,mapEncoding:n(e.map,t.gammaInput),envMap:!!e.envMap,envMapMode:e.envMap&&e.envMap.mapping,envMapEncoding:n(e.envMap,t.gammaInput),envMapCubeUV:!!e.envMap&&(e.envMap.mapping===sl||e.envMap.mapping===cl),lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:n(e.emissiveMap,t.gammaInput),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,combine:e.combine,vertexColors:e.vertexColors,fog:!!s,useFog:e.fog,fogExp:s&&s.isFogExp2,flatShading:e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:i.logarithmicDepthBuffer,skinning:e.skinning&&d>0,maxBones:d,useVertexTexture:i.floatVertexTextures,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:r.directional.length,numPointLights:r.point.length,numSpotLights:r.spot.length,numRectAreaLights:r.rectArea.length,numHemiLights:r.hemi.length,numClippingPlanes:c,numClipIntersection:h,dithering:e.dithering,shadowMapEnabled:t.shadowMap.enabled&&l.receiveShadow&&o.length>0,shadowMapType:t.shadowMap.type,toneMapping:t.toneMapping,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===fh,flipSided:e.side===ph,depthPacking:void 0!==e.depthPacking&&e.depthPacking}},this.getProgramCode=function(e,i){var n=[];if(i.shaderID?n.push(i.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(var r in e.defines)n.push(r),n.push(e.defines[r]);for(var a=0;a<o.length;a++)n.push(i[o[a]]);return n.push(e.onBeforeCompile.toString()),n.push(t.gammaOutput),n.join()},this.acquireProgram=function(i,n,a,o){
// Check if code has been already compiled
for(var s,c=0,h=r.length;c<h;c++){var l=r[c];if(l.code===o){++(s=l).usedTimes;break}}return void 0===s&&(s=new Xt(t,e,o,i,n,a),r.push(s)),s},this.releaseProgram=function(t){if(0==--t.usedTimes){
// Remove from unordered set
var e=r.indexOf(t);r[e]=r[r.length-1],r.pop(),
// Free WebGL resources
t.destroy()}},
// Exposed for resource monitoring & error feedback via renderer.info:
this.programs=r}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Yt(t,e,i,n,r,a,o){
//
function s(t,e){if(t.width>e||t.height>e){
// Warning: Scaling through the canvas will only work with images that use
// premultiplied alpha.
var i=e/Math.max(t.width,t.height),n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");n.width=Math.floor(t.width*i),n.height=Math.floor(t.height*i);return n.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,n.width,n.height),console.warn("THREE.WebGLRenderer: image is too big ("+t.width+"x"+t.height+"). Resized to "+n.width+"x"+n.height,t),n}return t}function c(t){return ou.isPowerOfTwo(t.width)&&ou.isPowerOfTwo(t.height)}function h(t,e){return t.generateMipmaps&&e&&t.minFilter!==dl&&t.minFilter!==ml}
// Fallback filters for non-power-of-2 textures
function l(e){return e===dl||e===pl||e===fl?t.NEAREST:t.LINEAR}
//
function u(e){var i=e.target;i.removeEventListener("dispose",u),
//
function(e){var i=n.get(e);if(e.image&&i.__image__webglTextureCube)
// cube texture
t.deleteTexture(i.__image__webglTextureCube);else{
// 2D texture
if(void 0===i.__webglInit)return;t.deleteTexture(i.__webglTexture)}
// remove all webgl properties
n.remove(e)}(i),o.textures--}function d(e){var i=e.target;i.removeEventListener("dispose",d),function(e){var i=n.get(e),r=n.get(e.texture);if(!e)return;void 0!==r.__webglTexture&&t.deleteTexture(r.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLRenderTargetCube)for(var a=0;a<6;a++)t.deleteFramebuffer(i.__webglFramebuffer[a]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[a]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer);n.remove(e.texture),n.remove(e)}(i),o.textures--}
//
function p(e,l){var d=n.get(e);if(e.version>0&&d.__version!==e.version){var p=e.image;if(void 0===p)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",e);else{if(!1!==p.complete)return void function(e,n,l){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",u),e.__webglTexture=t.createTexture(),o.textures++);i.activeTexture(t.TEXTURE0+l),i.bindTexture(t.TEXTURE_2D,e.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,n.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,n.unpackAlignment);var d=s(n.image,r.maxTextureSize);(function(t){return t.wrapS!==ll||t.wrapT!==ll||t.minFilter!==dl&&t.minFilter!==ml})(n)&&!1===c(d)&&(d=function(t){if(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement||t instanceof ImageBitmap){var e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.width=ou.floorPowerOfTwo(t.width),e.height=ou.floorPowerOfTwo(t.height),e.getContext("2d").drawImage(t,0,0,e.width,e.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+t.width+"x"+t.height+"). Resized to "+e.width+"x"+e.height,t),e}return t}(d));var p=c(d),m=a.convert(n.format),g=a.convert(n.type);f(t.TEXTURE_2D,n,p);var v,x=n.mipmaps;if(n.isDepthTexture){
// populate depth texture with dummy data
var b=t.DEPTH_COMPONENT;if(n.type===El){if(!y)throw new Error("Float Depth Texture only supported in WebGL2.0");b=t.DEPTH_COMPONENT32F}else y&&(
// WebGL 2.0 requires signed internalformat for glTexImage2D
b=t.DEPTH_COMPONENT16);n.format===Ol&&b===t.DEPTH_COMPONENT&&n.type!==_l&&n.type!==Ml&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=_l,g=a.convert(n.type)),
// Depth stencil textures need the DEPTH_STENCIL internal format
// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
n.format===Dl&&(b=t.DEPTH_STENCIL,
// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are
// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.
// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
n.type!==Rl&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=Rl,g=a.convert(n.type))),i.texImage2D(t.TEXTURE_2D,0,b,d.width,d.height,0,m,g,null)}else if(n.isDataTexture)
// use manually created mipmaps if available
// if there are no manual mipmaps
// set 0 level mipmap and then use GL to generate other mipmap levels
if(x.length>0&&p){for(var _=0,w=x.length;_<w;_++)v=x[_],i.texImage2D(t.TEXTURE_2D,_,m,v.width,v.height,0,m,g,v.data);n.generateMipmaps=!1}else i.texImage2D(t.TEXTURE_2D,0,m,d.width,d.height,0,m,g,d.data);else if(n.isCompressedTexture)for(var _=0,w=x.length;_<w;_++)v=x[_],n.format!==Il&&n.format!==Cl?i.getCompressedTextureFormats().indexOf(m)>-1?i.compressedTexImage2D(t.TEXTURE_2D,_,m,v.width,v.height,0,v.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(t.TEXTURE_2D,_,m,v.width,v.height,0,m,g,v.data);else
// regular Texture (image, video, canvas)
// use manually created mipmaps if available
// if there are no manual mipmaps
// set 0 level mipmap and then use GL to generate other mipmap levels
if(x.length>0&&p){for(var _=0,w=x.length;_<w;_++)v=x[_],i.texImage2D(t.TEXTURE_2D,_,m,m,g,v);n.generateMipmaps=!1}else i.texImage2D(t.TEXTURE_2D,0,m,m,g,d);h(n,p)&&t.generateMipmap(t.TEXTURE_2D);e.__version=n.version,n.onUpdate&&n.onUpdate(n)}(d,e,l);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",e)}}i.activeTexture(t.TEXTURE0+l),i.bindTexture(t.TEXTURE_2D,d.__webglTexture)}function f(i,o,s){var c;if(s?(t.texParameteri(i,t.TEXTURE_WRAP_S,a.convert(o.wrapS)),t.texParameteri(i,t.TEXTURE_WRAP_T,a.convert(o.wrapT)),t.texParameteri(i,t.TEXTURE_MAG_FILTER,a.convert(o.magFilter)),t.texParameteri(i,t.TEXTURE_MIN_FILTER,a.convert(o.minFilter))):(t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),o.wrapS===ll&&o.wrapT===ll||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",o),t.texParameteri(i,t.TEXTURE_MAG_FILTER,l(o.magFilter)),t.texParameteri(i,t.TEXTURE_MIN_FILTER,l(o.minFilter)),o.minFilter!==dl&&o.minFilter!==ml&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",o)),c=e.get("EXT_texture_filter_anisotropic")){if(o.type===El&&null===e.get("OES_texture_float_linear"))return;if(o.type===Tl&&null===e.get("OES_texture_half_float_linear"))return;(o.anisotropy>1||n.get(o).__currentAnisotropy)&&(t.texParameterf(i,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,r.getMaxAnisotropy())),n.get(o).__currentAnisotropy=o.anisotropy)}}
// Render targets
// Setup storage for target texture and bind it to correct framebuffer
function m(e,r,o,s){var c=a.convert(r.texture.format),h=a.convert(r.texture.type);i.texImage2D(s,0,c,r.width,r.height,0,c,h,null),t.bindFramebuffer(t.FRAMEBUFFER,e),t.framebufferTexture2D(t.FRAMEBUFFER,o,s,n.get(r.texture).__webglTexture,0),t.bindFramebuffer(t.FRAMEBUFFER,null)}
// Setup storage for internal depth/stencil buffers and bind to correct framebuffer
function g(e,i){t.bindRenderbuffer(t.RENDERBUFFER,e),i.depthBuffer&&!i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)):i.depthBuffer&&i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)):
// FIXME: We don't support !depth !stencil
t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,i.width,i.height),t.bindRenderbuffer(t.RENDERBUFFER,null)}
// Setup GL resources for a non-texture depth buffer
function v(e){var i=n.get(e),r=!0===e.isWebGLRenderTargetCube;if(e.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!
// Setup resources for a Depth Texture for a FBO (needs an extension)
function(e,i){if(i&&i.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(t.FRAMEBUFFER,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
// upload an empty depth texture with framebuffer size
n.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),p(i.depthTexture,0);var r=n.get(i.depthTexture).__webglTexture;if(i.depthTexture.format===Ol)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,r,0);else{if(i.depthTexture.format!==Dl)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,r,0)}}(i.__webglFramebuffer,e)}else if(r){i.__webglDepthbuffer=[];for(var a=0;a<6;a++)t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer[a]),i.__webglDepthbuffer[a]=t.createRenderbuffer(),g(i.__webglDepthbuffer[a],e)}else t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer),i.__webglDepthbuffer=t.createRenderbuffer(),g(i.__webglDepthbuffer,e);t.bindFramebuffer(t.FRAMEBUFFER,null)}var y="undefined"!=typeof WebGL2RenderingContext&&t instanceof window.WebGL2RenderingContext;this.setTexture2D=p,this.setTextureCube=function(e,l){var d=n.get(e);if(6===e.image.length)if(e.version>0&&d.__version!==e.version){d.__image__webglTextureCube||(e.addEventListener("dispose",u),d.__image__webglTextureCube=t.createTexture(),o.textures++),i.activeTexture(t.TEXTURE0+l),i.bindTexture(t.TEXTURE_CUBE_MAP,d.__image__webglTextureCube),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var p=e&&e.isCompressedTexture,m=e.image[0]&&e.image[0].isDataTexture,g=[],v=0;v<6;v++)g[v]=p||m?m?e.image[v].image:e.image[v]:s(e.image[v],r.maxCubemapSize);var y=c(g[0]),x=a.convert(e.format),b=a.convert(e.type);for(f(t.TEXTURE_CUBE_MAP,e,y),v=0;v<6;v++)if(p)for(var _,w=g[v].mipmaps,M=0,E=w.length;M<E;M++)_=w[M],e.format!==Il&&e.format!==Cl?i.getCompressedTextureFormats().indexOf(x)>-1?i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+v,M,x,_.width,_.height,0,_.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+v,M,x,_.width,_.height,0,x,b,_.data);else m?i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+v,0,x,g[v].width,g[v].height,0,x,b,g[v].data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+v,0,x,x,b,g[v]);h(e,y)&&t.generateMipmap(t.TEXTURE_CUBE_MAP),d.__version=e.version,e.onUpdate&&e.onUpdate(e)}else i.activeTexture(t.TEXTURE0+l),i.bindTexture(t.TEXTURE_CUBE_MAP,d.__image__webglTextureCube)},this.setTextureCubeDynamic=function(e,r){i.activeTexture(t.TEXTURE0+r),i.bindTexture(t.TEXTURE_CUBE_MAP,n.get(e).__webglTexture)},this.setupRenderTarget=
// Set up GL resources for the render target
function(e){var r=n.get(e),a=n.get(e.texture);e.addEventListener("dispose",d),a.__webglTexture=t.createTexture(),o.textures++;var s=!0===e.isWebGLRenderTargetCube,l=c(e);
// Setup framebuffer
if(s)for(r.__webglFramebuffer=[],u=0;u<6;u++)r.__webglFramebuffer[u]=t.createFramebuffer();else r.__webglFramebuffer=t.createFramebuffer();
// Setup color buffer
if(s){i.bindTexture(t.TEXTURE_CUBE_MAP,a.__webglTexture),f(t.TEXTURE_CUBE_MAP,e.texture,l);for(var u=0;u<6;u++)m(r.__webglFramebuffer[u],e,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+u);h(e.texture,l)&&t.generateMipmap(t.TEXTURE_CUBE_MAP),i.bindTexture(t.TEXTURE_CUBE_MAP,null)}else i.bindTexture(t.TEXTURE_2D,a.__webglTexture),f(t.TEXTURE_2D,e.texture,l),m(r.__webglFramebuffer,e,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),h(e.texture,l)&&t.generateMipmap(t.TEXTURE_2D),i.bindTexture(t.TEXTURE_2D,null);
// Setup depth and stencil buffers
e.depthBuffer&&v(e)},this.updateRenderTargetMipmap=function(e){var r=e.texture;if(h(r,c(e))){var a=e.isWebGLRenderTargetCube?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,o=n.get(r).__webglTexture;i.bindTexture(a,o),t.generateMipmap(a),i.bindTexture(a,null)}}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author greggman / http://games.greggman.com/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author tschw
 */
function Zt(t,e,i,n){st.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==i?i:.1,this.far=void 0!==n?n:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,// width of the film (default in millimeters)
this.filmOffset=0,// horizontal film offset (same unit as gauge)
this.updateProjectionMatrix()}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Jt(t){Zt.call(this),this.cameras=t||[]}/**
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author szimek / https://github.com/szimek/
 * @author tschw
 */
function Qt(t){function e(){return null===D?K:1}function n(){(xt=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t){var e={};return{get:function(i){if(void 0!==e[i])return e[i];var n;switch(i){case"WEBGL_depth_texture":n=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":n=t.getExtension("WEBGL_compressed_texture_etc1");break;default:n=t.getExtension(i)}return null===n&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),e[i]=n,n}}}(mt)).get("WEBGL_depth_texture"),xt.get("OES_texture_float"),xt.get("OES_texture_float_linear"),xt.get("OES_texture_half_float"),xt.get("OES_texture_half_float_linear"),xt.get("OES_standard_derivatives"),xt.get("OES_element_index_uint"),xt.get("ANGLE_instanced_arrays"),Xt=new/**
 * @author thespite / http://www.twitter.com/thespite
 */
function(t,e){return{convert:function(i){var n;if(i===hl)return t.REPEAT;if(i===ll)return t.CLAMP_TO_EDGE;if(i===ul)return t.MIRRORED_REPEAT;if(i===dl)return t.NEAREST;if(i===pl)return t.NEAREST_MIPMAP_NEAREST;if(i===fl)return t.NEAREST_MIPMAP_LINEAR;if(i===ml)return t.LINEAR;if(i===gl)return t.LINEAR_MIPMAP_NEAREST;if(i===vl)return t.LINEAR_MIPMAP_LINEAR;if(i===yl)return t.UNSIGNED_BYTE;if(i===Sl)return t.UNSIGNED_SHORT_4_4_4_4;if(i===Al)return t.UNSIGNED_SHORT_5_5_5_1;if(i===Ll)return t.UNSIGNED_SHORT_5_6_5;if(i===xl)return t.BYTE;if(i===bl)return t.SHORT;if(i===_l)return t.UNSIGNED_SHORT;if(i===wl)return t.INT;if(i===Ml)return t.UNSIGNED_INT;if(i===El)return t.FLOAT;if(i===Tl&&null!==(n=e.get("OES_texture_half_float")))return n.HALF_FLOAT_OES;if(i===Pl)return t.ALPHA;if(i===Cl)return t.RGB;if(i===Il)return t.RGBA;if(i===Ul)return t.LUMINANCE;if(i===Nl)return t.LUMINANCE_ALPHA;if(i===Ol)return t.DEPTH_COMPONENT;if(i===Dl)return t.DEPTH_STENCIL;if(i===Eh)return t.FUNC_ADD;if(i===Th)return t.FUNC_SUBTRACT;if(i===Sh)return t.FUNC_REVERSE_SUBTRACT;if(i===Rh)return t.ZERO;if(i===Ph)return t.ONE;if(i===Ch)return t.SRC_COLOR;if(i===Ih)return t.ONE_MINUS_SRC_COLOR;if(i===Uh)return t.SRC_ALPHA;if(i===Nh)return t.ONE_MINUS_SRC_ALPHA;if(i===Oh)return t.DST_ALPHA;if(i===Dh)return t.ONE_MINUS_DST_ALPHA;if(i===Fh)return t.DST_COLOR;if(i===Bh)return t.ONE_MINUS_DST_COLOR;if(i===zh)return t.SRC_ALPHA_SATURATE;if((i===Fl||i===Bl||i===zl||i===Gl)&&null!==(n=e.get("WEBGL_compressed_texture_s3tc"))){if(i===Fl)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Bl)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===zl)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Gl)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((i===Hl||i===Vl||i===kl||i===jl)&&null!==(n=e.get("WEBGL_compressed_texture_pvrtc"))){if(i===Hl)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===Vl)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===kl)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===jl)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i===Wl&&null!==(n=e.get("WEBGL_compressed_texture_etc1")))return n.COMPRESSED_RGB_ETC1_WEBGL;if((i===Ah||i===Lh)&&null!==(n=e.get("EXT_blend_minmax"))){if(i===Ah)return n.MIN_EXT;if(i===Lh)return n.MAX_EXT}return i===Rl&&null!==(n=e.get("WEBGL_depth_texture"))?n.UNSIGNED_INT_24_8_WEBGL:0}}}(mt,xt),bt=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e,i){function n(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var r,a=void 0!==i.precision?i.precision:"highp",o=n(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);var s=!0===i.logarithmicDepthBuffer,c=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),h=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),l=t.getParameter(t.MAX_TEXTURE_SIZE),u=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),d=t.getParameter(t.MAX_VERTEX_ATTRIBS),p=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),f=t.getParameter(t.MAX_VARYING_VECTORS),m=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),g=h>0,v=!!e.get("OES_texture_float");return{getMaxAnisotropy:function(){if(void 0!==r)return r;var i=e.get("EXT_texture_filter_anisotropic");return r=null!==i?t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:n,precision:a,logarithmicDepthBuffer:s,maxTextures:c,maxVertexTextures:h,maxTextureSize:l,maxCubemapSize:u,maxAttributes:d,maxVertexUniforms:p,maxVaryings:f,maxFragmentUniforms:m,vertexTextures:g,floatFragmentTextures:v,floatVertexTextures:g&&v}}(mt,xt,t),(_t=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e,i){function n(e,i,n){var r=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(var o=0;o<n;o++)t.texImage2D(i+o,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,r);return a}function r(e){!0!==x[e]&&(t.enable(e),x[e]=!0)}function a(e){!1!==x[e]&&(t.disable(e),x[e]=!1)}function o(e,n,o,s,c,h,l,u){if(e!==yh?r(t.BLEND):a(t.BLEND),e!==Mh){if(e!==w||u!==R)switch(e){case bh:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE,t.ONE,t.ONE)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.SRC_ALPHA,t.ONE));break;case _h:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR));break;case wh:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.SRC_COLOR));break;default:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA))}M=null,E=null,T=null,S=null,A=null,L=null}else c=c||n,h=h||o,l=l||s,n===M&&c===S||(t.blendEquationSeparate(i.convert(n),i.convert(c)),M=n,S=c),o===E&&s===T&&h===A&&l===L||(t.blendFuncSeparate(i.convert(o),i.convert(s),i.convert(h),i.convert(l)),E=o,T=s,A=h,L=l);w=e,R=u}
//
function c(e){P!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),P=e)}function h(e){e!==oh?(r(t.CULL_FACE),e!==C&&(e===sh?t.cullFace(t.BACK):e===ch?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):a(t.CULL_FACE),C=e}function l(e,i,n){e?(r(t.POLYGON_OFFSET_FILL),U===i&&N===n||(t.polygonOffset(i,n),U=i,N=n)):a(t.POLYGON_OFFSET_FILL)}
// texture
function u(e){void 0===e&&(e=t.TEXTURE0+O-1),B!==e&&(t.activeTexture(e),B=e)}
//
var d=new function(){var e=!1,i=new s,n=null,r=new s(0,0,0,0);return{setMask:function(i){n===i||e||(t.colorMask(i,i,i,i),n=i)},setLocked:function(t){e=t},setClear:function(e,n,a,o,s){!0===s&&(e*=o,n*=o,a*=o),i.set(e,n,a,o),!1===r.equals(i)&&(t.clearColor(e,n,a,o),r.copy(i))},reset:function(){e=!1,n=null,r.set(-1,0,0,0)}}},p=new function(){var e=!1,i=null,n=null,o=null;return{setTest:function(e){e?r(t.DEPTH_TEST):a(t.DEPTH_TEST)},setMask:function(n){i===n||e||(t.depthMask(n),i=n)},setFunc:function(e){if(n!==e){if(e)switch(e){case Gh:t.depthFunc(t.NEVER);break;case Hh:t.depthFunc(t.ALWAYS);break;case Vh:t.depthFunc(t.LESS);break;case kh:t.depthFunc(t.LEQUAL);break;case jh:t.depthFunc(t.EQUAL);break;case Wh:t.depthFunc(t.GEQUAL);break;case Xh:t.depthFunc(t.GREATER);break;case qh:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}else t.depthFunc(t.LEQUAL);n=e}},setLocked:function(t){e=t},setClear:function(e){o!==e&&(t.clearDepth(e),o=e)},reset:function(){e=!1,i=null,n=null,o=null}}},f=new function(){var e=!1,i=null,n=null,o=null,s=null,c=null,h=null,l=null,u=null;return{setTest:function(e){e?r(t.STENCIL_TEST):a(t.STENCIL_TEST)},setMask:function(n){i===n||e||(t.stencilMask(n),i=n)},setFunc:function(e,i,r){n===e&&o===i&&s===r||(t.stencilFunc(e,i,r),n=e,o=i,s=r)},setOp:function(e,i,n){c===e&&h===i&&l===n||(t.stencilOp(e,i,n),c=e,h=i,l=n)},setLocked:function(t){e=t},setClear:function(e){u!==e&&(t.clearStencil(e),u=e)},reset:function(){e=!1,i=null,n=null,o=null,s=null,c=null,h=null,l=null,u=null}}},m=t.getParameter(t.MAX_VERTEX_ATTRIBS),g=new Uint8Array(m),v=new Uint8Array(m),y=new Uint8Array(m),x={},b=null,_=null,w=null,M=null,E=null,T=null,S=null,A=null,L=null,R=!1,P=null,C=null,I=null,U=null,N=null,O=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS),D=parseFloat(/^WebGL\ ([0-9])/.exec(t.getParameter(t.VERSION))[1]),F=parseFloat(D)>=1,B=null,z={},G=new s,H=new s,V={};
// init
return V[t.TEXTURE_2D]=n(t.TEXTURE_2D,t.TEXTURE_2D,1),V[t.TEXTURE_CUBE_MAP]=n(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),d.setClear(0,0,0,1),p.setClear(1),f.setClear(0),r(t.DEPTH_TEST),p.setFunc(kh),c(!1),h(sh),r(t.CULL_FACE),r(t.BLEND),o(xh),{buffers:{color:d,depth:p,stencil:f},initAttributes:
//
function(){for(var t=0,e=g.length;t<e;t++)g[t]=0},enableAttribute:function(i){g[i]=1,0===v[i]&&(t.enableVertexAttribArray(i),v[i]=1),0!==y[i]&&(e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i,0),y[i]=0)},enableAttributeAndDivisor:function(i,n){g[i]=1,0===v[i]&&(t.enableVertexAttribArray(i),v[i]=1),y[i]!==n&&(e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i,n),y[i]=n)},disableUnusedAttributes:function(){for(var e=0,i=v.length;e!==i;++e)v[e]!==g[e]&&(t.disableVertexAttribArray(e),v[e]=0)},enable:r,disable:a,getCompressedTextureFormats:function(){if(null===b&&(b=[],e.get("WEBGL_compressed_texture_pvrtc")||e.get("WEBGL_compressed_texture_s3tc")||e.get("WEBGL_compressed_texture_etc1")))for(var i=t.getParameter(t.COMPRESSED_TEXTURE_FORMATS),n=0;n<i.length;n++)b.push(i[n]);return b},useProgram:function(e){return _!==e&&(t.useProgram(e),_=e,!0)},setBlending:o,setMaterial:function(e){e.side===fh?a(t.CULL_FACE):r(t.CULL_FACE),c(e.side===ph),!0===e.transparent?o(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):o(yh),p.setFunc(e.depthFunc),p.setTest(e.depthTest),p.setMask(e.depthWrite),d.setMask(e.colorWrite),l(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:c,setCullFace:h,setLineWidth:function(e){e!==I&&(F&&t.lineWidth(e),I=e)},setPolygonOffset:l,setScissorTest:function(e){e?r(t.SCISSOR_TEST):a(t.SCISSOR_TEST)},activeTexture:u,bindTexture:function(e,i){null===B&&u();var n=z[B];void 0===n&&(n={type:void 0,texture:void 0},z[B]=n),n.type===e&&n.texture===i||(t.bindTexture(e,i||V[e]),n.type=e,n.texture=i)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:
//
function(e){!1===G.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),G.copy(e))},viewport:function(e){!1===H.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),H.copy(e))},reset:
//
function(){for(var e=0;e<v.length;e++)1===v[e]&&(t.disableVertexAttribArray(e),v[e]=0);x={},b=null,B=null,z={},_=null,w=null,P=null,C=null,d.reset(),p.reset(),f.reset()}}}(mt,xt,Xt)).scissor(W.copy(rt).multiplyScalar(K)),_t.viewport(V.copy($).multiplyScalar(K)),Et=new/**
 * @author fordacious / fordacious.github.io
 */
function(){var t={};return{get:function(e){var i=e.uuid,n=t[i];return void 0===n&&(n={},t[i]=n),n},remove:function(e){delete t[e.uuid]},clear:function(){t={}}}},St=new Yt(mt,xt,_t,Et,bt,Xt,pt),Pt=new nt(mt),Ct=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e,i){function n(t){var o=t.target,s=r[o.id];null!==s.index&&e.remove(s.index);for(var c in s.attributes)e.remove(s.attributes[c]);o.removeEventListener("dispose",n),delete r[o.id];
// TODO Remove duplicate code
var h=a[o.id];h&&(e.remove(h),delete a[o.id]),(h=a[s.id])&&(e.remove(h),delete a[s.id]),
//
i.geometries--}var r={},a={};return{get:function(t,e){var a=r[e.id];return a||(e.addEventListener("dispose",n),e.isBufferGeometry?a=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new Mt).setFromObject(t)),a=e._bufferGeometry),r[e.id]=a,i.geometries++,a)},update:function(i){var n=i.index,r=i.attributes;null!==n&&e.update(n,t.ELEMENT_ARRAY_BUFFER);for(var a in r)e.update(r[a],t.ARRAY_BUFFER);
// morph targets
var o=i.morphAttributes;for(var a in o)for(var s=o[a],c=0,h=s.length;c<h;c++)e.update(s[c],t.ARRAY_BUFFER)},getWireframeAttribute:function(i){var n=a[i.id];if(n)return n;var r=[],o=i.index,s=i.attributes;
// console.time( 'wireframe' );
if(null!==o)for(var c=0,h=(p=o.array).length;c<h;c+=3){var l=p[c+0],u=p[c+1],d=p[c+2];r.push(l,u,u,d,d,l)}else for(var p=s.position.array,c=0,h=p.length/3-1;c<h;c+=3){var l=c+0,u=c+1,d=c+2;r.push(l,u,u,d,d,l)}
// console.timeEnd( 'wireframe' );
return n=new(wt(r)>65535?yt:gt)(r,1),e.update(n,t.ELEMENT_ARRAY_BUFFER),a[i.id]=n,n}}}(mt,Pt,pt),It=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e){var i={};return{update:function(n){var r=e.frame,a=n.geometry,o=t.get(n,a);
// Update once per frame
return i[o.id]!==r&&(a.isGeometry&&o.updateFromObject(n),t.update(o),i[o.id]=r),o},clear:function(){i={}}}}(Ct,ft),Ht=new function(t){var e={},i=new Float32Array(8);return{update:function(n,r,a,o){var s=n.morphTargetInfluences,c=s.length,h=e[r.id];if(void 0===h){for(
// initialise list
h=[],d=0;d<c;d++)h[d]=[d,0];e[r.id]=h}
// Remove current morphAttributes
for(var l=a.morphTargets&&r.morphAttributes.position,u=a.morphNormals&&r.morphAttributes.normal,d=0;d<c;d++)0!==(p=h[d])[1]&&(l&&r.removeAttribute("morphTarget"+d),u&&r.removeAttribute("morphNormal"+d));
// Collect influences
for(d=0;d<c;d++)(p=h[d])[0]=d,p[1]=s[d];
// Add morphAttributes
for(h.sort(Ft),d=0;d<8;d++){var p=h[d];if(p){var f=p[0],m=p[1];if(m){l&&r.addAttribute("morphTarget"+d,l[f]),u&&r.addAttribute("morphNormal"+d,u[f]),i[d]=m;continue}}i[d]=0}o.getUniforms().setValue(t,"morphTargetInfluences",i)}}}(mt),Ot=new qt(N,xt,bt),Nt=new Bt,zt=new Dt,Gt=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e,i,n){function r(t,i){e.buffers.color.setClear(t.r,t.g,t.b,i,n)}var a,o,s,c=new j(0),h=0;return{getClearColor:function(){return c},setClearColor:function(t,e){c.set(t),r(c,h=void 0!==e?e:1)},getClearAlpha:function(){return h},setClearAlpha:function(t){r(c,h=t)},render:function(e,n,l,u){var d=n.background;null===d?r(c,h):d&&d.isColor&&(r(d,1),u=!0),(t.autoClear||u)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),d&&d.isCubeTexture?(void 0===s&&((s=new Ut(new Tt(1,1,1),new Rt({uniforms:xu.cube.uniforms,vertexShader:xu.cube.vertexShader,fragmentShader:xu.cube.fragmentShader,side:ph,depthTest:!0,depthWrite:!1,fog:!1}))).geometry.removeAttribute("normal"),s.geometry.removeAttribute("uv"),s.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)},i.update(s.geometry)),s.material.uniforms.tCube.value=d,e.push(s,s.geometry,s.material,0,null)):d&&d.isTexture&&(void 0===a&&(a=new ct(-1,1,1,-1,0,1),o=new Ut(new At(2,2),new Lt({depthTest:!1,depthWrite:!1,fog:!1})),i.update(o.geometry)),o.material.map=d,
// TODO Push this to renderList
t.renderBufferDirect(a,null,o.geometry,o.material,o,null))}}}(N,_t,Ct,A),Vt=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e,i){var n;
//
this.setMode=function(t){n=t},this.render=function(e,r){t.drawArrays(n,e,r),i.calls++,i.vertices+=r,n===t.TRIANGLES?i.faces+=r/3:n===t.POINTS&&(i.points+=r)},this.renderInstances=function(r,a,o){var s=e.get("ANGLE_instanced_arrays");if(null!==s){var c=r.attributes.position;c.isInterleavedBufferAttribute?(o=c.data.count,s.drawArraysInstancedANGLE(n,0,o,r.maxInstancedCount)):s.drawArraysInstancedANGLE(n,a,o,r.maxInstancedCount),i.calls++,i.vertices+=o*r.maxInstancedCount,n===t.TRIANGLES?i.faces+=r.maxInstancedCount*o/3:n===t.POINTS&&(i.points+=r.maxInstancedCount*o)}else console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.")}}(mt,xt,ft),kt=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e,i){var n,r,a;
//
this.setMode=function(t){n=t},this.setIndex=function(t){r=t.type,a=t.bytesPerElement},this.render=function(e,o){t.drawElements(n,o,r,e*a),i.calls++,i.vertices+=o,n===t.TRIANGLES?i.faces+=o/3:n===t.POINTS&&(i.points+=o)},this.renderInstances=function(o,s,c){var h=e.get("ANGLE_instanced_arrays");null!==h?(h.drawElementsInstancedANGLE(n,c,r,s*a,o.maxInstancedCount),i.calls++,i.vertices+=c*o.maxInstancedCount,n===t.TRIANGLES?i.faces+=o.maxInstancedCount*c/3:n===t.POINTS&&(i.points+=o.maxInstancedCount*c)):console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.")}}(mt,xt,ft),jt=new X(N,mt,_t,St,bt),Wt=new Y(N,mt,_t,St,bt),N.info.programs=Ot.programs,N.context=mt,N.capabilities=bt,N.extensions=xt,N.properties=Et,N.renderLists=zt,N.state=_t}
// Events
function o(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),O=!0}function c(){console.log("THREE.WebGLRenderer: Context Restored."),O=!1,n()}function h(t){var e=t.target;e.removeEventListener("dispose",h),
// Buffer deallocation
function(t){u(t),Et.remove(t)}(e)}function u(t){var e=Et.get(t).program;t.program=void 0,void 0!==e&&Ot.releaseProgram(e)}function d(t){null!==te&&te(t);var e=Qt.getDevice();e&&e.isPresenting?e.requestAnimationFrame(d):window.requestAnimationFrame(d)}/*
	// TODO Duplicated code (Frustum)

	var _sphere = new Sphere();

	function isObjectViewable( object ) {

		var geometry = object.geometry;

		if ( geometry.boundingSphere === null )
			geometry.computeBoundingSphere();

		_sphere.copy( geometry.boundingSphere ).
		applyMatrix4( object.matrixWorld );

		return isSphereViewable( _sphere );

	}

	function isSpriteViewable( sprite ) {

		_sphere.center.set( 0, 0, 0 );
		_sphere.radius = 0.7071067811865476;
		_sphere.applyMatrix4( sprite.matrixWorld );

		return isSphereViewable( _sphere );

	}

	function isSphereViewable( sphere ) {

		if ( ! _frustum.intersectsSphere( sphere ) ) return false;

		var numPlanes = _clipping.numPlanes;

		if ( numPlanes === 0 ) return true;

		var planes = _this.clippingPlanes,

			center = sphere.center,
			negRad = - sphere.radius,
			i = 0;

		do {

			// out when deeper than radius in the negative halfspace
			if ( planes[ i ].distanceToPoint( center ) < negRad ) return false;

		} while ( ++ i !== numPlanes );

		return true;

	}
	*/
function p(t,e,i){if(!1!==t.visible){if(t.layers.test(e.layers))if(t.isLight)R.push(t),t.castShadow&&P.push(t);else if(t.isSprite)t.frustumCulled&&!ot.intersectsSprite(t)||I.push(t);else if(t.isLensFlare)U.push(t);else if(t.isImmediateRenderObject)i&&dt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(ut),C.push(t,null,t.material,dt.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.update(),!t.frustumCulled||ot.intersectsObject(t))){i&&dt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(ut);var n=It.update(t),r=t.material;if(Array.isArray(r))for(var a=n.groups,o=0,s=a.length;o<s;o++){var c=a[o],h=r[c.materialIndex];h&&h.visible&&C.push(t,n,h,dt.z,c)}else r.visible&&C.push(t,n,r,dt.z,null)}for(var l=t.children,o=0,s=l.length;o<s;o++)p(l[o],e,i)}}function f(t,e,i,n){for(var r=0,a=t.length;r<a;r++){var o=t[r],s=o.object,c=o.geometry,h=void 0===n?o.material:n,l=o.group;if(i.isArrayCamera){H=i;for(var u=i.cameras,d=0,p=u.length;d<p;d++){var f=u[d];if(s.layers.test(f.layers)){var g=f.bounds,v=g.x*J,y=g.y*Q,x=g.z*J,b=g.w*Q;_t.viewport(V.set(v,y,x,b).multiplyScalar(K)),m(s,e,f,c,h,l)}}}else H=null,m(s,e,i,c,h,l)}}function m(t,e,i,n,r,a){if(t.onBeforeRender(N,e,i,n,r,a),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){_t.setMaterial(r);var o=v(i,e.fog,r,t);z="",
// Buffer rendering
function(t,e,i){t.render(function(t){N.renderBufferImmediate(t,e,i)})}(t,o,r)}else N.renderBufferDirect(i,e.fog,n,r,t,a);t.onAfterRender(N,e,i,n,r,a)}function g(t,e,i){var n=Et.get(t),r=Ot.getParameters(t,Nt.state,P,e,st.numPlanes,st.numIntersection,i),a=Ot.getProgramCode(t,r),o=n.program,s=!0;if(void 0===o)
// new material
t.addEventListener("dispose",h);else if(o.code!==a)
// changed glsl or parameters
u(t);else{if(void 0!==r.shaderID)
// same glsl and uniform list
return;
// only rebuild uniform list
s=!1}if(s){if(r.shaderID){var c=xu[r.shaderID];n.shader={name:t.type,uniforms:vu.clone(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader}}else n.shader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};t.onBeforeCompile(n.shader),o=Ot.acquireProgram(t,n.shader,r,a),n.program=o,t.program=o}var l=o.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(d=0;d<N.maxMorphTargets;d++)l["morphTarget"+d]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals){t.numSupportedMorphNormals=0;for(var d=0;d<N.maxMorphNormals;d++)l["morphNormal"+d]>=0&&t.numSupportedMorphNormals++}var p=n.shader.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(n.numClippingPlanes=st.numPlanes,n.numIntersection=st.numIntersection,p.clippingPlanes=st.uniform),n.fog=e,
// store the light setup it was created for
n.lightsHash=Nt.state.hash,t.lights&&(
// wire up the material to this renderer's lighting state
p.ambientLightColor.value=Nt.state.ambient,p.directionalLights.value=Nt.state.directional,p.spotLights.value=Nt.state.spot,p.rectAreaLights.value=Nt.state.rectArea,p.pointLights.value=Nt.state.point,p.hemisphereLights.value=Nt.state.hemi,p.directionalShadowMap.value=Nt.state.directionalShadowMap,p.directionalShadowMatrix.value=Nt.state.directionalShadowMatrix,p.spotShadowMap.value=Nt.state.spotShadowMap,p.spotShadowMatrix.value=Nt.state.spotShadowMatrix,p.pointShadowMap.value=Nt.state.pointShadowMap,p.pointShadowMatrix.value=Nt.state.pointShadowMatrix);var f=n.program.getUniforms(),m=k.seqWithValue(f.seq,p);n.uniformsList=m}function v(t,e,i,n){Z=0;var r=Et.get(i);if(ht&&(lt||t!==G)){var a=t===G&&i.id===B;
// we might want to call this function with some ClippingGroup
// object instead of the material, once it becomes feasible
// (#8465, #8379)
st.setState(i.clippingPlanes,i.clipIntersection,i.clipShadows,t,r,a)}!1===i.needsUpdate&&(void 0===r.program?i.needsUpdate=!0:i.fog&&r.fog!==e?i.needsUpdate=!0:i.lights&&r.lightsHash!==Nt.state.hash?i.needsUpdate=!0:void 0===r.numClippingPlanes||r.numClippingPlanes===st.numPlanes&&r.numIntersection===st.numIntersection||(i.needsUpdate=!0)),i.needsUpdate&&(g(i,e,n),i.needsUpdate=!1);var o=!1,s=!1,c=!1,h=r.program,u=h.getUniforms(),d=r.shader.uniforms;if(_t.useProgram(h.program)&&(o=!0,s=!0,c=!0),i.id!==B&&(B=i.id,s=!0),o||t!==G){
// load material specific uniforms
// (shader material also gets them for the sake of genericity)
if(u.setValue(mt,"projectionMatrix",t.projectionMatrix),bt.logarithmicDepthBuffer&&u.setValue(mt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),
// Avoid unneeded uniform updates per ArrayCamera's sub-camera
G!==(H||t)&&(G=H||t,
// lighting uniforms depend on the camera so enforce an update
// now, in case this material supports lights - or later, when
// the next material that does gets activated:
s=!0,// set to true on material change
c=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshStandardMaterial||i.envMap){var p=u.map.cameraPosition;void 0!==p&&p.setValue(mt,dt.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.skinning)&&u.setValue(mt,"viewMatrix",t.matrixWorldInverse)}
// skinning uniforms must be set even if material didn't change
// auto-setting of texture unit for bone texture must go before other textures
// not sure why, but otherwise weird things happen
if(i.skinning){u.setOptional(mt,n,"bindMatrix"),u.setOptional(mt,n,"bindMatrixInverse");var f=n.skeleton;if(f){var m=f.bones;if(bt.floatVertexTextures){if(void 0===f.boneTexture){
// layout (1 matrix = 4 pixels)
//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)
//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)
//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)
//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)
//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)
var v=Math.sqrt(4*m.length);// 4 pixels needed for 1 matrix
v=ou.ceilPowerOfTwo(v),v=Math.max(v,4);var _=new Float32Array(v*v*4);// 4 floats per RGBA pixel
_.set(f.boneMatrices);// copy current values
var w=new l(_,v,v,Il,El);f.boneMatrices=_,f.boneTexture=w,f.boneTextureSize=v}u.setValue(mt,"boneTexture",f.boneTexture),u.setValue(mt,"boneTextureSize",f.boneTextureSize)}else u.setOptional(mt,f,"boneMatrices")}}
// the current material requires lighting info
// note: all lighting uniforms are always set correctly
// they simply reference the renderer's state for their
// values
//
// use the current material's .needsUpdate flags to set
// the GL state when required
// If uniforms are marked as clean, they don't need to be loaded to the GPU.
// refresh uniforms common to several materials
// RectAreaLight Texture
// TODO (mrdoob): Find a nicer implementation
// common matrices
return s&&(u.setValue(mt,"toneMappingExposure",N.toneMappingExposure),u.setValue(mt,"toneMappingWhitePoint",N.toneMappingWhitePoint),i.lights&&function(t,e){t.ambientLightColor.needsUpdate=e,t.directionalLights.needsUpdate=e,t.pointLights.needsUpdate=e,t.spotLights.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}(d,c),e&&i.fog&&function(t,e){t.fogColor.value=e.color,e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}(d,e),i.isMeshBasicMaterial?y(d,i):i.isMeshLambertMaterial?(y(d,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(d,i)):i.isMeshPhongMaterial?(y(d,i),i.isMeshToonMaterial?function(t,e){x(t,e),e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(d,i):x(d,i)):i.isMeshStandardMaterial?(y(d,i),i.isMeshPhysicalMaterial?function(t,e){t.clearCoat.value=e.clearCoat,t.clearCoatRoughness.value=e.clearCoatRoughness,b(t,e)}(d,i):b(d,i)):i.isMeshDepthMaterial?(y(d,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(d,i)):i.isMeshDistanceMaterial?(y(d,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(d,i)):i.isMeshNormalMaterial?(y(d,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale);e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale));e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(d,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity}(d,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(d,i)):i.isPointsMaterial?function(t,e){if(t.diffuse.value=e.color,t.opacity.value=e.opacity,t.size.value=e.size*K,t.scale.value=.5*Q,t.map.value=e.map,null!==e.map){if(!0===e.map.matrixAutoUpdate){var i=e.map.offset,n=e.map.repeat,r=e.map.rotation,a=e.map.center;e.map.matrix.setUvTransform(i.x,i.y,n.x,n.y,r,a.x,a.y)}t.uvTransform.value.copy(e.map.matrix)}}(d,i):i.isShadowMaterial&&(d.color.value=i.color,d.opacity.value=i.opacity),void 0!==d.ltcMat&&(d.ltcMat.value=gu.LTC_MAT_TEXTURE),void 0!==d.ltcMag&&(d.ltcMag.value=gu.LTC_MAG_TEXTURE),k.upload(mt,r.uniformsList,d,N)),u.setValue(mt,"modelViewMatrix",n.modelViewMatrix),u.setValue(mt,"normalMatrix",n.normalMatrix),u.setValue(mt,"modelMatrix",n.matrixWorld),h}
// Uniforms (refresh uniforms objects)
function y(t,e){t.opacity.value=e.opacity,e.color&&(t.diffuse.value=e.color),e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.specularMap&&(t.specularMap.value=e.specularMap),e.envMap&&(t.envMap.value=e.envMap,
// don't flip CubeTexture envMaps, flip everything else:
//  WebGLRenderTargetCube will be flipped for backwards compatibility
//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture
// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future
t.flipEnvMap.value=e.envMap&&e.envMap.isCubeTexture?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity);
// uv repeat and offset setting priorities
// 1. color map
// 2. specular map
// 3. normal map
// 4. bump map
// 5. alpha map
// 6. emissive map
var i;if(e.map?i=e.map:e.specularMap?i=e.specularMap:e.displacementMap?i=e.displacementMap:e.normalMap?i=e.normalMap:e.bumpMap?i=e.bumpMap:e.roughnessMap?i=e.roughnessMap:e.metalnessMap?i=e.metalnessMap:e.alphaMap?i=e.alphaMap:e.emissiveMap&&(i=e.emissiveMap),void 0!==i){if(
// backwards compatibility
i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate){var n=i.offset,r=i.repeat,a=i.rotation,o=i.center;i.matrix.setUvTransform(n.x,n.y,r.x,r.y,a,o.x,o.y)}t.uvTransform.value.copy(i.matrix)}}function x(t,e){t.specular.value=e.specular,t.shininess.value=Math.max(e.shininess,1e-4),// to prevent pow( 0.0, 0.0 )
e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function b(t,e){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),e.envMap&&(
//uniforms.envMap.value = material.envMap; // part of uniforms common
t.envMapIntensity.value=e.envMapIntensity)}console.log("THREE.WebGLRenderer",ah);var _=void 0!==(t=t||{}).canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),w=void 0!==t.context?t.context:null,M=void 0!==t.alpha&&t.alpha,E=void 0===t.depth||t.depth,T=void 0===t.stencil||t.stencil,S=void 0!==t.antialias&&t.antialias,A=void 0===t.premultipliedAlpha||t.premultipliedAlpha,L=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,R=[],P=[],C=null,I=[],U=[];
// public properties
this.domElement=_,this.context=null,
// clearing
this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,
// scene graph
this.sortObjects=!0,
// user-defined clipping
this.clippingPlanes=[],this.localClippingEnabled=!1,
// physically based shading
this.gammaFactor=2,// for backwards compatibility
this.gammaInput=!1,this.gammaOutput=!1,
// physical lights
this.physicallyCorrectLights=!1,
// tone mapping
this.toneMapping=Kh,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,
// morphs
this.maxMorphTargets=8,this.maxMorphNormals=4;
// internal properties
var N=this,O=!1,
// internal state cache
D=null,F=null,B=-1,z="",G=null,H=null,V=new s,W=new s,q=null,
//
Z=0,
//
J=_.width,Q=_.height,K=1,$=new s(0,0,J,Q),rt=new s(0,0,J,Q),at=!1,
// frustum
ot=new et,
// clipping
st=new/**
 * @author tschw
 */
function(){function t(){l.value!==n&&(l.value=n,l.needsUpdate=r>0),i.numPlanes=r,i.numIntersection=0}function e(t,e,n,r){var a=null!==t?t.length:0,o=null;if(0!==a){if(o=l.value,!0!==r||null===o){var s=n+4*a,u=e.matrixWorldInverse;h.getNormalMatrix(u),(null===o||o.length<s)&&(o=new Float32Array(s));for(var d=0,p=n;d!==a;++d,p+=4)c.copy(t[d]).applyMatrix4(u,h),c.normal.toArray(o,p),o[p+3]=c.constant}l.value=o,l.needsUpdate=!0}return i.numPlanes=a,o}var i=this,n=null,r=0,o=!1,s=!1,c=new tt,h=new a,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,i,a){var s=0!==t.length||i||
// enable state of previous frame - the clipping code has to
// run another frame in order to reset the state:
0!==r||o;return o=i,n=e(t,a,0),r=t.length,s},this.beginShadows=function(){s=!0,e(null)},this.endShadows=function(){s=!1,t()},this.setState=function(i,a,c,h,u,d){if(!o||null===i||0===i.length||s&&!c)
// there's no local clipping
s?
// there's no global clipping
e(null):t();else{var p=s?0:r,f=4*p,m=u.clippingState||null;l.value=m,// ensure unique state
m=e(i,h,f,d);for(var g=0;g!==f;++g)m[g]=n[g];u.clippingState=m,this.numIntersection=a?this.numPlanes:0,this.numPlanes+=p}}},ht=!1,lt=!1,
// camera matrices cache
ut=new i,dt=new r,
// info
pt={geometries:0,textures:0},ft={frame:0,calls:0,vertices:0,faces:0,points:0};this.info={render:ft,memory:pt,programs:null};
// initialize
var mt;try{var vt={alpha:M,depth:E,stencil:T,antialias:S,premultipliedAlpha:A,preserveDrawingBuffer:L};if(null===(mt=w||_.getContext("webgl",vt)||_.getContext("experimental-webgl",vt)))throw null!==_.getContext("webgl")?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";
// Some experimental-webgl implementations do not have getShaderPrecisionFormat
void 0===mt.getShaderPrecisionFormat&&(mt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),_.addEventListener("webglcontextlost",o,!1),_.addEventListener("webglcontextrestored",c,!1)}catch(t){console.error("THREE.WebGLRenderer: "+t)}var xt,bt,_t,Et,St,Pt,Ct,It,Nt,Ot,zt,Gt,Ht,Vt,kt,jt,Wt,Xt;n();
// vr
var Qt=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t){function e(){if(null!==r&&r.isPresenting){var e=r.getEyeParameters("left"),i=e.renderWidth,a=e.renderHeight;f=t.getPixelRatio(),p=t.getSize(),t.setDrawingBufferSize(2*i,a,1)}else n.enabled&&t.setDrawingBufferSize(p.width,p.height,f)}var n=this,r=null,a=null;"undefined"!=typeof window&&"VRFrameData"in window&&(a=new window.VRFrameData);var o=new i,c=new i,h=new i,l=new Zt;l.bounds=new s(0,0,.5,1),l.layers.enable(1);var u=new Zt;u.bounds=new s(.5,0,.5,1),u.layers.enable(2);var d=new Jt([l,u]);d.layers.enable(1),d.layers.enable(2);
//
var p,f;"undefined"!=typeof window&&window.addEventListener("vrdisplaypresentchange",e,!1),
//
this.enabled=!1,this.standing=!1,this.getDevice=function(){return r},this.setDevice=function(t){void 0!==t&&(r=t)},this.getCamera=function(t){if(null===r)return t;r.depthNear=t.near,r.depthFar=t.far,r.getFrameData(a);
//
var e=a.pose;null!==e.position?t.position.fromArray(e.position):t.position.set(0,0,0),null!==e.orientation&&t.quaternion.fromArray(e.orientation),t.updateMatrixWorld();var i=r.stageParameters;if(this.standing&&i&&(c.fromArray(i.sittingToStandingTransform),h.getInverse(c),t.matrixWorld.multiply(c),t.matrixWorldInverse.multiply(h)),!1===r.isPresenting)return t;
//
l.near=t.near,u.near=t.near,l.far=t.far,u.far=t.far,d.matrixWorld.copy(t.matrixWorld),d.matrixWorldInverse.copy(t.matrixWorldInverse),l.matrixWorldInverse.fromArray(a.leftViewMatrix),u.matrixWorldInverse.fromArray(a.rightViewMatrix),this.standing&&i&&(l.matrixWorldInverse.multiply(h),u.matrixWorldInverse.multiply(h));var n=t.parent;null!==n&&(o.getInverse(n.matrixWorld),l.matrixWorldInverse.multiply(o),u.matrixWorldInverse.multiply(o)),
// envMap and Mirror needs camera.matrixWorld
l.matrixWorld.getInverse(l.matrixWorldInverse),u.matrixWorld.getInverse(u.matrixWorldInverse),l.projectionMatrix.fromArray(a.leftProjectionMatrix),u.projectionMatrix.fromArray(a.rightProjectionMatrix),
// HACK @mrdoob
// https://github.com/w3c/webvr/issues/203
d.projectionMatrix.copy(l.projectionMatrix);
//
var s=r.getLayers();if(s.length){var p=s[0];null!==p.leftBounds&&4===p.leftBounds.length&&l.bounds.fromArray(p.leftBounds),null!==p.rightBounds&&4===p.rightBounds.length&&u.bounds.fromArray(p.rightBounds)}return d},this.getStandingMatrix=function(){return c},this.submitFrame=function(){r&&r.isPresenting&&r.submitFrame()},this.dispose=function(){"undefined"!=typeof window&&window.removeEventListener("vrdisplaypresentchange",e)}}(N);this.vr=Qt;
// shadow map
var Kt=new it(N,It,bt.maxTextureSize);this.shadowMap=Kt,
// API
this.getContext=function(){return mt},this.getContextAttributes=function(){return mt.getContextAttributes()},this.forceContextLoss=function(){var t=xt.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){var t=xt.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return K},this.setPixelRatio=function(t){void 0!==t&&(K=t,this.setSize(J,Q,!1))},this.getSize=function(){return{width:J,height:Q}},this.setSize=function(t,e,i){var n=Qt.getDevice();n&&n.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(J=t,Q=e,_.width=t*K,_.height=e*K,!1!==i&&(_.style.width=t+"px",_.style.height=e+"px"),this.setViewport(0,0,t,e))},this.getDrawingBufferSize=function(){return{width:J*K,height:Q*K}},this.setDrawingBufferSize=function(t,e,i){J=t,Q=e,K=i,_.width=t*i,_.height=e*i,this.setViewport(0,0,t,e)},this.setViewport=function(t,e,i,n){$.set(t,Q-e-n,i,n),_t.viewport(V.copy($).multiplyScalar(K))},this.setScissor=function(t,e,i,n){rt.set(t,Q-e-n,i,n),_t.scissor(W.copy(rt).multiplyScalar(K))},this.setScissorTest=function(t){_t.setScissorTest(at=t)},
// Clearing
this.getClearColor=function(){return Gt.getClearColor()},this.setClearColor=function(){Gt.setClearColor.apply(Gt,arguments)},this.getClearAlpha=function(){return Gt.getClearAlpha()},this.setClearAlpha=function(){Gt.setClearAlpha.apply(Gt,arguments)},this.clear=function(t,e,i){var n=0;(void 0===t||t)&&(n|=mt.COLOR_BUFFER_BIT),(void 0===e||e)&&(n|=mt.DEPTH_BUFFER_BIT),(void 0===i||i)&&(n|=mt.STENCIL_BUFFER_BIT),mt.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(t,e,i,n){this.setRenderTarget(t),this.clear(e,i,n)},
//
this.dispose=function(){_.removeEventListener("webglcontextlost",o,!1),_.removeEventListener("webglcontextrestored",c,!1),zt.dispose(),Qt.dispose()},this.renderBufferImmediate=function(t,e,i){_t.initAttributes();var n=Et.get(t);t.hasPositions&&!n.position&&(n.position=mt.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=mt.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=mt.createBuffer()),t.hasColors&&!n.color&&(n.color=mt.createBuffer());var r=e.getAttributes();if(t.hasPositions&&(mt.bindBuffer(mt.ARRAY_BUFFER,n.position),mt.bufferData(mt.ARRAY_BUFFER,t.positionArray,mt.DYNAMIC_DRAW),_t.enableAttribute(r.position),mt.vertexAttribPointer(r.position,3,mt.FLOAT,!1,0,0)),t.hasNormals){if(mt.bindBuffer(mt.ARRAY_BUFFER,n.normal),!i.isMeshPhongMaterial&&!i.isMeshStandardMaterial&&!i.isMeshNormalMaterial&&!0===i.flatShading)for(var a=0,o=3*t.count;a<o;a+=9){var s=t.normalArray,c=(s[a+0]+s[a+3]+s[a+6])/3,h=(s[a+1]+s[a+4]+s[a+7])/3,l=(s[a+2]+s[a+5]+s[a+8])/3;s[a+0]=c,s[a+1]=h,s[a+2]=l,s[a+3]=c,s[a+4]=h,s[a+5]=l,s[a+6]=c,s[a+7]=h,s[a+8]=l}mt.bufferData(mt.ARRAY_BUFFER,t.normalArray,mt.DYNAMIC_DRAW),_t.enableAttribute(r.normal),mt.vertexAttribPointer(r.normal,3,mt.FLOAT,!1,0,0)}t.hasUvs&&i.map&&(mt.bindBuffer(mt.ARRAY_BUFFER,n.uv),mt.bufferData(mt.ARRAY_BUFFER,t.uvArray,mt.DYNAMIC_DRAW),_t.enableAttribute(r.uv),mt.vertexAttribPointer(r.uv,2,mt.FLOAT,!1,0,0)),t.hasColors&&i.vertexColors!==mh&&(mt.bindBuffer(mt.ARRAY_BUFFER,n.color),mt.bufferData(mt.ARRAY_BUFFER,t.colorArray,mt.DYNAMIC_DRAW),_t.enableAttribute(r.color),mt.vertexAttribPointer(r.color,3,mt.FLOAT,!1,0,0)),_t.disableUnusedAttributes(),mt.drawArrays(mt.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,i,n,r,a,o){_t.setMaterial(r);var s=v(t,i,r,a),c=n.id+"_"+s.id+"_"+(!0===r.wireframe),h=!1;c!==z&&(z=c,h=!0),a.morphTargetInfluences&&(Ht.update(a,n,r,s),h=!0);
//
var l=n.index,u=n.attributes.position,d=1;!0===r.wireframe&&(l=Ct.getWireframeAttribute(n),d=2);var p,f=Vt;null!==l&&(p=Pt.get(l),(f=kt).setIndex(p)),h&&(!function(t,e,i,n){if(i&&i.isInstancedBufferGeometry&&null===xt.get("ANGLE_instanced_arrays"))console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");else{void 0===n&&(n=0),_t.initAttributes();var r=i.attributes,a=e.getAttributes(),o=t.defaultAttributeValues;for(var s in a){var c=a[s];if(c>=0){var h=r[s];if(void 0!==h){var l=h.normalized,u=h.itemSize,d=Pt.get(h);
// TODO Attribute may not be available on context restore
if(void 0===d)continue;var p=d.buffer,f=d.type,m=d.bytesPerElement;if(h.isInterleavedBufferAttribute){var g=h.data,v=g.stride,y=h.offset;g&&g.isInstancedInterleavedBuffer?(_t.enableAttributeAndDivisor(c,g.meshPerAttribute),void 0===i.maxInstancedCount&&(i.maxInstancedCount=g.meshPerAttribute*g.count)):_t.enableAttribute(c),mt.bindBuffer(mt.ARRAY_BUFFER,p),mt.vertexAttribPointer(c,u,f,l,v*m,(n*v+y)*m)}else h.isInstancedBufferAttribute?(_t.enableAttributeAndDivisor(c,h.meshPerAttribute),void 0===i.maxInstancedCount&&(i.maxInstancedCount=h.meshPerAttribute*h.count)):_t.enableAttribute(c),mt.bindBuffer(mt.ARRAY_BUFFER,p),mt.vertexAttribPointer(c,u,f,l,0,n*u*m)}else if(void 0!==o){var x=o[s];if(void 0!==x)switch(x.length){case 2:mt.vertexAttrib2fv(c,x);break;case 3:mt.vertexAttrib3fv(c,x);break;case 4:mt.vertexAttrib4fv(c,x);break;default:mt.vertexAttrib1fv(c,x)}}}}_t.disableUnusedAttributes()}}(r,s,n),null!==l&&mt.bindBuffer(mt.ELEMENT_ARRAY_BUFFER,p.buffer));
//
var m=0;null!==l?m=l.count:void 0!==u&&(m=u.count);var g=n.drawRange.start*d,y=n.drawRange.count*d,x=null!==o?o.start*d:0,b=null!==o?o.count*d:1/0,_=Math.max(g,x),w=Math.min(m,g+y,x+b)-1,M=Math.max(0,w-_+1);if(0!==M){
//
if(a.isMesh)if(!0===r.wireframe)_t.setLineWidth(r.wireframeLinewidth*e()),f.setMode(mt.LINES);else switch(a.drawMode){case Yl:f.setMode(mt.TRIANGLES);break;case Zl:f.setMode(mt.TRIANGLE_STRIP);break;case Jl:f.setMode(mt.TRIANGLE_FAN)}else if(a.isLine){var E=r.linewidth;void 0===E&&(E=1),// Not using Line*Material
_t.setLineWidth(E*e()),a.isLineSegments?f.setMode(mt.LINES):a.isLineLoop?f.setMode(mt.LINE_LOOP):f.setMode(mt.LINE_STRIP)}else a.isPoints&&f.setMode(mt.POINTS);n&&n.isInstancedBufferGeometry?n.maxInstancedCount>0&&f.renderInstances(n,_,M):f.render(_,M)}},
// Compile
this.compile=function(t,e){R.length=0,P.length=0,t.traverse(function(t){t.isLight&&(R.push(t),t.castShadow&&P.push(t))}),Nt.setup(R,P,e),t.traverse(function(e){if(e.material)if(Array.isArray(e.material))for(var i=0;i<e.material.length;i++)g(e.material[i],t.fog,e);else g(e.material,t.fog,e)})};
// Animation Loop
var $t=!1,te=null;this.animate=function(t){te=t,function(){if(!$t){var t=Qt.getDevice();t&&t.isPresenting?t.requestAnimationFrame(d):window.requestAnimationFrame(d),$t=!0}}()},
// Rendering
this.render=function(t,e,i,n){if(e&&e.isCamera){if(!O){
// reset caching for this frame
z="",B=-1,G=null,
// update scene graph
!0===t.autoUpdate&&t.updateMatrixWorld(),
// update camera matrices and frustum
null===e.parent&&e.updateMatrixWorld(),Qt.enabled&&(e=Qt.getCamera(e)),ut.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),ot.setFromMatrix(ut),R.length=0,P.length=0,I.length=0,U.length=0,lt=this.localClippingEnabled,ht=st.init(this.clippingPlanes,lt,e),(C=zt.get(t,e)).init(),p(t,e,N.sortObjects),!0===N.sortObjects&&C.sort(),
//
ht&&st.beginShadows(),Kt.render(P,t,e),Nt.setup(R,P,e),ht&&st.endShadows(),
//
ft.frame++,ft.calls=0,ft.vertices=0,ft.faces=0,ft.points=0,void 0===i&&(i=null),this.setRenderTarget(i),
//
Gt.render(C,t,e,n);
// render scene
var r=C.opaque,a=C.transparent;if(t.overrideMaterial){var o=t.overrideMaterial;r.length&&f(r,t,e,o),a.length&&f(a,t,e,o)}else
// opaque pass (front-to-back order)
r.length&&f(r,t,e),
// transparent pass (back-to-front order)
a.length&&f(a,t,e);
// custom renderers
Wt.render(I,t,e),jt.render(U,t,e,V),
// Generate mipmap if we're using any kind of mipmap filtering
i&&St.updateRenderTargetMipmap(i),
// Ensure depth buffer writing is enabled so it can be cleared on next render
_t.buffers.depth.setTest(!0),_t.buffers.depth.setMask(!0),_t.buffers.color.setMask(!0),_t.setPolygonOffset(!1),Qt.enabled&&Qt.submitFrame()}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},
// GL state setting
this.setFaceCulling=function(t,e){_t.setCullFace(t),_t.setFlipSided(e===hh)},this.allocTextureUnit=
// Textures
function(){var t=Z;return t>=bt.maxTextures&&console.warn("THREE.WebGLRenderer: Trying to use "+t+" texture units while this GPU supports only "+bt.maxTextures),Z+=1,t},
// this.setTexture2D = setTexture2D;
this.setTexture2D=function(){var t=!1;
// backwards compatibility: peel texture.texture
return function(e,i){e&&e.isWebGLRenderTarget&&(t||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),t=!0),e=e.texture),St.setTexture2D(e,i)}}(),this.setTexture=function(){var t=!1;return function(e,i){t||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),t=!0),St.setTexture2D(e,i)}}(),this.setTextureCube=function(){var t=!1;return function(e,i){
// backwards compatibility: peel texture.texture
e&&e.isWebGLRenderTargetCube&&(t||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),t=!0),e=e.texture),
// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture
// TODO: unify these code paths
e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?
// CompressedTexture can have Array in image :/
// this function alone should take care of cube textures
St.setTextureCube(e,i):
// assumed: texture property of THREE.WebGLRenderTargetCube
St.setTextureCubeDynamic(e,i)}}(),this.getRenderTarget=function(){return D},this.setRenderTarget=function(t){D=t,t&&void 0===Et.get(t).__webglFramebuffer&&St.setupRenderTarget(t);var e=null,i=!1;if(t){var n=Et.get(t).__webglFramebuffer;t.isWebGLRenderTargetCube?(e=n[t.activeCubeFace],i=!0):e=n,V.copy(t.viewport),W.copy(t.scissor),q=t.scissorTest}else V.copy($).multiplyScalar(K),W.copy(rt).multiplyScalar(K),q=at;if(F!==e&&(mt.bindFramebuffer(mt.FRAMEBUFFER,e),F=e),_t.viewport(V),_t.scissor(W),_t.setScissorTest(q),i){var r=Et.get(t.texture);mt.framebufferTexture2D(mt.FRAMEBUFFER,mt.COLOR_ATTACHMENT0,mt.TEXTURE_CUBE_MAP_POSITIVE_X+t.activeCubeFace,r.__webglTexture,t.activeMipMapLevel)}},this.readRenderTargetPixels=function(t,e,i,n,r,a){if(t&&t.isWebGLRenderTarget){var o=Et.get(t).__webglFramebuffer;if(o){var s=!1;o!==F&&(mt.bindFramebuffer(mt.FRAMEBUFFER,o),s=!0);try{var c=t.texture,h=c.format,l=c.type;if(h!==Il&&Xt.convert(h)!==mt.getParameter(mt.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(l===yl||Xt.convert(l)===mt.getParameter(mt.IMPLEMENTATION_COLOR_READ_TYPE)||l===El&&(xt.get("OES_texture_float")||xt.get("WEBGL_color_buffer_float"))||l===Tl&&xt.get("EXT_color_buffer_half_float")))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");mt.checkFramebufferStatus(mt.FRAMEBUFFER)===mt.FRAMEBUFFER_COMPLETE?
// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)
e>=0&&e<=t.width-n&&i>=0&&i<=t.height-r&&mt.readPixels(e,i,n,r,Xt.convert(h),Xt.convert(l),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&mt.bindFramebuffer(mt.FRAMEBUFFER,F)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
function Kt(t,e){this.name="",this.color=new j(t),this.density=void 0!==e?e:25e-5}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
function $t(t,e,i){this.name="",this.color=new j(t),this.near=void 0!==e?e:1,this.far=void 0!==i?i:1e3}/**
 * @author mrdoob / http://mrdoob.com/
 */
function te(){ot.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */
function ee(t,e,i,n,a){ot.call(this),this.lensFlares=[],this.positionScreen=new r,this.customUpdateCallback=void 0,void 0!==t&&this.add(t,e,i,n,a)}/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *	uvOffset: new THREE.Vector2(),
 *	uvScale: new THREE.Vector2()
 * }
 */
function ie(t){Z.call(this),this.type="SpriteMaterial",this.color=new j(16777215),this.map=null,this.rotation=0,this.fog=!1,this.lights=!1,this.setValues(t)}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */
function ne(t){ot.call(this),this.type="Sprite",this.material=void 0!==t?t:new ie}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */
function re(){ot.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author michael guerrero / http://realitymeltdown.com
 * @author ikerr / http://verold.com
 */
function ae(t,e){
// use the supplied bone inverses or calculate the inverses
if(
// copy the bone array
t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var n=0,r=this.bones.length;n<r;n++)this.boneInverses.push(new i)}}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author ikerr / http://verold.com
 */
function oe(){ot.call(this),this.type="Bone"}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author ikerr / http://verold.com
 */
function se(t,e){Ut.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new i,this.bindMatrixInverse=new i;var n=new ae(this.initBones());this.bind(n,this.matrixWorld),this.normalizeSkinWeights()}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  linewidth: <float>,
 *  linecap: "round",
 *  linejoin: "round"
 * }
 */
function ce(t){Z.call(this),this.type="LineBasicMaterial",this.color=new j(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(t)}/**
 * @author mrdoob / http://mrdoob.com/
 */
function he(t,e,i){if(1===i)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new le(t,e);ot.call(this),this.type="Line",this.geometry=void 0!==t?t:new Mt,this.material=void 0!==e?e:new ce({color:16777215*Math.random()})}/**
 * @author mrdoob / http://mrdoob.com/
 */
function le(t,e){he.call(this,t,e),this.type="LineSegments"}/**
 * @author mgreter / http://github.com/mgreter
 */
function ue(t,e){he.call(this,t,e),this.type="LineLoop"}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *  size: <float>,
 *  sizeAttenuation: <bool>
 * }
 */
function de(t){Z.call(this),this.type="PointsMaterial",this.color=new j(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.lights=!1,this.setValues(t)}/**
 * @author alteredq / http://alteredqualia.com/
 */
function pe(t,e){ot.call(this),this.type="Points",this.geometry=void 0!==t?t:new Mt,this.material=void 0!==e?e:new de({color:16777215*Math.random()})}/**
 * @author mrdoob / http://mrdoob.com/
 */
function fe(){ot.call(this),this.type="Group"}/**
 * @author mrdoob / http://mrdoob.com/
 */
function me(t,e,i,n,r,a,s,c,h){function l(){var t=u.image;t.readyState>=t.HAVE_CURRENT_DATA&&(u.needsUpdate=!0),requestAnimationFrame(l)}o.call(this,t,e,i,n,r,a,s,c,h),this.generateMipmaps=!1;var u=this;requestAnimationFrame(l)}/**
 * @author alteredq / http://alteredqualia.com/
 */
function ge(t,e,i,n,r,a,s,c,h,l,u,d){o.call(this,null,a,s,c,h,l,n,r,u,d),this.image={width:e,height:i},this.mipmaps=t,
// no flipping for cube textures
// (also flipping doesn't work for compressed textures )
this.flipY=!1,
// can't generate mipmaps for compressed textures
// mips must be embedded in DDS files
this.generateMipmaps=!1}/**
 * @author Matt DesLauriers / @mattdesl
 * @author atix / arthursilber.de
 */
function ve(t,e,i,n,r,a,s,c,h,l){if((l=void 0!==l?l:Ol)!==Ol&&l!==Dl)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&l===Ol&&(i=_l),void 0===i&&l===Dl&&(i=Rl),o.call(this,null,n,r,a,s,c,l,i,h),this.image={width:t,height:e},this.magFilter=void 0!==s?s:dl,this.minFilter=void 0!==c?c:dl,this.flipY=!1,this.generateMipmaps=!1}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */
function ye(t){Mt.call(this),this.type="WireframeGeometry";
// buffer
var e,i,n,a,o,s,c,h,l,u,d=[],p=[0,0],f={},m=["a","b","c"];
// different logic for Geometry and BufferGeometry
if(t&&t.isGeometry){
// create a data structure that contains all edges without duplicates
var g=t.faces;for(e=0,n=g.length;e<n;e++){var v=g[e];for(i=0;i<3;i++)c=v[m[i]],h=v[m[(i+1)%3]],p[0]=Math.min(c,h),// sorting prevents duplicates
p[1]=Math.max(c,h),void 0===f[l=p[0]+","+p[1]]&&(f[l]={index1:p[0],index2:p[1]})}
// generate vertices
for(l in f)s=f[l],u=t.vertices[s.index1],d.push(u.x,u.y,u.z),u=t.vertices[s.index2],d.push(u.x,u.y,u.z)}else if(t&&t.isBufferGeometry){var y,x,b,_,w,M,E;if(u=new r,null!==t.index){
// create a data structure that contains all eges without duplicates
for(
// indexed BufferGeometry
y=t.attributes.position,x=t.index,0===(b=t.groups).length&&(b=[{start:0,count:x.count,materialIndex:0}]),a=0,o=b.length;a<o;++a)for(e=w=(_=b[a]).start,n=w+_.count;e<n;e+=3)for(i=0;i<3;i++)c=x.getX(e+i),h=x.getX(e+(i+1)%3),p[0]=Math.min(c,h),// sorting prevents duplicates
p[1]=Math.max(c,h),void 0===f[l=p[0]+","+p[1]]&&(f[l]={index1:p[0],index2:p[1]});
// generate vertices
for(l in f)s=f[l],u.fromBufferAttribute(y,s.index1),d.push(u.x,u.y,u.z),u.fromBufferAttribute(y,s.index2),d.push(u.x,u.y,u.z)}else for(
// non-indexed BufferGeometry
e=0,n=(y=t.attributes.position).count/3;e<n;e++)for(i=0;i<3;i++)
// three edges per triangle, an edge is represented as (index1, index2)
// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)
M=3*e+i,u.fromBufferAttribute(y,M),d.push(u.x,u.y,u.z),E=3*e+(i+1)%3,u.fromBufferAttribute(y,E),d.push(u.x,u.y,u.z)}
// build geometry
this.addAttribute("position",new xt(d,3))}/**
 * @author zz85 / https://github.com/zz85
 * @author Mugen87 / https://github.com/Mugen87
 *
 * Parametric Surfaces Geometry
 * based on the brilliant article by @prideout http://prideout.net/blog/?p=44
 */
// ParametricGeometry
function xe(t,e,i){lt.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:i},this.fromBufferGeometry(new be(t,e,i)),this.mergeVertices()}
// ParametricBufferGeometry
function be(t,e,i){Mt.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:i};
// buffers
var n,a,o=[],s=[],c=[],h=[],l=new r,u=new r,d=new r,p=new r,f=new r,m=e+1;for(n=0;n<=i;n++){var g=n/i;for(a=0;a<=e;a++){var v=a/e;
// vertex
u=t(v,g,u),s.push(u.x,u.y,u.z),
// normal
// approximate tangent vectors via finite differences
v-1e-5>=0?(d=t(v-1e-5,g,d),p.subVectors(u,d)):(d=t(v+1e-5,g,d),p.subVectors(d,u)),g-1e-5>=0?(d=t(v,g-1e-5,d),f.subVectors(u,d)):(d=t(v,g+1e-5,d),f.subVectors(d,u)),
// cross product of tangent vectors returns surface normal
l.crossVectors(p,f).normalize(),c.push(l.x,l.y,l.z),
// uv
h.push(v,g)}}
// generate indices
for(n=0;n<i;n++)for(a=0;a<e;a++){var y=n*m+a,x=n*m+a+1,b=(n+1)*m+a+1,_=(n+1)*m+a;
// faces one and two
o.push(y,x,_),o.push(x,b,_)}
// build geometry
this.setIndex(o),this.addAttribute("position",new xt(s,3)),this.addAttribute("normal",new xt(c,3)),this.addAttribute("uv",new xt(h,2))}/**
 * @author clockworkgeek / https://github.com/clockworkgeek
 * @author timothypratley / https://github.com/timothypratley
 * @author WestLangley / http://github.com/WestLangley
 * @author Mugen87 / https://github.com/Mugen87
 */
// PolyhedronGeometry
function _e(t,e,i,n){lt.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:n},this.fromBufferGeometry(new we(t,e,i,n)),this.mergeVertices()}
// PolyhedronBufferGeometry
function we(t,i,n,a){function o(t){l.push(t.x,t.y,t.z)}function s(e,i){var n=3*e;i.x=t[n+0],i.y=t[n+1],i.z=t[n+2]}function c(t,e,i,n){n<0&&1===t.x&&(u[e]=t.x-1),0===i.x&&0===i.z&&(u[e]=n/2/Math.PI+.5)}
// Angle around the Y axis, counter-clockwise when looking from above.
function h(t){return Math.atan2(t.z,-t.x)}Mt.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:i,radius:n,detail:a},n=n||1;
// default buffer data
var l=[],u=[];
// the subdivision creates the vertex buffer data
!
// helper functions
function(t){
// iterate over all faces and apply a subdivison with the given detail value
for(var e=new r,n=new r,a=new r,c=0;c<i.length;c+=3)
// get the vertices of the face
s(i[c+0],e),s(i[c+1],n),s(i[c+2],a),
// perform subdivision
function(t,e,i,n){var r,a,s=Math.pow(2,n),c=[];
// construct all of the vertices for this subdivision
for(r=0;r<=s;r++){c[r]=[];var h=t.clone().lerp(i,r/s),l=e.clone().lerp(i,r/s),u=s-r;for(a=0;a<=u;a++)c[r][a]=0===a&&r===s?h:h.clone().lerp(l,a/u)}
// construct all of the faces
for(r=0;r<s;r++)for(a=0;a<2*(s-r)-1;a++){var d=Math.floor(a/2);a%2==0?(o(c[r][d+1]),o(c[r+1][d]),o(c[r][d])):(o(c[r][d+1]),o(c[r+1][d+1]),o(c[r+1][d]))}}(e,n,a,t)}(a=a||0),
// all vertices should lie on a conceptual sphere with a given radius
function(t){
// iterate over the entire buffer and apply the radius to each vertex
for(var e=new r,i=0;i<l.length;i+=3)e.x=l[i+0],e.y=l[i+1],e.z=l[i+2],e.normalize().multiplyScalar(t),l[i+0]=e.x,l[i+1]=e.y,l[i+2]=e.z}(n),
// finally, create the uv data
function(){for(var t=new r,i=0;i<l.length;i+=3){t.x=l[i+0],t.y=l[i+1],t.z=l[i+2];var n=h(t)/2/Math.PI+.5,a=
// Angle above the XZ plane.
function(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}(t)/Math.PI+.5;u.push(n,1-a)}!function(){for(var t=new r,i=new r,n=new r,a=new r,o=new e,s=new e,d=new e,p=0,f=0;p<l.length;p+=9,f+=6){t.set(l[p+0],l[p+1],l[p+2]),i.set(l[p+3],l[p+4],l[p+5]),n.set(l[p+6],l[p+7],l[p+8]),o.set(u[f+0],u[f+1]),s.set(u[f+2],u[f+3]),d.set(u[f+4],u[f+5]),a.copy(t).add(i).add(n).divideScalar(3);var m=h(a);c(o,f+0,t,m),c(s,f+2,i,m),c(d,f+4,n,m)}}(),function(){
// handle case when face straddles the seam, see #3269
for(var t=0;t<u.length;t+=6){
// uv data of a single face
var e=u[t+0],i=u[t+2],n=u[t+4],r=Math.max(e,i,n),a=Math.min(e,i,n);
// 0.9 is somewhat arbitrary
r>.9&&a<.1&&(e<.2&&(u[t+0]+=1),i<.2&&(u[t+2]+=1),n<.2&&(u[t+4]+=1))}}()}(),
// build non-indexed geometry
this.addAttribute("position",new xt(l,3)),this.addAttribute("normal",new xt(l.slice(),3)),this.addAttribute("uv",new xt(u,2)),0===a?this.computeVertexNormals():this.normalizeNormals()}/**
 * @author timothypratley / https://github.com/timothypratley
 * @author Mugen87 / https://github.com/Mugen87
 */
// TetrahedronGeometry
function Me(t,e){lt.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ee(t,e)),this.mergeVertices()}
// TetrahedronBufferGeometry
function Ee(t,e){we.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}/**
 * @author timothypratley / https://github.com/timothypratley
 * @author Mugen87 / https://github.com/Mugen87
 */
// OctahedronGeometry
function Te(t,e){lt.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Se(t,e)),this.mergeVertices()}
// OctahedronBufferGeometry
function Se(t,e){we.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}/**
 * @author timothypratley / https://github.com/timothypratley
 * @author Mugen87 / https://github.com/Mugen87
 */
// IcosahedronGeometry
function Ae(t,e){lt.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Le(t,e)),this.mergeVertices()}
// IcosahedronBufferGeometry
function Le(t,e){var i=(1+Math.sqrt(5))/2;we.call(this,[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}/**
 * @author Abe Pazos / https://hamoid.com
 * @author Mugen87 / https://github.com/Mugen87
 */
// DodecahedronGeometry
function Re(t,e){lt.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Pe(t,e)),this.mergeVertices()}
// DodecahedronBufferGeometry
function Pe(t,e){var i=(1+Math.sqrt(5))/2,n=1/i;we.call(this,[
// (±1, ±1, ±1)
-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,
// (0, ±1/φ, ±φ)
0,-n,-i,0,-n,i,0,n,-i,0,n,i,
// (±1/φ, ±φ, 0)
-n,-i,0,-n,i,0,n,-i,0,n,i,0,
// (±φ, 0, ±1/φ)
-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}/**
 * @author oosmoxiecode / https://github.com/oosmoxiecode
 * @author WestLangley / https://github.com/WestLangley
 * @author zz85 / https://github.com/zz85
 * @author miningold / https://github.com/miningold
 * @author jonobr1 / https://github.com/jonobr1
 * @author Mugen87 / https://github.com/Mugen87
 *
 */
// TubeGeometry
function Ce(t,e,i,n,r,a){lt.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:n,closed:r},void 0!==a&&console.warn("THREE.TubeGeometry: taper has been removed.");var o=new Ie(t,e,i,n,r);
// expose internals
this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,
// create geometry
this.fromBufferGeometry(o),this.mergeVertices()}
// TubeBufferGeometry
function Ie(t,i,n,a,o){function s(e){
// we use getPointAt to sample evenly distributed points from the given path
f=t.getPointAt(e/i,f);
// retrieve corresponding normal and binormal
var r=c.normals[e],o=c.binormals[e];
// generate normals and vertices for the current segment
for(l=0;l<=a;l++){var s=l/a*Math.PI*2,h=Math.sin(s),p=-Math.cos(s);
// normal
d.x=p*r.x+h*o.x,d.y=p*r.y+h*o.y,d.z=p*r.z+h*o.z,d.normalize(),g.push(d.x,d.y,d.z),
// vertex
u.x=f.x+n*d.x,u.y=f.y+n*d.y,u.z=f.z+n*d.z,m.push(u.x,u.y,u.z)}}Mt.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:i,radius:n,radialSegments:a,closed:o},i=i||64,n=n||1,a=a||8,o=o||!1;var c=t.computeFrenetFrames(i,o);
// expose internals
this.tangents=c.tangents,this.normals=c.normals,this.binormals=c.binormals;
// helper variables
var h,l,u=new r,d=new r,p=new e,f=new r,m=[],g=[],v=[],y=[];
// create buffer data
!
// functions
function(){for(h=0;h<i;h++)s(h);
// if the geometry is not closed, generate the last row of vertices and normals
// at the regular position on the given path
//
// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)
s(!1===o?i:0),
// uvs are generated in a separate function.
// this makes it easy compute correct values for closed geometries
function(){for(h=0;h<=i;h++)for(l=0;l<=a;l++)p.x=h/i,p.y=l/a,v.push(p.x,p.y)}(),
// finally create faces
function(){for(l=1;l<=i;l++)for(h=1;h<=a;h++){var t=(a+1)*(l-1)+(h-1),e=(a+1)*l+(h-1),n=(a+1)*l+h,r=(a+1)*(l-1)+h;
// faces
y.push(t,e,r),y.push(e,n,r)}}()}(),
// build geometry
this.setIndex(y),this.addAttribute("position",new xt(m,3)),this.addAttribute("normal",new xt(g,3)),this.addAttribute("uv",new xt(v,2))}/**
 * @author oosmoxiecode
 * @author Mugen87 / https://github.com/Mugen87
 *
 * based on http://www.blackpawn.com/texts/pqtorus/
 */
// TorusKnotGeometry
function Ue(t,e,i,n,r,a,o){lt.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:r,q:a},void 0!==o&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new Ne(t,e,i,n,r,a)),this.mergeVertices()}
// TorusKnotBufferGeometry
function Ne(t,e,i,n,a,o){
// this function calculates the current position on the torus curve
function s(t,e,i,n,r){var a=Math.cos(t),o=Math.sin(t),s=i/e*t,c=Math.cos(s);r.x=n*(2+c)*.5*a,r.y=n*(2+c)*o*.5,r.z=n*Math.sin(s)*.5}Mt.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:a,q:o},t=t||1,e=e||.4,i=Math.floor(i)||64,n=Math.floor(n)||8,a=a||2,o=o||3;
// buffers
var c,h,l=[],u=[],d=[],p=[],f=new r,m=new r,g=new r,v=new r,y=new r,x=new r,b=new r;
// generate vertices, normals and uvs
for(c=0;c<=i;++c){
// the radian "u" is used to calculate the position on the torus curve of the current tubular segement
var _=c/i*a*Math.PI*2;for(
// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.
// these points are used to create a special "coordinate space", which is necessary to calculate the correct vertex positions
s(_,a,o,t,g),s(_+.01,a,o,t,v),
// calculate orthonormal basis
x.subVectors(v,g),b.addVectors(v,g),y.crossVectors(x,b),b.crossVectors(y,x),
// normalize B, N. T can be ignored, we don't use it
y.normalize(),b.normalize(),h=0;h<=n;++h){
// now calculate the vertices. they are nothing more than an extrusion of the torus curve.
// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.
var w=h/n*Math.PI*2,M=-e*Math.cos(w),E=e*Math.sin(w);
// now calculate the final vertex position.
// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve
f.x=g.x+(M*b.x+E*y.x),f.y=g.y+(M*b.y+E*y.y),f.z=g.z+(M*b.z+E*y.z),u.push(f.x,f.y,f.z),
// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)
m.subVectors(f,g).normalize(),d.push(m.x,m.y,m.z),
// uv
p.push(c/i),p.push(h/n)}}
// generate indices
for(h=1;h<=i;h++)for(c=1;c<=n;c++){
// indices
var T=(n+1)*(h-1)+(c-1),S=(n+1)*h+(c-1),A=(n+1)*h+c,L=(n+1)*(h-1)+c;
// faces
l.push(T,S,L),l.push(S,A,L)}
// build geometry
this.setIndex(l),this.addAttribute("position",new xt(u,3)),this.addAttribute("normal",new xt(d,3)),this.addAttribute("uv",new xt(p,2))}/**
 * @author oosmoxiecode
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */
// TorusGeometry
function Oe(t,e,i,n,r){lt.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},this.fromBufferGeometry(new De(t,e,i,n,r)),this.mergeVertices()}
// TorusBufferGeometry
function De(t,e,i,n,a){Mt.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:a},t=t||1,e=e||.4,i=Math.floor(i)||8,n=Math.floor(n)||6,a=a||2*Math.PI;
// buffers
var o,s,c=[],h=[],l=[],u=[],d=new r,p=new r,f=new r;
// generate vertices, normals and uvs
for(o=0;o<=i;o++)for(s=0;s<=n;s++){var m=s/n*a,g=o/i*Math.PI*2;
// vertex
p.x=(t+e*Math.cos(g))*Math.cos(m),p.y=(t+e*Math.cos(g))*Math.sin(m),p.z=e*Math.sin(g),h.push(p.x,p.y,p.z),
// normal
d.x=t*Math.cos(m),d.y=t*Math.sin(m),f.subVectors(p,d).normalize(),l.push(f.x,f.y,f.z),
// uv
u.push(s/n),u.push(o/i)}
// generate indices
for(o=1;o<=i;o++)for(s=1;s<=n;s++){
// indices
var v=(n+1)*o+s-1,y=(n+1)*(o-1)+s-1,x=(n+1)*(o-1)+s,b=(n+1)*o+s;
// faces
c.push(v,y,b),c.push(y,x,b)}
// build geometry
this.setIndex(c),this.addAttribute("position",new xt(h,3)),this.addAttribute("normal",new xt(l,3)),this.addAttribute("uv",new xt(u,2))}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 *
 * Creates extruded geometry from a path shape.
 *
 * parameters = {
 *
 *  curveSegments: <int>, // number of points on the curves
 *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too
 *  amount: <int>, // Depth to extrude the shape
 *
 *  bevelEnabled: <bool>, // turn on bevel
 *  bevelThickness: <float>, // how deep into the original shape bevel goes
 *  bevelSize: <float>, // how far from shape outline is bevel
 *  bevelSegments: <int>, // number of bevel layers
 *
 *  extrudePath: <THREE.Curve> // curve to extrude shape along
 *  frames: <Object> // containing arrays of tangents, normals, binormals
 *
 *  UVGenerator: <Object> // object that provides UV generator functions
 *
 * }
 */
// ExtrudeGeometry
function Fe(t,e){lt.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new Be(t,e)),this.mergeVertices()}
// ExtrudeBufferGeometry
function Be(t,e){void 0!==t&&(Mt.call(this),this.type="ExtrudeBufferGeometry",t=Array.isArray(t)?t:[t],this.addShapeList(t,e),this.computeVertexNormals())}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author alteredq / http://alteredqualia.com/
 *
 * Text = 3D Text
 *
 * parameters = {
 *  font: <THREE.Font>, // font
 *
 *  size: <float>, // size of the text
 *  height: <float>, // thickness to extrude text
 *  curveSegments: <int>, // number of points on the curves
 *
 *  bevelEnabled: <bool>, // turn on bevel
 *  bevelThickness: <float>, // how deep into text bevel goes
 *  bevelSize: <float> // how far from text outline is bevel
 * }
 */
// TextGeometry
function ze(t,e){lt.call(this),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new Ge(t,e)),this.mergeVertices()}
// TextBufferGeometry
function Ge(t,e){var i=(e=e||{}).font;if(!i||!i.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new lt;var n=i.generateShapes(t,e.size,e.curveSegments);
// translate parameters to ExtrudeGeometry API
e.amount=void 0!==e.height?e.height:50,
// defaults
void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),Be.call(this,n,e),this.type="TextBufferGeometry"}/**
 * @author mrdoob / http://mrdoob.com/
 * @author benaadams / https://twitter.com/ben_a_adams
 * @author Mugen87 / https://github.com/Mugen87
 */
// SphereGeometry
function He(t,e,i,n,r,a,o){lt.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new Ve(t,e,i,n,r,a,o)),this.mergeVertices()}
// SphereBufferGeometry
function Ve(t,e,i,n,a,o,s){Mt.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:a,thetaStart:o,thetaLength:s},t=t||1,e=Math.max(3,Math.floor(e)||8),i=Math.max(2,Math.floor(i)||6),n=void 0!==n?n:0,a=void 0!==a?a:2*Math.PI;var c,h,l=(o=void 0!==o?o:0)+(s=void 0!==s?s:Math.PI),u=0,d=[],p=new r,f=new r,m=[],g=[],v=[],y=[];
// generate vertices, normals and uvs
for(h=0;h<=i;h++){var x=[],b=h/i;for(c=0;c<=e;c++){var _=c/e;
// vertex
p.x=-t*Math.cos(n+_*a)*Math.sin(o+b*s),p.y=t*Math.cos(o+b*s),p.z=t*Math.sin(n+_*a)*Math.sin(o+b*s),g.push(p.x,p.y,p.z),
// normal
f.set(p.x,p.y,p.z).normalize(),v.push(f.x,f.y,f.z),
// uv
y.push(_,1-b),x.push(u++)}d.push(x)}
// indices
for(h=0;h<i;h++)for(c=0;c<e;c++){var w=d[h][c+1],M=d[h][c],E=d[h+1][c],T=d[h+1][c+1];(0!==h||o>0)&&m.push(w,M,T),(h!==i-1||l<Math.PI)&&m.push(M,E,T)}
// build geometry
this.setIndex(m),this.addAttribute("position",new xt(g,3)),this.addAttribute("normal",new xt(v,3)),this.addAttribute("uv",new xt(y,2))}/**
 * @author Kaleb Murphy
 * @author Mugen87 / https://github.com/Mugen87
 */
// RingGeometry
function ke(t,e,i,n,r,a){lt.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:a},this.fromBufferGeometry(new je(t,e,i,n,r,a)),this.mergeVertices()}
// RingBufferGeometry
function je(t,i,n,a,o,s){Mt.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:i,thetaSegments:n,phiSegments:a,thetaStart:o,thetaLength:s},t=t||.5,i=i||1,o=void 0!==o?o:0,s=void 0!==s?s:2*Math.PI,n=void 0!==n?Math.max(3,n):8;
// buffers
var c,h,l,u=[],d=[],p=[],f=[],m=t,g=(i-t)/(a=void 0!==a?Math.max(1,a):1),v=new r,y=new e;
// generate vertices, normals and uvs
for(h=0;h<=a;h++){for(l=0;l<=n;l++)
// values are generate from the inside of the ring to the outside
c=o+l/n*s,
// vertex
v.x=m*Math.cos(c),v.y=m*Math.sin(c),d.push(v.x,v.y,v.z),
// normal
p.push(0,0,1),
// uv
y.x=(v.x/i+1)/2,y.y=(v.y/i+1)/2,f.push(y.x,y.y);
// increase the radius for next row of vertices
m+=g}
// indices
for(h=0;h<a;h++){var x=h*(n+1);for(l=0;l<n;l++){var b=c=l+x,_=c+n+1,w=c+n+2,M=c+1;
// faces
u.push(b,_,M),u.push(_,w,M)}}
// build geometry
this.setIndex(u),this.addAttribute("position",new xt(d,3)),this.addAttribute("normal",new xt(p,3)),this.addAttribute("uv",new xt(f,2))}/**
 * @author astrodud / http://astrodud.isgreat.org/
 * @author zz85 / https://github.com/zz85
 * @author bhouston / http://clara.io
 * @author Mugen87 / https://github.com/Mugen87
 */
// LatheGeometry
function We(t,e,i,n){lt.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:n},this.fromBufferGeometry(new Xe(t,e,i,n)),this.mergeVertices()}
// LatheBufferGeometry
function Xe(t,i,n,a){Mt.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:i,phiStart:n,phiLength:a},i=Math.floor(i)||12,n=n||0,a=a||2*Math.PI,
// clamp phiLength so it's in range of [ 0, 2PI ]
a=ou.clamp(a,0,2*Math.PI);
// buffers
var o,s,c,h=[],l=[],u=[],d=1/i,p=new r,f=new e;
// generate vertices and uvs
for(s=0;s<=i;s++){var m=n+s*d*a,g=Math.sin(m),v=Math.cos(m);for(c=0;c<=t.length-1;c++)
// vertex
p.x=t[c].x*g,p.y=t[c].y,p.z=t[c].x*v,l.push(p.x,p.y,p.z),
// uv
f.x=s/i,f.y=c/(t.length-1),u.push(f.x,f.y)}
// indices
for(s=0;s<i;s++)for(c=0;c<t.length-1;c++){var y=o=c+s*t.length,x=o+t.length,b=o+t.length+1,_=o+1;
// faces
h.push(y,x,_),h.push(x,b,_)}
// if the geometry is closed, we need to average the normals along the seam.
// because the corresponding vertices are identical (but still have different UVs).
if(
// build geometry
this.setIndex(h),this.addAttribute("position",new xt(l,3)),this.addAttribute("uv",new xt(u,2)),
// generate normals
this.computeVertexNormals(),a===2*Math.PI){var w=this.attributes.normal.array,M=new r,E=new r,T=new r;for(
// this is the buffer offset for the last line of vertices
o=i*t.length*3,s=0,c=0;s<t.length;s++,c+=3)
// select the normal of the vertex in the first line
M.x=w[c+0],M.y=w[c+1],M.z=w[c+2],
// select the normal of the vertex in the last line
E.x=w[o+c+0],E.y=w[o+c+1],E.z=w[o+c+2],
// average normals
T.addVectors(M,E).normalize(),
// assign the new values to both normals
w[c+0]=w[o+c+0]=T.x,w[c+1]=w[o+c+1]=T.y,w[c+2]=w[o+c+2]=T.z}}/**
 * @author jonobr1 / http://jonobr1.com
 * @author Mugen87 / https://github.com/Mugen87
 */
// ShapeGeometry
function qe(t,e){lt.call(this),this.type="ShapeGeometry","object"==typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new Ye(t,e)),this.mergeVertices()}
// ShapeBufferGeometry
function Ye(t,e){
// helper functions
function i(t){var i,s,h,l=r.length/3,u=t.extractPoints(e),d=u.shape,p=u.holes;
// check direction of vertices
if(!1===Tu.isClockWise(d))
// also check if holes are in the opposite direction
for(d=d.reverse(),i=0,s=p.length;i<s;i++)h=p[i],!0===Tu.isClockWise(h)&&(p[i]=h.reverse());var f=Tu.triangulateShape(d,p);
// join vertices of inner and outer paths to a single array
for(i=0,s=p.length;i<s;i++)h=p[i],d=d.concat(h);
// vertices, normals, uvs
for(i=0,s=d.length;i<s;i++){var m=d[i];r.push(m.x,m.y,0),a.push(0,0,1),o.push(m.x,m.y)}
// incides
for(i=0,s=f.length;i<s;i++){var g=f[i],v=g[0]+l,y=g[1]+l,x=g[2]+l;n.push(v,y,x),c+=3}}Mt.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;
// buffers
var n=[],r=[],a=[],o=[],s=0,c=0;
// allow single and array values for "shapes" parameter
if(!1===Array.isArray(t))i(t);else for(var h=0;h<t.length;h++)i(t[h]),this.addGroup(s,c,h),// enables MultiMaterial support
s+=c,c=0;
// build geometry
this.setIndex(n),this.addAttribute("position",new xt(r,3)),this.addAttribute("normal",new xt(a,3)),this.addAttribute("uv",new xt(o,2))}/**
 * @author WestLangley / http://github.com/WestLangley
 * @author Mugen87 / https://github.com/Mugen87
 */
function Ze(t,e){Mt.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;
// buffer
var i,n,r,a,o=[],s=Math.cos(ou.DEG2RAD*e),c=[0,0],h={},l=["a","b","c"];t.isBufferGeometry?(a=new lt).fromBufferGeometry(t):a=t.clone(),a.mergeVertices(),a.computeFaceNormals();
// now create a data structure where each entry represents an edge with its adjoining faces
for(var u=a.vertices,d=a.faces,p=0,f=d.length;p<f;p++)for(var m=d[p],g=0;g<3;g++)i=m[l[g]],n=m[l[(g+1)%3]],c[0]=Math.min(i,n),c[1]=Math.max(i,n),void 0===h[r=c[0]+","+c[1]]?h[r]={index1:c[0],index2:c[1],face1:p,face2:void 0}:h[r].face2=p;
// generate vertices
for(r in h){var v=h[r];
// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.
if(void 0===v.face2||d[v.face1].normal.dot(d[v.face2].normal)<=s){var y=u[v.index1];o.push(y.x,y.y,y.z),y=u[v.index2],o.push(y.x,y.y,y.z)}}
// build geometry
this.addAttribute("position",new xt(o,3))}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */
// CylinderGeometry
function Je(t,e,i,n,r,a,o,s){lt.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:n,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new Qe(t,e,i,n,r,a,o,s)),this.mergeVertices()}
// CylinderBufferGeometry
function Qe(t,i,n,a,o,s,c,h){function l(n){var o,s,l,v=new e,b=new r,_=0,w=!0===n?t:i,M=!0===n?1:-1;
// first we generate the center vertex data of the cap.
// because the geometry needs one set of uvs per face,
// we must generate a center vertex per face/segment
for(
// save the index of the first center vertex
s=g,o=1;o<=a;o++)
// vertex
p.push(0,y*M,0),
// normal
f.push(0,M,0),
// uv
m.push(.5,.5),
// increase index
g++;
// now we generate the surrounding vertices, normals and uvs
for(
// save the index of the last center vertex
l=g,o=0;o<=a;o++){var E=o/a*h+c,T=Math.cos(E),S=Math.sin(E);
// vertex
b.x=w*S,b.y=y*M,b.z=w*T,p.push(b.x,b.y,b.z),
// normal
f.push(0,M,0),
// uv
v.x=.5*T+.5,v.y=.5*S*M+.5,m.push(v.x,v.y),
// increase index
g++}
// generate indices
for(o=0;o<a;o++){var A=s+o,L=l+o;!0===n?
// face top
d.push(L,L+1,A):
// face bottom
d.push(L+1,L,A),_+=3}
// add a group to the geometry. this will ensure multi material support
u.addGroup(x,_,!0===n?1:2),
// calculate new start value for groups
x+=_}Mt.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:i,height:n,radialSegments:a,heightSegments:o,openEnded:s,thetaStart:c,thetaLength:h};var u=this;t=void 0!==t?t:1,i=void 0!==i?i:1,n=n||1,a=Math.floor(a)||8,o=Math.floor(o)||1,s=void 0!==s&&s,c=void 0!==c?c:0,h=void 0!==h?h:2*Math.PI;
// buffers
var d=[],p=[],f=[],m=[],g=0,v=[],y=n/2,x=0;
// generate geometry
!function(){var e,s,l=new r,b=new r,_=0,w=(i-t)/n;
// generate vertices, normals and uvs
for(s=0;s<=o;s++){var M=[],E=s/o,T=E*(i-t)+t;for(e=0;e<=a;e++){var S=e/a,A=S*h+c,L=Math.sin(A),R=Math.cos(A);
// vertex
b.x=T*L,b.y=-E*n+y,b.z=T*R,p.push(b.x,b.y,b.z),
// normal
l.set(L,w,R).normalize(),f.push(l.x,l.y,l.z),
// uv
m.push(S,1-E),
// save index of vertex in respective row
M.push(g++)}
// now save vertices of the row in our index array
v.push(M)}
// generate indices
for(e=0;e<a;e++)for(s=0;s<o;s++){
// we use the index array to access the correct indices
var P=v[s][e],C=v[s+1][e],I=v[s+1][e+1],U=v[s][e+1];
// faces
d.push(P,C,U),d.push(C,I,U),
// update group counter
_+=6}
// add a group to the geometry. this will ensure multi material support
u.addGroup(x,_,0),
// calculate new start value for groups
x+=_}(),!1===s&&(t>0&&l(!0),i>0&&l(!1)),
// build geometry
this.setIndex(d),this.addAttribute("position",new xt(p,3)),this.addAttribute("normal",new xt(f,3)),this.addAttribute("uv",new xt(m,2))}/**
 * @author abelnation / http://github.com/abelnation
 */
// ConeGeometry
function Ke(t,e,i,n,r,a,o){Je.call(this,0,t,e,i,n,r,a,o),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:a,thetaLength:o}}
// ConeBufferGeometry
function $e(t,e,i,n,r,a,o){Qe.call(this,0,t,e,i,n,r,a,o),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:a,thetaLength:o}}/**
 * @author benaadams / https://twitter.com/ben_a_adams
 * @author Mugen87 / https://github.com/Mugen87
 * @author hughes
 */
// CircleGeometry
function ti(t,e,i,n){lt.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:n},this.fromBufferGeometry(new ei(t,e,i,n)),this.mergeVertices()}
// CircleBufferGeometry
function ei(t,i,n,a){Mt.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:i,thetaStart:n,thetaLength:a},t=t||1,i=void 0!==i?Math.max(3,i):8,n=void 0!==n?n:0,a=void 0!==a?a:2*Math.PI;
// buffers
var o,s,c=[],h=[],l=[],u=[],d=new r,p=new e;for(
// center point
h.push(0,0,0),l.push(0,0,1),u.push(.5,.5),s=0,o=3;s<=i;s++,o+=3){var f=n+s/i*a;
// vertex
d.x=t*Math.cos(f),d.y=t*Math.sin(f),h.push(d.x,d.y,d.z),
// normal
l.push(0,0,1),
// uvs
p.x=(h[o]/t+1)/2,p.y=(h[o+1]/t+1)/2,u.push(p.x,p.y)}
// indices
for(o=1;o<=i;o++)c.push(o,o+1,0);
// build geometry
this.setIndex(c),this.addAttribute("position",new xt(h,3)),this.addAttribute("normal",new xt(l,3)),this.addAttribute("uv",new xt(u,2))}/**
 * @author mrdoob / http://mrdoob.com/
 *
 * parameters = {
 *  color: <THREE.Color>,
 *  opacity: <float>
 * }
 */
function ii(t){Z.call(this),this.type="ShadowMaterial",this.color=new j(0),this.opacity=1,this.lights=!0,this.transparent=!0,this.setValues(t)}/**
 * @author mrdoob / http://mrdoob.com/
 */
function ni(t){Rt.call(this,t),this.type="RawShaderMaterial"}/**
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *  color: <hex>,
 *  roughness: <float>,
 *  metalness: <float>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  roughnessMap: new THREE.Texture( <Image> ),
 *
 *  metalnessMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  envMapIntensity: <float>
 *
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */
function ri(t){Z.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new j(16777215),// diffuse
this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new j(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new e(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}/**
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *  reflectivity: <float>
 * }
 */
function ai(t){ri.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,// maps to F0 = 0.04
this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(t)}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  specular: <hex>,
 *  shininess: <float>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */
function oi(t){Z.call(this),this.type="MeshPhongMaterial",this.color=new j(16777215),// diffuse
this.specular=new j(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new j(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new e(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Yh,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}/**
 * @author takahirox / http://github.com/takahirox
 *
 * parameters = {
 *  gradientMap: new THREE.Texture( <Image> )
 * }
 */
function si(t){oi.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(t)}/**
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *  opacity: <float>,
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */
function ci(t){Z.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new e(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */
function hi(t){Z.call(this),this.type="MeshLambertMaterial",this.color=new j(16777215),// diffuse
this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new j(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Yh,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  linewidth: <float>,
 *
 *  scale: <float>,
 *  dashSize: <float>,
 *  gapSize: <float>
 * }
 */
function li(t){ce.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}/**
 * @author mrdoob / http://mrdoob.com/
 */
function ui(t,e,i){var n=this,r=!1,a=0,o=0,s=void 0;this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){o++,!1===r&&void 0!==n.onStart&&n.onStart(t,a,o),r=!0},this.itemEnd=function(t){a++,void 0!==n.onProgress&&n.onProgress(t,a,o),a===o&&(r=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(t){void 0!==n.onError&&n.onError(t)},this.resolveURL=function(t){return s?s(t):t},this.setURLModifier=function(t){s=t}}function di(t){this.manager=void 0!==t?t:Ru}/**
 * @author mrdoob / http://mrdoob.com/
 */
function pi(t){this.manager=void 0!==t?t:Ru}/**
 * @author mrdoob / http://mrdoob.com/
 */
function fi(t){this.manager=void 0!==t?t:Ru}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
function mi(t,e){ot.call(this),this.type="Light",this.color=new j(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}/**
 * @author alteredq / http://alteredqualia.com/
 */
function gi(t,e,i){mi.call(this,t,i),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(ot.DefaultUp),this.updateMatrix(),this.groundColor=new j(e)}/**
 * @author mrdoob / http://mrdoob.com/
 */
function vi(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new e(512,512),this.map=null,this.matrix=new i}/**
 * @author mrdoob / http://mrdoob.com/
 */
function yi(){vi.call(this,new Zt(50,1,.5,500))}/**
 * @author alteredq / http://alteredqualia.com/
 */
function xi(t,e,i,n,r,a){mi.call(this,t,e),this.type="SpotLight",this.position.copy(ot.DefaultUp),this.updateMatrix(),this.target=new ot,Object.defineProperty(this,"power",{get:function(){
// intensity = power per solid angle.
// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
return this.intensity*Math.PI},set:function(t){
// intensity = power per solid angle.
// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
this.intensity=t/Math.PI}}),this.distance=void 0!==i?i:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==r?r:0,this.decay=void 0!==a?a:1,// for physically correct lights, should be 2.
this.shadow=new yi}/**
 * @author mrdoob / http://mrdoob.com/
 */
function bi(t,e,i,n){mi.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){
// intensity = power per solid angle.
// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
return 4*this.intensity*Math.PI},set:function(t){
// intensity = power per solid angle.
// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==i?i:0,this.decay=void 0!==n?n:1,// for physically correct lights, should be 2.
this.shadow=new vi(new Zt(90,1,.5,500))}/**
 * @author mrdoob / http://mrdoob.com/
 */
function _i(){vi.call(this,new ct(-5,5,5,-5,.5,500))}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
function wi(t,e){mi.call(this,t,e),this.type="DirectionalLight",this.position.copy(ot.DefaultUp),this.updateMatrix(),this.target=new ot,this.shadow=new _i}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Mi(t,e){mi.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}/**
 * @author abelnation / http://github.com/abelnation
 */
function Ei(t,e,i,n){mi.call(this,t,e),this.type="RectAreaLight",this.position.set(0,1,0),this.updateMatrix(),this.width=void 0!==i?i:10,this.height=void 0!==n?n:10}/**
 * Abstract base class of interpolants over parametric samples.
 *
 * The parameter domain is one dimensional, typically the time or a path
 * along a curve defined by the data.
 *
 * The sample values can have any dimensionality and derived classes may
 * apply special interpretations to the data.
 *
 * This class provides the interval seek in a Template Method, deferring
 * the actual interpolation to derived classes.
 *
 * Time complexity is O(1) for linear access crossing at most two points
 * and O(log N) for random access, where N is the number of positions.
 *
 * References:
 *
 * 		http://www.oodesign.com/template-method-pattern.html
 *
 * @author tschw
 */
function Ti(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i}/**
 * Fast and simple cubic spline interpolant.
 *
 * It was derived from a Hermitian construction setting the first derivative
 * at each sample position to the linear slope between neighboring positions
 * over their parameter interval.
 *
 * @author tschw
 */
function Si(t,e,i,n){Ti.call(this,t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}/**
 * @author tschw
 */
function Ai(t,e,i,n){Ti.call(this,t,e,i,n)}/**
 *
 * Interpolant that evaluates to the sample value at the position preceeding
 * the parameter.
 *
 * @author tschw
 */
function Li(t,e,i,n){Ti.call(this,t,e,i,n)}function Ri(t,e,i,n){if(void 0===t)throw new Error("track name is undefined");if(void 0===e||0===e.length)throw new Error("no keyframes in track named "+t);this.name=t,this.times=Cu.convertArray(e,this.TimeBufferType),this.values=Cu.convertArray(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation),this.validate(),this.optimize()}/**
 *
 * A Track of vectored keyframe values.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function Pi(t,e,i,n){Ri.call(this,t,e,i,n)}/**
 * Spherical linear unit quaternion interpolant.
 *
 * @author tschw
 */
function Ci(t,e,i,n){Ti.call(this,t,e,i,n)}/**
 *
 * A Track of quaternion keyframe values.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function Ii(t,e,i,n){Ri.call(this,t,e,i,n)}/**
 *
 * A Track of numeric keyframe values.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function Ui(t,e,i,n){Ri.call(this,t,e,i,n)}/**
 *
 * A Track that interpolates Strings
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function Ni(t,e,i,n){Ri.call(this,t,e,i,n)}/**
 *
 * A Track of Boolean keyframe values.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function Oi(t,e,i){Ri.call(this,t,e,i)}/**
 *
 * A Track of keyframe values that represent color.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function Di(t,e,i,n){Ri.call(this,t,e,i,n)}/**
 *
 * A timed sequence of keyframes for a specific property.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function Fi(t,e,i,n){Ri.apply(this,t,e,i,n)}/**
 *
 * Reusable set of Tracks that represent an animation.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 */
function Bi(t,e,i){this.name=t,this.tracks=i,this.duration=void 0!==e?e:-1,this.uuid=ou.generateUUID(),
// this means it should figure out its duration by scanning the tracks
this.duration<0&&this.resetDuration(),this.optimize()}/**
 * @author mrdoob / http://mrdoob.com/
 */
function zi(t){this.manager=void 0!==t?t:Ru,this.textures={}}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Gi(t){this.manager=void 0!==t?t:Ru}/**
 * @author alteredq / http://alteredqualia.com/
 */
function Hi(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
function Vi(t){"boolean"==typeof t&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),t=void 0),this.manager=void 0!==t?t:Ru,this.withCredentials=!1}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 *
 * Bezier Curves formulas obtained from
 * http://en.wikipedia.org/wiki/Bézier_curve
 */
function ki(t,e,i,n,r){var a=.5*(n-e),o=.5*(r-i),s=t*t;return(2*i-2*n+a+o)*(t*s)+(-3*i+3*n-2*a-o)*s+a*t+i}function ji(t,e,i,n){
//
return function(t,e){var i=1-t;return i*i*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,i)+function(t,e){return t*t*e}(t,n)}function Wi(t,e,i,n,r){
//
return function(t,e){var i=1-t;return i*i*i*e}(t,e)+function(t,e){var i=1-t;return 3*i*i*t*e}(t,i)+function(t,e){return 3*(1-t)*t*t*e}(t,n)+function(t,e){return t*t*t*e}(t,r)}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Extensible curve object
 *
 * Some common of curve methods:
 * .getPoint( t, optionalTarget ), .getTangent( t )
 * .getPointAt( u, optionalTarget ), .getTangentAt( u )
 * .getPoints(), .getSpacedPoints()
 * .getLength()
 * .updateArcLengths()
 *
 * This following curves inherit from THREE.Curve:
 *
 * -- 2D curves --
 * THREE.ArcCurve
 * THREE.CubicBezierCurve
 * THREE.EllipseCurve
 * THREE.LineCurve
 * THREE.QuadraticBezierCurve
 * THREE.SplineCurve
 *
 * -- 3D curves --
 * THREE.CatmullRomCurve3
 * THREE.CubicBezierCurve3
 * THREE.LineCurve3
 * THREE.QuadraticBezierCurve3
 *
 * A series of curves can be represented as a THREE.CurvePath.
 *
 **/
/**************************************************************
 *	Abstract Curve base class
 **************************************************************/
function Xi(){this.type="Curve",this.arcLengthDivisions=200}function qi(t,i){Xi.call(this),this.type="LineCurve",this.v1=t||new e,this.v2=i||new e}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 *
 **/
/**************************************************************
 *	Curved Path - a curve path is simply a array of connected
 *  curves, but retains the api of a curve
 **************************************************************/
function Yi(){Xi.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Zi(t,e,i,n,r,a,o,s){Xi.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=i||1,this.yRadius=n||1,this.aStartAngle=r||0,this.aEndAngle=a||2*Math.PI,this.aClockwise=o||!1,this.aRotation=s||0}function Ji(t){Xi.call(this),this.type="SplineCurve",this.points=t||[]}function Qi(t,i,n,r){Xi.call(this),this.type="CubicBezierCurve",this.v0=t||new e,this.v1=i||new e,this.v2=n||new e,this.v3=r||new e}function Ki(t,i,n){Xi.call(this),this.type="QuadraticBezierCurve",this.v0=t||new e,this.v1=i||new e,this.v2=n||new e}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Creates free form 2d path using series of points, lines or curves.
 **/
function $i(t){Yi.call(this),this.type="Path",this.currentPoint=new e,t&&this.setFromPoints(t)}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Defines a 2d shape plane using paths.
 **/
// STEP 1 Create a path.
// STEP 2 Turn path into shape.
// STEP 3 ExtrudeGeometry takes in Shape/Shapes
// STEP 3a - Extract points from each shape, turn to vertices
// STEP 3b - Triangulate each shape, add faces.
function tn(t){$i.call(this,t),this.type="Shape",this.holes=[]}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * minimal class for proxing functions to Path. Replaces old "extractSubpaths()"
 **/
function en(){this.type="ShapePath",this.subPaths=[],this.currentPath=null}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author mrdoob / http://mrdoob.com/
 */
function nn(t){this.type="Font",this.data=t}/**
 * @author Reece Aaron Lecrivain / http://reecenotes.com/
 */
function rn(t){this.manager=void 0!==t?t:Ru}/**
 * Camera for rendering cube maps
 *	- renders scene into axis-aligned cube
 *
 * @author alteredq / http://alteredqualia.com/
 */
function an(t,e,i){ot.call(this),this.type="CubeCamera";var n=new Zt(90,1,t,e);n.up.set(0,-1,0),n.lookAt(new r(1,0,0)),this.add(n);var a=new Zt(90,1,t,e);a.up.set(0,-1,0),a.lookAt(new r(-1,0,0)),this.add(a);var o=new Zt(90,1,t,e);o.up.set(0,0,1),o.lookAt(new r(0,1,0)),this.add(o);var s=new Zt(90,1,t,e);s.up.set(0,0,-1),s.lookAt(new r(0,-1,0)),this.add(s);var c=new Zt(90,1,t,e);c.up.set(0,-1,0),c.lookAt(new r(0,0,1)),this.add(c);var l=new Zt(90,1,t,e);l.up.set(0,-1,0),l.lookAt(new r(0,0,-1)),this.add(l);var u={format:Cl,magFilter:ml,minFilter:ml};this.renderTarget=new h(i,i,u),this.renderTarget.texture.name="CubeCamera",this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();var i=this.renderTarget,r=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,i.activeCubeFace=0,t.render(e,n,i),i.activeCubeFace=1,t.render(e,a,i),i.activeCubeFace=2,t.render(e,o,i),i.activeCubeFace=3,t.render(e,s,i),i.activeCubeFace=4,t.render(e,c,i),i.texture.generateMipmaps=r,i.activeCubeFace=5,t.render(e,l,i),t.setRenderTarget(null)},this.clear=function(t,e,i,n){for(var r=this.renderTarget,a=0;a<6;a++)r.activeCubeFace=a,t.setRenderTarget(r),t.clear(e,i,n);t.setRenderTarget(null)}}/**
 * @author mrdoob / http://mrdoob.com/
 */
function on(){ot.call(this),this.type="AudioListener",this.context=zu.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Reece Aaron Lecrivain / http://reecenotes.com/
 */
function sn(t){ot.call(this),this.type="Audio",this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.loop=!1,this.startTime=0,this.offset=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]}/**
 * @author mrdoob / http://mrdoob.com/
 */
function cn(t){sn.call(this,t),this.panner=this.context.createPanner(),this.panner.connect(this.gain)}/**
 * @author mrdoob / http://mrdoob.com/
 */
function hn(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}/**
 *
 * Buffered scene graph property that allows weighted accumulation.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function ln(t,e,i){this.binding=t,this.valueSize=i;var n,r=Float64Array;switch(e){case"quaternion":n=this._slerp;break;case"string":case"bool":r=Array,n=this._select;break;default:n=this._lerp}this.buffer=new r(4*i),
// layout: [ incoming | accu0 | accu1 | orig ]
//
// interpolators can use .buffer as their .result
// the data then goes to 'incoming'
//
// 'accu0' and 'accu1' are used frame-interleaved for
// the cumulative result and are compared to detect
// changes
//
// 'orig' stores the original state of the property
this._mixBufferRegion=n,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}/**
 *
 * A reference to a real property in the scene graph.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function un(t,e,i){var n=i||dn.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)}function dn(t,e,i){this.path=e,this.parsedPath=i||dn.parseTrackName(e),this.node=dn.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}/**
 *
 * Action provided by AnimationMixer for scheduling clip playback on specific
 * objects.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 *
 */
function pn(t,e,i){this._mixer=t,this._clip=e,this._localRoot=i||null;for(var n=e.tracks,r=n.length,a=new Array(r),o={endingStart:ql,endingEnd:ql},s=0;s!==r;++s){var c=n[s].createInterpolant(null);a[s]=c,c.settings=o}this._interpolantSettings=o,this._interpolants=a,// bound by the mixer
// inside: PropertyMixer (managed by the mixer)
this._propertyBindings=new Array(r),this._cacheIndex=null,// for the memory manager
this._byClipCacheIndex=null,// for the memory manager
this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Xl,this._loopCount=-1,
// global mixer time when the action is to be started
// it's set back to 'null' upon start of the action
this._startTime=null,
// scaled local time of the action
// gets clamped or wrapped to 0..clip.duration according to loop
this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,// no. of repetitions when looping
this.paused=!1,// true -> zero effective time scale
this.enabled=!0,// false -> zero effective weight
this.clampWhenFinished=!1,// keep feeding the last frame?
this.zeroSlopeAtStart=!0,// for smooth interpolation w/o separate
this.zeroSlopeAtEnd=!0}/**
 * @author mrdoob / http://mrdoob.com/
 */
function fn(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */
function mn(){Mt.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */
function gn(t,e,i,n){this.uuid=ou.generateUUID(),this.data=t,this.itemSize=e,this.offset=i,this.normalized=!0===n}/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */
function vn(t,e){this.uuid=ou.generateUUID(),this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */
function yn(t,e,i){vn.call(this,t,e),this.meshPerAttribute=i||1}/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */
function xn(t,e,i){ut.call(this,t,e),this.meshPerAttribute=i||1}/**
 * @author mrdoob / http://mrdoob.com/
 * @author bhouston / http://clara.io/
 * @author stephomi / http://stephaneginier.com/
 */
function bn(t,e,i,n){this.ray=new Pt(t,e),
// direction is assumed to be normalized (for accurate distance calculations)
this.near=i||0,this.far=n||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function _n(t,e){return t.distance-e.distance}function wn(t,e,i,n){if(!1!==t.visible&&(t.raycast(e,i),!0===n))for(var r=t.children,a=0,o=r.length;a<o;a++)wn(r[a],e,i,!0)}/**
 * @author alteredq / http://alteredqualia.com/
 */
function Mn(t){ot.call(this),this.material=t,this.render=function(){}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 */
function En(t,e,i,n){this.object=t,this.size=void 0!==e?e:1;var r=void 0!==i?i:16711680,a=void 0!==n?n:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=3*s.faces.length:s&&s.isBufferGeometry&&(o=s.attributes.normal.count);
//
var c=new Mt,h=new xt(2*o*3,3);c.addAttribute("position",h),le.call(this,c,new ce({color:r,linewidth:a})),
//
this.matrixAutoUpdate=!1,this.update()}/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 */
function Tn(t,e){ot.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;for(var i=new Mt,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],r=0,a=1;r<32;r++,a++){var o=r/32*Math.PI*2,s=a/32*Math.PI*2;n.push(Math.cos(o),Math.sin(o),1,Math.cos(s),Math.sin(s),1)}i.addAttribute("position",new xt(n,3));var c=new ce({fog:!1});this.cone=new le(i,c),this.add(this.cone),this.update()}/**
 * @author Sean Griffin / http://twitter.com/sgrif
 * @author Michael Guerrero / http://realitymeltdown.com
 * @author mrdoob / http://mrdoob.com/
 * @author ikerr / http://verold.com
 * @author Mugen87 / https://github.com/Mugen87
 */
function Sn(t){var e=[];t&&t.isBone&&e.push(t);for(var i=0;i<t.children.length;i++)e.push.apply(e,Sn(t.children[i]));return e}function An(t){for(var e=Sn(t),i=new Mt,n=[],r=[],a=new j(0,0,1),o=new j(0,1,0),s=0;s<e.length;s++){var c=e[s];c.parent&&c.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(a.r,a.g,a.b),r.push(o.r,o.g,o.b))}i.addAttribute("position",new xt(n,3)),i.addAttribute("color",new xt(r,3));var h=new ce({vertexColors:vh,depthTest:!1,depthWrite:!1,transparent:!0});le.call(this,i,h),this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */
function Ln(t,e,i){this.light=t,this.light.updateMatrixWorld(),this.color=i;var n=new Ve(e,4,2),r=new Lt({wireframe:!0,fog:!1});Ut.call(this,n,r),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}/**
 * @author abelnation / http://github.com/abelnation
 * @author Mugen87 / http://github.com/Mugen87
 * @author WestLangley / http://github.com/WestLangley
 */
function Rn(t,e){ot.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;var i=new ce({fog:!1}),n=new Mt;n.addAttribute("position",new ut(new Float32Array(15),3)),this.line=new he(n,i),this.add(this.line),this.update()}/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */
function Pn(t,e,i){ot.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;var n=new Se(e);n.rotateY(.5*Math.PI),this.material=new Lt({wireframe:!0,fog:!1}),void 0===this.color&&(this.material.vertexColors=vh);var r=n.getAttribute("position"),a=new Float32Array(3*r.count);n.addAttribute("color",new ut(a,3)),this.add(new Ut(n,this.material)),this.update()}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Cn(t,e,i,n){t=t||10,e=e||10,i=new j(void 0!==i?i:4473924),n=new j(void 0!==n?n:8947848);for(var r=e/2,a=t/e,o=t/2,s=[],c=[],h=0,l=0,u=-o;h<=e;h++,u+=a){s.push(-o,0,u,o,0,u),s.push(u,0,-o,u,0,o);var d=h===r?i:n;d.toArray(c,l),l+=3,d.toArray(c,l),l+=3,d.toArray(c,l),l+=3,d.toArray(c,l),l+=3}var p=new Mt;p.addAttribute("position",new xt(s,3)),p.addAttribute("color",new xt(c,3));var f=new ce({vertexColors:vh});le.call(this,p,f)}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / http://github.com/Mugen87
 * @author Hectate / http://www.github.com/Hectate
 */
function In(t,e,i,n,r,a){t=t||10,e=e||16,i=i||8,n=n||64,r=new j(void 0!==r?r:4473924),a=new j(void 0!==a?a:8947848);var o,s,c,h,l,u,d,p=[],f=[];
// create the radials
for(h=0;h<=e;h++)c=h/e*(2*Math.PI),o=Math.sin(c)*t,s=Math.cos(c)*t,p.push(0,0,0),p.push(o,0,s),d=1&h?r:a,f.push(d.r,d.g,d.b),f.push(d.r,d.g,d.b);
// create the circles
for(h=0;h<=i;h++)for(d=1&h?r:a,u=t-t/i*h,l=0;l<n;l++)
// first vertex
c=l/n*(2*Math.PI),o=Math.sin(c)*u,s=Math.cos(c)*u,p.push(o,0,s),f.push(d.r,d.g,d.b),
// second vertex
c=(l+1)/n*(2*Math.PI),o=Math.sin(c)*u,s=Math.cos(c)*u,p.push(o,0,s),f.push(d.r,d.g,d.b);var m=new Mt;m.addAttribute("position",new xt(p,3)),m.addAttribute("color",new xt(f,3));var g=new ce({vertexColors:vh});le.call(this,m,g)}/**
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 */
function Un(t,e,i,n){
// FaceNormalsHelper only supports THREE.Geometry
this.object=t,this.size=void 0!==e?e:1;var r=void 0!==i?i:16776960,a=void 0!==n?n:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=s.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
//
var c=new Mt,h=new xt(2*o*3,3);c.addAttribute("position",h),le.call(this,c,new ce({color:r,linewidth:a})),
//
this.matrixAutoUpdate=!1,this.update()}/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 */
function Nn(t,e,i){ot.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===e&&(e=1);var n=new Mt;n.addAttribute("position",new xt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));var r=new ce({fog:!1});this.lightPlane=new he(n,r),this.add(this.lightPlane),(n=new Mt).addAttribute("position",new xt([0,0,0,0,0,1],3)),this.targetLine=new he(n,r),this.add(this.targetLine),this.update()}/**
 * @author alteredq / http://alteredqualia.com/
 * @author Mugen87 / https://github.com/Mugen87
 *
 *	- shows frustum, line of sight and up of the camera
 *	- suitable for fast updates
 * 	- based on frustum visualization in lightgl.js shadowmap example
 *		http://evanw.github.com/lightgl.js/tests/shadowmap.html
 */
function On(t){function e(t,e,n){i(t,n),i(e,n)}function i(t,e){a.push(0,0,0),o.push(e.r,e.g,e.b),void 0===s[t]&&(s[t]=[]),s[t].push(a.length/3-1)}var n=new Mt,r=new ce({color:16777215,vertexColors:gh}),a=[],o=[],s={},c=new j(16755200),h=new j(16711680),l=new j(43775),u=new j(16777215),d=new j(3355443);
// near
e("n1","n2",c),e("n2","n4",c),e("n4","n3",c),e("n3","n1",c),
// far
e("f1","f2",c),e("f2","f4",c),e("f4","f3",c),e("f3","f1",c),
// sides
e("n1","f1",c),e("n2","f2",c),e("n3","f3",c),e("n4","f4",c),
// cone
e("p","n1",h),e("p","n2",h),e("p","n3",h),e("p","n4",h),
// up
e("u1","u2",l),e("u2","u3",l),e("u3","u1",l),
// target
e("c","t",u),e("p","c",d),
// cross
e("cn1","cn2",d),e("cn3","cn4",d),e("cf1","cf2",d),e("cf3","cf4",d),n.addAttribute("position",new xt(a,3)),n.addAttribute("color",new xt(o,3)),le.call(this,n,r),this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / http://github.com/Mugen87
 */
function Dn(t,e){this.object=t,void 0===e&&(e=16776960);var i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new Mt;r.setIndex(new ut(i,1)),r.addAttribute("position",new ut(n,3)),le.call(this,r,new ce({color:e})),this.matrixAutoUpdate=!1,this.update()}/**
 * @author WestLangley / http://github.com/WestLangley
 */
function Fn(t,e){this.type="Box3Helper",this.box=t;var i=void 0!==e?e:16776960,n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Mt;r.setIndex(new ut(n,1)),r.addAttribute("position",new xt([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),le.call(this,r,new ce({color:i})),this.geometry.computeBoundingSphere()}/**
 * @author WestLangley / http://github.com/WestLangley
 */
function Bn(t,e,i){this.type="PlaneHelper",this.plane=t,this.size=void 0===e?1:e;var n=void 0!==i?i:16776960,r=new Mt;r.addAttribute("position",new xt([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),he.call(this,r,new ce({color:n}));
//
var a=new Mt;a.addAttribute("position",new xt([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),a.computeBoundingSphere(),this.add(new Ut(a,new Lt({color:n,opacity:.2,transparent:!0,depthWrite:!1})))}function zn(t,e,i,n,r,a){
// dir is assumed to be normalized
ot.call(this),void 0===n&&(n=16776960),void 0===i&&(i=1),void 0===r&&(r=.2*i),void 0===a&&(a=.2*r),void 0===Gu&&((Gu=new Mt).addAttribute("position",new xt([0,0,0,0,1,0],3)),(Hu=new Qe(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(e),this.line=new he(Gu,new ce({color:n})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ut(Hu,new Lt({color:n})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(i,r,a)}/**
 * @author sroucheray / http://sroucheray.org/
 * @author mrdoob / http://mrdoob.com/
 */
function Gn(t){var e=[0,0,0,t=t||1,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=new Mt;i.addAttribute("position",new xt(e,3)),i.addAttribute("color",new xt([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));var n=new ce({vertexColors:vh});le.call(this,i,n)}/**
 * @author zz85 https://github.com/zz85
 *
 * Centripetal CatmullRom Curve - which is useful for avoiding
 * cusps and self-intersections in non-uniform catmull rom curves.
 * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf
 *
 * curve.type accepts centripetal(default), chordal and catmullrom
 * curve.tension is used for catmullrom which defaults to 0.5
 */
/*
Based on an optimized c++ solution in
 - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/
 - http://ideone.com/NoEbVM

This CubicPoly class could be used for reusing some variables and calculations,
but for three.js curve use, it could be possible inlined and flatten into a single function call
which can be placed in CurveUtils.
*/
function Hn(){/*
	 * Compute coefficients for a cubic polynomial
	 *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3
	 * such that
	 *   p(0) = x0, p(1) = x1
	 *  and
	 *   p'(0) = t0, p'(1) = t1.
	 */
function t(t,a,o,s){e=t,i=o,n=-3*t+3*a-2*o-s,r=2*t-2*a+o+s}var e=0,i=0,n=0,r=0;return{initCatmullRom:function(e,i,n,r,a){t(i,n,a*(n-e),a*(r-i))},initNonuniformCatmullRom:function(e,i,n,r,a,o,s){
// compute tangents when parameterized in [t1,t2]
var c=(i-e)/a-(n-e)/(a+o)+(n-i)/o,h=(n-i)/o-(r-i)/(o+s)+(r-n)/s;t(i,n,
// rescale tangents for parametrization in [0,1]
c*=o,h*=o)},calc:function(t){var a=t*t;return e+i*t+n*a+r*(a*t)}}}function Vn(t,e,i,n){Xi.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=i||"centripetal",this.tension=n||.5}function kn(t,e,i,n){Xi.call(this),this.type="CubicBezierCurve3",this.v0=t||new r,this.v1=e||new r,this.v2=i||new r,this.v3=n||new r}function jn(t,e,i){Xi.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new r,this.v1=e||new r,this.v2=i||new r}function Wn(t,e){Xi.call(this),this.type="LineCurve3",this.v1=t||new r,this.v2=e||new r}function Xn(t,e,i,n,r,a){Zi.call(this,t,e,i,i,n,r,a),this.type="ArcCurve"}
//
function qn(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Vn.call(this,t),this.type="catmullrom"}/**
 * https://github.com/mrdoob/eventdispatcher.js/
 */
function Yn(){}/**
 * @author mrdoob / http://mrdoob.com/
 * @author philogb / http://blog.thejit.org/
 * @author egraether / http://egraether.com/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 */
function Zn(t,e){this.x=t||0,this.y=e||0}function Jn(t,e,i,n,r,a,o,s,c,h){Object.defineProperty(this,"id",{value:Zp++}),this.uuid=Yp.generateUUID(),this.name="",this.image=void 0!==t?t:Jn.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:Jn.DEFAULT_MAPPING,this.wrapS=void 0!==i?i:Qd,this.wrapT=void 0!==n?n:Qd,this.magFilter=void 0!==r?r:ip,this.minFilter=void 0!==a?a:rp,this.anisotropy=void 0!==c?c:1,this.format=void 0!==o?o:xp,this.type=void 0!==s?s:ap,this.offset=new Zn(0,0),this.repeat=new Zn(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)
// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.
//
// Also changing the encoding after already used by a Material will not automatically make the Material
// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.
this.encoding=void 0!==h?h:zp,this.version=0,this.onUpdate=null}/**
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author philogb / http://blog.thejit.org/
 * @author mikael emtinger / http://gomo.se/
 * @author egraether / http://egraether.com/
 * @author WestLangley / http://github.com/WestLangley
 */
function Qn(t,e,i,n){this.x=t||0,this.y=e||0,this.z=i||0,this.w=void 0!==n?n:1}/**
 * @author szimek / https://github.com/szimek/
 * @author alteredq / http://alteredqualia.com/
 * @author Marius Kintel / https://github.com/kintel
 */
/*
 In options, we can specify:
 * Texture parameters for an auto-generated target texture
 * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers
*/
function Kn(t,e,i){this.uuid=Yp.generateUUID(),this.width=t,this.height=e,this.scissor=new Qn(0,0,t,e),this.scissorTest=!1,this.viewport=new Qn(0,0,t,e),void 0===(i=i||{}).minFilter&&(i.minFilter=ip),this.texture=new Jn(void 0,void 0,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0===i.stencilBuffer||i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}/**
 * @author alteredq / http://alteredqualia.com
 */
function $n(t,e,i){Kn.call(this,t,e,i),this.activeCubeFace=0,// PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5
this.activeMipMapLevel=0}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://clara.io
 */
function tr(t,e,i,n){this._x=t||0,this._y=e||0,this._z=i||0,this._w=void 0!==n?n:1}/**
 * @author mrdoob / http://mrdoob.com/
 * @author kile / http://kile.stravaganza.org/
 * @author philogb / http://blog.thejit.org/
 * @author mikael emtinger / http://gomo.se/
 * @author egraether / http://egraether.com/
 * @author WestLangley / http://github.com/WestLangley
 */
function er(t,e,i){this.x=t||0,this.y=e||0,this.z=i||0}/**
 * @author mrdoob / http://mrdoob.com/
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author philogb / http://blog.thejit.org/
 * @author jordi_ros / http://plattsoft.com
 * @author D1plo1d / http://github.com/D1plo1d
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author timknip / http://www.floorplanner.com/
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 */
function ir(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}/**
 * @author alteredq / http://alteredqualia.com/
 */
function nr(t,e,i,n,r,a,o,s,c,h,l,u){Jn.call(this,null,a,o,s,c,h,n,r,l,u),this.image={data:t,width:e,height:i},this.magFilter=void 0!==c?c:$d,this.minFilter=void 0!==h?h:$d,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}/**
 * @author mrdoob / http://mrdoob.com/
 */
function rr(t,e,i,n,r,a,o,s,c,h){Jn.call(this,t=void 0!==t?t:[],e=void 0!==e?e:kd,i,n,r,a,o,s,c,h),this.flipY=!1}
// --- Base for inner nodes (including the root) ---
function ar(){this.seq=[],this.map={}}
// Flattening for arrays of vectors and matrices
function or(t,e,i){var n=t[0];if(n<=0||n>0)return t;
// unoptimized: ! isNaN( firstElem )
// see http://jacksondunstan.com/articles/983
var r=e*i,a=Kp[r];if(void 0===a&&(a=new Float32Array(r),Kp[r]=a),0!==e){n.toArray(a,0);for(var o=1,s=0;o!==e;++o)s+=i,t[o].toArray(a,s)}return a}
// Texture unit allocation
function sr(t,e){var i=$p[e];void 0===i&&(i=new Int32Array(e),$p[e]=i);for(var n=0;n!==e;++n)i[n]=t.allocTextureUnit();return i}
// --- Setters ---
// Note: Defining these methods externally, because they come in a bunch
// and this way their names minify.
// Single scalar
function cr(t,e){t.uniform1f(this.addr,e)}function hr(t,e){t.uniform1i(this.addr,e)}
// Single float vector (from flat array or THREE.VectorN)
function lr(t,e){void 0===e.x?t.uniform2fv(this.addr,e):t.uniform2f(this.addr,e.x,e.y)}function ur(t,e){void 0!==e.x?t.uniform3f(this.addr,e.x,e.y,e.z):void 0!==e.r?t.uniform3f(this.addr,e.r,e.g,e.b):t.uniform3fv(this.addr,e)}function dr(t,e){void 0===e.x?t.uniform4fv(this.addr,e):t.uniform4f(this.addr,e.x,e.y,e.z,e.w)}
// Single matrix (from flat array or MatrixN)
function pr(t,e){t.uniformMatrix2fv(this.addr,!1,e.elements||e)}function fr(t,e){void 0===e.elements?t.uniformMatrix3fv(this.addr,!1,e):(ef.set(e.elements),t.uniformMatrix3fv(this.addr,!1,ef))}function mr(t,e){void 0===e.elements?t.uniformMatrix4fv(this.addr,!1,e):(tf.set(e.elements),t.uniformMatrix4fv(this.addr,!1,tf))}
// Single texture (2D / Cube)
function gr(t,e,i){var n=i.allocTextureUnit();t.uniform1i(this.addr,n),i.setTexture2D(e||Jp,n)}function vr(t,e,i){var n=i.allocTextureUnit();t.uniform1i(this.addr,n),i.setTextureCube(e||Qp,n)}
// Integer / Boolean vectors or arrays thereof (always flat arrays)
function yr(t,e){t.uniform2iv(this.addr,e)}function xr(t,e){t.uniform3iv(this.addr,e)}function br(t,e){t.uniform4iv(this.addr,e)}
// Array of scalars
function _r(t,e){t.uniform1fv(this.addr,e)}function wr(t,e){t.uniform1iv(this.addr,e)}
// Array of vectors (flat or from THREE classes)
function Mr(t,e){t.uniform2fv(this.addr,or(e,this.size,2))}function Er(t,e){t.uniform3fv(this.addr,or(e,this.size,3))}function Tr(t,e){t.uniform4fv(this.addr,or(e,this.size,4))}
// Array of matrices (flat or from THREE clases)
function Sr(t,e){t.uniformMatrix2fv(this.addr,!1,or(e,this.size,4))}function Ar(t,e){t.uniformMatrix3fv(this.addr,!1,or(e,this.size,9))}function Lr(t,e){t.uniformMatrix4fv(this.addr,!1,or(e,this.size,16))}
// Array of textures (2D / Cube)
function Rr(t,e,i){var n=e.length,r=sr(i,n);t.uniform1iv(this.addr,r);for(var a=0;a!==n;++a)i.setTexture2D(e[a]||Jp,r[a])}function Pr(t,e,i){var n=e.length,r=sr(i,n);t.uniform1iv(this.addr,r);for(var a=0;a!==n;++a)i.setTextureCube(e[a]||Qp,r[a])}
// --- Uniform Classes ---
function Cr(t,e,i){this.id=t,this.addr=i,this.setValue=
// Helper to pick the right setter for the singular case
function(t){switch(t){case 5126:return cr;// FLOAT
case 35664:return lr;// _VEC2
case 35665:return ur;// _VEC3
case 35666:return dr;// _VEC4
case 35674:return pr;// _MAT2
case 35675:return fr;// _MAT3
case 35676:return mr;// _MAT4
case 35678:case 36198:return gr;// SAMPLER_2D, SAMPLER_EXTERNAL_OES
case 35680:return vr;// SAMPLER_CUBE
case 5124:case 35670:return hr;// INT, BOOL
case 35667:case 35671:return yr;// _VEC2
case 35668:case 35672:return xr;// _VEC3
case 35669:case 35673:return br}}(e.type)}function Ir(t,e,i){this.id=t,this.addr=i,this.size=e.size,this.setValue=
// Helper to pick the right setter for a pure (bottom-level) array
function(t){switch(t){case 5126:return _r;// FLOAT
case 35664:return Mr;// _VEC2
case 35665:return Er;// _VEC3
case 35666:return Tr;// _VEC4
case 35674:return Sr;// _MAT2
case 35675:return Ar;// _MAT3
case 35676:return Lr;// _MAT4
case 35678:return Rr;// SAMPLER_2D
case 35680:return Pr;// SAMPLER_CUBE
case 5124:case 35670:return wr;// INT, BOOL
case 35667:case 35671:return yr;// _VEC2
case 35668:case 35672:return xr;// _VEC3
case 35669:case 35673:return br}}(e.type)}function Ur(t){this.id=t,ar.call(this)}
// extracts
// 	- the identifier (member name or array index)
//  - followed by an optional right bracket (found when array index)
//  - followed by an optional left bracket or dot (type of subscript)
//
// Note: These portions can be read in a non-overlapping fashion and
// allow straightforward parsing of the hierarchy that WebGL encodes
// in the uniform names.
function Nr(t,e){t.seq.push(e),t.map[e.id]=e}function Or(t,e,i){var n=t.name,r=n.length;for(
// reset RegExp object, because of the early exit of a previous run
nf.lastIndex=0;;){var a=nf.exec(n),o=nf.lastIndex,s=a[1],c="]"===a[2],h=a[3];// convert to integer
if(c&&(s|=0),void 0===h||"["===h&&o+2===r){
// bare name or "pure" bottom-level array "[0]" suffix
Nr(i,void 0===h?new Cr(s,t,e):new Ir(s,t,e));break}
// step into inner node / create it in case it doesn't exist
var l=i.map[s];void 0===l&&Nr(i,l=new Ur(s)),i=l}}
// Root Container
function Dr(t,e,i){ar.call(this),this.renderer=i;for(var n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS),r=0;r<n;++r){var a=t.getActiveUniform(e,r),o=a.name;Or(a,t.getUniformLocation(e,o),this)}}function Fr(t,e,i){return void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}/**
 * @author bhouston / http://clara.io
 */
function Br(t,e){this.min=void 0!==t?t:new Zn(1/0,1/0),this.max=void 0!==e?e:new Zn(-1/0,-1/0)}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */
function zr(t,e,i,n,r){function a(){var t=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),n=new Uint16Array([0,1,2,0,2,3]);
// buffers
o=e.createBuffer(),s=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,o),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,s),e.bufferData(e.ELEMENT_ARRAY_BUFFER,n,e.STATIC_DRAW),
// textures
d=e.createTexture(),p=e.createTexture(),i.bindTexture(e.TEXTURE_2D,d),e.texImage2D(e.TEXTURE_2D,0,e.RGB,16,16,0,e.RGB,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),i.bindTexture(e.TEXTURE_2D,p),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,16,16,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),c={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {",
// pink square
"if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );",
// restore
"} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );",
// flare
"} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},h=function(t){var i=e.createProgram(),n=e.createShader(e.FRAGMENT_SHADER),a=e.createShader(e.VERTEX_SHADER),o="precision "+r.precision+" float;\n";return e.shaderSource(n,o+t.fragmentShader),e.shaderSource(a,o+t.vertexShader),e.compileShader(n),e.compileShader(a),e.attachShader(i,n),e.attachShader(i,a),e.linkProgram(i),i}(c),l={vertex:e.getAttribLocation(h,"position"),uv:e.getAttribLocation(h,"uv")},u={renderType:e.getUniformLocation(h,"renderType"),map:e.getUniformLocation(h,"map"),occlusionMap:e.getUniformLocation(h,"occlusionMap"),opacity:e.getUniformLocation(h,"opacity"),color:e.getUniformLocation(h,"color"),scale:e.getUniformLocation(h,"scale"),rotation:e.getUniformLocation(h,"rotation"),screenPosition:e.getUniformLocation(h,"screenPosition")}}var o,s,c,h,l,u,d,p;/*
	 * Render lens flares
	 * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,
	 *         reads these back and calculates occlusion.
	 */
this.render=function(t,r,c,f){if(0!==t.length){var m=new er,g=f.w/f.z,v=.5*f.z,y=.5*f.w,x=16/f.w,b=new Zn(x*g,x),_=new er(1,1,0),w=new Zn(1,1),M=new Br;M.min.set(f.x,f.y),M.max.set(f.x+(f.z-16),f.y+(f.w-16)),void 0===h&&a(),i.useProgram(h),i.initAttributes(),i.enableAttribute(l.vertex),i.enableAttribute(l.uv),i.disableUnusedAttributes(),
// loop through all lens flares to update their occlusion and positions
// setup gl and common used attribs/uniforms
e.uniform1i(u.occlusionMap,0),e.uniform1i(u.map,1),e.bindBuffer(e.ARRAY_BUFFER,o),e.vertexAttribPointer(l.vertex,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(l.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,s),i.disable(e.CULL_FACE),i.buffers.depth.setMask(!1);for(var E=0,T=t.length;E<T;E++){x=16/f.w,b.set(x*g,x);
// calc object screen position
var S=t[E];
// screen cull
if(m.set(S.matrixWorld.elements[12],S.matrixWorld.elements[13],S.matrixWorld.elements[14]),m.applyMatrix4(c.matrixWorldInverse),m.applyMatrix4(c.projectionMatrix),
// setup arrays for gl programs
_.copy(m),
// horizontal and vertical coordinate of the lower left corner of the pixels to copy
w.x=f.x+_.x*v+v-8,w.y=f.y+_.y*y+y-8,!0===M.containsPoint(w)){
// save current RGB to temp texture
i.activeTexture(e.TEXTURE0),i.bindTexture(e.TEXTURE_2D,null),i.activeTexture(e.TEXTURE1),i.bindTexture(e.TEXTURE_2D,d),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGB,w.x,w.y,16,16,0),
// render pink quad
e.uniform1i(u.renderType,0),e.uniform2f(u.scale,b.x,b.y),e.uniform3f(u.screenPosition,_.x,_.y,_.z),i.disable(e.BLEND),i.enable(e.DEPTH_TEST),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),
// copy result to occlusionMap
i.activeTexture(e.TEXTURE0),i.bindTexture(e.TEXTURE_2D,p),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGBA,w.x,w.y,16,16,0),
// restore graphics
e.uniform1i(u.renderType,1),i.disable(e.DEPTH_TEST),i.activeTexture(e.TEXTURE1),i.bindTexture(e.TEXTURE_2D,d),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),
// update object positions
S.positionScreen.copy(_),S.customUpdateCallback?S.customUpdateCallback(S):S.updateLensFlares(),
// render flares
e.uniform1i(u.renderType,2),i.enable(e.BLEND);for(var A=0,L=S.lensFlares.length;A<L;A++){var R=S.lensFlares[A];R.opacity>.001&&R.scale>.001&&(_.x=R.x,_.y=R.y,_.z=R.z,x=R.size*R.scale/f.w,b.x=x*g,b.y=x,e.uniform3f(u.screenPosition,_.x,_.y,_.z),e.uniform2f(u.scale,b.x,b.y),e.uniform1f(u.rotation,R.rotation),e.uniform1f(u.opacity,R.opacity),e.uniform3f(u.color,R.color.r,R.color.g,R.color.b),i.setBlending(R.blending,R.blendEquation,R.blendSrc,R.blendDst),n.setTexture2D(R.texture,1),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}}}
// restore gl
i.enable(e.CULL_FACE),i.enable(e.DEPTH_TEST),i.buffers.depth.setMask(!0),i.reset()}}}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Gr(t,e,i,n,r,a,o,s,c){Jn.call(this,t,e,i,n,r,a,o,s,c),this.needsUpdate=!0}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */
function Hr(t,e,i,n,r){function a(){var t=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),i=new Uint16Array([0,1,2,0,2,3]);s=e.createBuffer(),c=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,s),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,c),e.bufferData(e.ELEMENT_ARRAY_BUFFER,i,e.STATIC_DRAW),h=function(){var t=e.createProgram(),i=e.createShader(e.VERTEX_SHADER),n=e.createShader(e.FRAGMENT_SHADER);return e.shaderSource(i,["precision "+r.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),e.shaderSource(n,["precision "+r.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),e.compileShader(i),e.compileShader(n),e.attachShader(t,i),e.attachShader(t,n),e.linkProgram(t),t}(),l={position:e.getAttribLocation(h,"position"),uv:e.getAttribLocation(h,"uv")},u={uvOffset:e.getUniformLocation(h,"uvOffset"),uvScale:e.getUniformLocation(h,"uvScale"),rotation:e.getUniformLocation(h,"rotation"),scale:e.getUniformLocation(h,"scale"),color:e.getUniformLocation(h,"color"),map:e.getUniformLocation(h,"map"),opacity:e.getUniformLocation(h,"opacity"),modelViewMatrix:e.getUniformLocation(h,"modelViewMatrix"),projectionMatrix:e.getUniformLocation(h,"projectionMatrix"),fogType:e.getUniformLocation(h,"fogType"),fogDensity:e.getUniformLocation(h,"fogDensity"),fogNear:e.getUniformLocation(h,"fogNear"),fogFar:e.getUniformLocation(h,"fogFar"),fogColor:e.getUniformLocation(h,"fogColor"),alphaTest:e.getUniformLocation(h,"alphaTest")};var n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");n.width=8,n.height=8;var a=n.getContext("2d");a.fillStyle="white",a.fillRect(0,0,8,8),d=new Gr(n)}function o(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:e.id-t.id}var s,c,h,l,u,d,p=new er,f=new tr,m=new er;this.render=function(r,g,v){if(0!==r.length){
// setup gl
void 0===h&&a(),i.useProgram(h),i.initAttributes(),i.enableAttribute(l.position),i.enableAttribute(l.uv),i.disableUnusedAttributes(),i.disable(e.CULL_FACE),i.enable(e.BLEND),e.bindBuffer(e.ARRAY_BUFFER,s),e.vertexAttribPointer(l.position,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(l.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,c),e.uniformMatrix4fv(u.projectionMatrix,!1,v.projectionMatrix.elements),i.activeTexture(e.TEXTURE0),e.uniform1i(u.map,0);var y=0,x=0,b=g.fog;b?(e.uniform3f(u.fogColor,b.color.r,b.color.g,b.color.b),b.isFog?(e.uniform1f(u.fogNear,b.near),e.uniform1f(u.fogFar,b.far),e.uniform1i(u.fogType,1),y=1,x=1):b.isFogExp2&&(e.uniform1f(u.fogDensity,b.density),e.uniform1i(u.fogType,2),y=2,x=2)):(e.uniform1i(u.fogType,0),y=0,x=0);
// update positions and sort
for(var _=0,w=r.length;_<w;_++){(E=r[_]).modelViewMatrix.multiplyMatrices(v.matrixWorldInverse,E.matrixWorld),E.z=-E.modelViewMatrix.elements[14]}r.sort(o);for(var M=[],_=0,w=r.length;_<w;_++){var E=r[_],T=E.material;if(!1!==T.visible){E.onBeforeRender(t,g,v,void 0,T,void 0),e.uniform1f(u.alphaTest,T.alphaTest),e.uniformMatrix4fv(u.modelViewMatrix,!1,E.modelViewMatrix.elements),E.matrixWorld.decompose(p,f,m),M[0]=m.x,M[1]=m.y;var S=0;g.fog&&T.fog&&(S=x),y!==S&&(e.uniform1i(u.fogType,S),y=S),null!==T.map?(e.uniform2f(u.uvOffset,T.map.offset.x,T.map.offset.y),e.uniform2f(u.uvScale,T.map.repeat.x,T.map.repeat.y)):(e.uniform2f(u.uvOffset,0,0),e.uniform2f(u.uvScale,1,1)),e.uniform1f(u.opacity,T.opacity),e.uniform3f(u.color,T.color.r,T.color.g,T.color.b),e.uniform1f(u.rotation,T.rotation),e.uniform2fv(u.scale,M),i.setBlending(T.blending,T.blendEquation,T.blendSrc,T.blendDst,T.blendEquationAlpha,T.blendSrcAlpha,T.blendDstAlpha,T.premultipliedAlpha),i.buffers.depth.setTest(T.depthTest),i.buffers.depth.setMask(T.depthWrite),n.setTexture2D(T.map||d,0),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),E.onAfterRender(t,g,v,void 0,T,void 0)}}
// restore gl
i.enable(e.CULL_FACE),i.reset()}}}function Vr(){Object.defineProperty(this,"id",{value:hf++}),this.uuid=Yp.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=od,this.side=$u,this.flatShading=!1,this.vertexColors=id,// THREE.NoColors, THREE.VertexColors, THREE.FaceColors
this.opacity=1,this.transparent=!1,this.blendSrc=bd,this.blendDst=_d,this.blendEquation=ud,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Pd,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,// override the renderer's default precision for this material
this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,// Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer
this.visible=!0,this.userData={},this.needsUpdate=!0}/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  defines: { "label" : "value" },
 *  uniforms: { "parameter1": { value: 1.0 }, "parameter2": { value2: 2 } },
 *
 *  fragmentShader: <string>,
 *  vertexShader: <string>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  lights: <bool>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */
function kr(t){Vr.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,// set to use scene fog
this.lights=!1,// set to use scene lights
this.clipping=!1,// set to use user-defined clipping planes
this.skinning=!1,// set to use skinning attribute streams
this.morphTargets=!1,// set to use morph targets
this.morphNormals=!1,// set to use morph normals
this.extensions={derivatives:!1,// set to use derivatives
fragDepth:!1,// set to use fragment depth values
drawBuffers:!1,// set to use draw buffers
shaderTextureLOD:!1},
// When rendered geometry doesn't include these attributes but the material does,
// use these default values in WebGL. This avoids errors when buffer data is missing.
this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author bhouston / https://clara.io
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 * }
 */
function jr(t){Vr.call(this),this.type="MeshDepthMaterial",this.depthPacking=Xp,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(t)}/**
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *
 *  referencePosition: <float>,
 *  nearDistance: <float>,
 *  farDistance: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>
 *
 * }
 */
function Wr(t){Vr.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new er,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.lights=!1,this.setValues(t)}/**
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 */
function Xr(t,e){this.min=void 0!==t?t:new er(1/0,1/0,1/0),this.max=void 0!==e?e:new er(-1/0,-1/0,-1/0)}/**
 * @author bhouston / http://clara.io
 * @author mrdoob / http://mrdoob.com/
 */
function qr(t,e){this.center=void 0!==t?t:new er,this.radius=void 0!==e?e:0}/**
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://clara.io
 * @author tschw
 */
function Yr(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}/**
 * @author bhouston / http://clara.io
 */
function Zr(t,e){
// normal is assumed to be normalized
this.normal=void 0!==t?t:new er(1,0,0),this.constant=void 0!==e?e:0}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author bhouston / http://clara.io
 */
function Jr(t,e,i,n,r,a){this.planes=[void 0!==t?t:new Zr,void 0!==e?e:new Zr,void 0!==i?i:new Zr,void 0!==n?n:new Zr,void 0!==r?r:new Zr,void 0!==a?a:new Zr]}/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */
function Qr(t,e,i){function n(e,i,n,r,a,o){var s=e.geometry,c=null,h=f,l=e.customDepthMaterial;if(n&&(h=m,l=e.customDistanceMaterial),l)c=l;else{var p=!1;i.morphTargets&&(s&&s.isBufferGeometry?p=s.morphAttributes&&s.morphAttributes.position&&s.morphAttributes.position.length>0:s&&s.isGeometry&&(p=s.morphTargets&&s.morphTargets.length>0)),e.isSkinnedMesh&&!1===i.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e);var v=e.isSkinnedMesh&&i.skinning,y=0;p&&(y|=u),v&&(y|=d),c=h[y]}if(t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){
// in this case we need a unique material instance reflecting the
// appropriate state
var x=c.uuid,b=i.uuid,_=g[x];void 0===_&&(_={},g[x]=_);var w=_[b];void 0===w&&(w=c.clone(),_[b]=w),c=w}c.visible=i.visible,c.wireframe=i.wireframe;var M=i.side;return T.renderSingleSided&&M==ed&&(M=$u),T.renderReverseSided&&(M===$u?M=td:M===td&&(M=$u)),c.side=M,c.clipShadows=i.clipShadows,c.clippingPlanes=i.clippingPlanes,c.clipIntersection=i.clipIntersection,c.wireframeLinewidth=i.wireframeLinewidth,c.linewidth=i.linewidth,n&&c.isMeshDistanceMaterial&&(c.referencePosition.copy(r),c.nearDistance=a,c.farDistance=o),c}function r(i,o,s,c){if(!1!==i.visible){if(i.layers.test(o.layers)&&(i.isMesh||i.isLine||i.isPoints)&&i.castShadow&&(!i.frustumCulled||a.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,i.matrixWorld);var h=e.update(i),u=i.material;if(Array.isArray(u))for(var d=h.groups,p=0,f=d.length;p<f;p++){var m=d[p],g=u[m.materialIndex];if(g&&g.visible){v=n(i,g,c,l,s.near,s.far);t.renderBufferDirect(s,null,h,v,i,m)}}else if(u.visible){var v=n(i,u,c,l,s.near,s.far);t.renderBufferDirect(s,null,h,v,i,null)}}for(var y=i.children,x=0,b=y.length;x<b;x++)r(y[x],o,s,c)}}
// init
for(var a=new Jr,o=new ir,s=new Zn,c=new Zn(i,i),h=new er,l=new er,u=1,d=2,p=1+(u|d),f=new Array(p),m=new Array(p),g={},v=[new er(1,0,0),new er(-1,0,0),new er(0,0,1),new er(0,0,-1),new er(0,1,0),new er(0,-1,0)],y=[new er(0,1,0),new er(0,1,0),new er(0,1,0),new er(0,1,0),new er(0,0,1),new er(0,0,-1)],x=[new Qn,new Qn,new Qn,new Qn,new Qn,new Qn],b=0;b!==p;++b){var _=0!=(b&u),w=0!=(b&d),M=new jr({depthPacking:qp,morphTargets:_,skinning:w});f[b]=M;
//
var E=new Wr({morphTargets:_,skinning:w});m[b]=E}
//
var T=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Qu,this.renderReverseSided=!0,this.renderSingleSided=!0,this.render=function(e,i,n){if(!1!==T.enabled&&(!1!==T.autoUpdate||!1!==T.needsUpdate)&&0!==e.length){
// TODO Clean up (needed in case of contextlost)
var u=t.context,d=t.state;
// Set GL state for depth map.
d.disable(u.BLEND),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(var p,f=0,m=e.length;f<m;f++){var g=e[f],b=g.shadow,_=g&&g.isPointLight;if(void 0!==b){var w=b.camera;if(s.copy(b.mapSize),s.min(c),_){var M=s.x,E=s.y;
// These viewports map a cube-map onto a 2D texture with the
// following orientation:
//
//  xzXZ
//   y Y
//
// X - Positive x direction
// x - Negative x direction
// Y - Positive y direction
// y - Negative y direction
// Z - Positive z direction
// z - Negative z direction
// positive X
x[0].set(2*M,E,M,E),
// negative X
x[1].set(0,E,M,E),
// positive Z
x[2].set(3*M,E,M,E),
// negative Z
x[3].set(M,E,M,E),
// positive Y
x[4].set(3*M,0,M,E),
// negative Y
x[5].set(M,0,M,E),s.x*=4,s.y*=2}if(null===b.map){var S={minFilter:$d,magFilter:$d,format:xp};b.map=new Kn(s.x,s.y,S),b.map.texture.name=g.name+".shadowMap",w.updateProjectionMatrix()}b.isSpotLightShadow&&b.update(g);var A=b.map,L=b.matrix;l.setFromMatrixPosition(g.matrixWorld),w.position.copy(l),_?(p=6,
// for point lights we set the shadow matrix to be a translation-only matrix
// equal to inverse of the light's position
L.makeTranslation(-l.x,-l.y,-l.z)):(p=1,h.setFromMatrixPosition(g.target.matrixWorld),w.lookAt(h),w.updateMatrixWorld(),
// compute shadow matrix
L.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),L.multiply(w.projectionMatrix),L.multiply(w.matrixWorldInverse)),t.setRenderTarget(A),t.clear();
// render shadow map for each cube face (if omni-directional) or
// run a single pass if not
for(var R=0;R<p;R++){if(_){h.copy(w.position),h.add(v[R]),w.up.copy(y[R]),w.lookAt(h),w.updateMatrixWorld();var P=x[R];d.viewport(P)}
// update camera matrices and frustum
o.multiplyMatrices(w.projectionMatrix,w.matrixWorldInverse),a.setFromMatrix(o),
// set object matrices & frustum culling
r(i,n,w,_)}}else console.warn("THREE.WebGLShadowMap:",g,"has no shadow.")}T.needsUpdate=!1}}}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Kr(t){var e={};return{get:
//
function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e[t.uuid]},remove:function(i){i.isInterleavedBufferAttribute&&(i=i.data);var n=e[i.uuid];n&&(t.deleteBuffer(n.buffer),delete e[i.uuid])},update:function(i,n){i.isInterleavedBufferAttribute&&(i=i.data);var r=e[i.uuid];void 0===r?e[i.uuid]=function(e,i){var n=e.array,r=e.dynamic?t.DYNAMIC_DRAW:t.STATIC_DRAW,a=t.createBuffer();t.bindBuffer(i,a),t.bufferData(i,n,r),e.onUploadCallback();var o=t.FLOAT;return n instanceof Float32Array?o=t.FLOAT:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?o=t.UNSIGNED_SHORT:n instanceof Int16Array?o=t.SHORT:n instanceof Uint32Array?o=t.UNSIGNED_INT:n instanceof Int32Array?o=t.INT:n instanceof Int8Array?o=t.BYTE:n instanceof Uint8Array&&(o=t.UNSIGNED_BYTE),{buffer:a,type:o,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version}}(i,n):r.version<i.version&&(function(e,i,n){var r=i.array,a=i.updateRange;t.bindBuffer(n,e),!1===i.dynamic?t.bufferData(n,r,t.STATIC_DRAW):-1===a.count?
// Not using update ranges
t.bufferSubData(n,0,r):0===a.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(t.bufferSubData(n,a.offset*r.BYTES_PER_ELEMENT,r.subarray(a.offset,a.offset+a.count)),a.count=-1)}(r.buffer,i,n),r.version=i.version)}}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author bhouston / http://clara.io
 */
function $r(t,e,i,n){this._x=t||0,this._y=e||0,this._z=i||0,this._order=n||$r.DefaultOrder}/**
 * @author mrdoob / http://mrdoob.com/
 */
function ta(){this.mask=1}function ea(){Object.defineProperty(this,"id",{value:lf++}),this.uuid=Yp.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ea.DefaultUp.clone();var t=new er,e=new $r,i=new tr,n=new er(1,1,1);e.onChange(function(){i.setFromEuler(e,!1)}),i.onChange(function(){e.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:t},rotation:{enumerable:!0,value:e},quaternion:{enumerable:!0,value:i},scale:{enumerable:!0,value:n},modelViewMatrix:{value:new ir},normalMatrix:{value:new Yr}}),this.matrix=new ir,this.matrixWorld=new ir,this.matrixAutoUpdate=ea.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ta,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author mikael emtinger / http://gomo.se/
 * @author WestLangley / http://github.com/WestLangley
*/
function ia(){ea.call(this),this.type="Camera",this.matrixWorldInverse=new ir,this.projectionMatrix=new ir}/**
 * @author alteredq / http://alteredqualia.com/
 * @author arose / http://github.com/arose
 */
function na(t,e,i,n,r,a){ia.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=n,this.near=void 0!==r?r:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()}/**
 * @author mrdoob / http://mrdoob.com/
 * @author greggman / http://games.greggman.com/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author tschw
 */
function ra(t,e,i,n){ia.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==i?i:.1,this.far=void 0!==n?n:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,// width of the film (default in millimeters)
this.filmOffset=0,// horizontal film offset (same unit as gauge)
this.updateProjectionMatrix()}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
function aa(t,e,i,n,r,a){this.a=t,this.b=e,this.c=i,this.normal=n&&n.isVector3?n:new er,this.vertexNormals=Array.isArray(n)?n:[],this.color=r&&r.isColor?r:new Fr,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=void 0!==a?a:0}function oa(){return uf++}function sa(){Object.defineProperty(this,"id",{value:oa()}),this.uuid=Yp.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,
// update flags
this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}/**
 * @author mrdoob / http://mrdoob.com/
 */
function ca(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=Yp.generateUUID(),this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===i,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}
//
function ha(t,e){ca.call(this,new Int8Array(t),e)}function la(t,e){ca.call(this,new Uint8Array(t),e)}function ua(t,e){ca.call(this,new Uint8ClampedArray(t),e)}function da(t,e){ca.call(this,new Int16Array(t),e)}function pa(t,e){ca.call(this,new Uint16Array(t),e)}function fa(t,e){ca.call(this,new Int32Array(t),e)}function ma(t,e){ca.call(this,new Uint32Array(t),e)}function ga(t,e){ca.call(this,new Float32Array(t),e)}function va(t,e){ca.call(this,new Float64Array(t),e)}/**
 * @author mrdoob / http://mrdoob.com/
 */
function ya(){this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],
// this.lineDistances = [];
this.boundingBox=null,this.boundingSphere=null,
// update flags
this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}/**
 * @author mrdoob / http://mrdoob.com/
 */
function xa(t){if(0===t.length)return-1/0;for(var e=t[0],i=1,n=t.length;i<n;++i)t[i]>e&&(e=t[i]);return e}/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */
function ba(){Object.defineProperty(this,"id",{value:oa()}),this.uuid=Yp.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */
// BoxGeometry
function _a(t,e,i,n,r,a){sa.call(this),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:a},this.fromBufferGeometry(new wa(t,e,i,n,r,a)),this.mergeVertices()}
// BoxBufferGeometry
function wa(t,e,i,n,r,a){function o(t,e,i,n,r,a,o,f,m,g,v){var y,x,b=a/m,_=o/g,w=a/2,M=o/2,E=f/2,T=m+1,S=g+1,A=0,L=0,R=new er;
// generate vertices, normals and uvs
for(x=0;x<S;x++){var P=x*_-M;for(y=0;y<T;y++){var C=y*b-w;
// set values to correct vector component
R[t]=C*n,R[e]=P*r,R[i]=E,
// now apply vector to vertex buffer
h.push(R.x,R.y,R.z),
// set values to correct vector component
R[t]=0,R[e]=0,R[i]=f>0?1:-1,
// now apply vector to normal buffer
l.push(R.x,R.y,R.z),
// uvs
u.push(y/m),u.push(1-x/g),
// counters
A+=1}}
// indices
// 1. you need three indices to draw a single face
// 2. a single segment consists of two faces
// 3. so we need to generate six (2*3) indices per segment
for(x=0;x<g;x++)for(y=0;y<m;y++){var I=d+y+T*x,U=d+y+T*(x+1),N=d+(y+1)+T*(x+1),O=d+(y+1)+T*x;
// faces
c.push(I,U,O),c.push(U,N,O),
// increase counter
L+=6}
// add a group to the geometry. this will ensure multi material support
s.addGroup(p,L,v),
// calculate new start value for groups
p+=L,
// update total number of vertices
d+=A}ba.call(this),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:a};var s=this;
// segments
n=Math.floor(n)||1,r=Math.floor(r)||1;
// buffers
var c=[],h=[],l=[],u=[],d=0,p=0;
// build each side of the box geometry
o("z","y","x",-1,-1,i,e,t,a=Math.floor(a)||1,r,0),// px
o("z","y","x",1,-1,i,e,-t,a,r,1),// nx
o("x","z","y",1,1,t,i,e,n,a,2),// py
o("x","z","y",1,-1,t,i,-e,n,a,3),// ny
o("x","y","z",1,-1,t,e,i,n,r,4),// pz
o("x","y","z",-1,-1,t,e,-i,n,r,5),// nz
// build geometry
this.setIndex(c),this.addAttribute("position",new ga(h,3)),this.addAttribute("normal",new ga(l,3)),this.addAttribute("uv",new ga(u,2))}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */
// PlaneGeometry
function Ma(t,e,i,n){sa.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n},this.fromBufferGeometry(new Ea(t,e,i,n)),this.mergeVertices()}
// PlaneBufferGeometry
function Ea(t,e,i,n){ba.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};var r,a,o=t/2,s=e/2,c=Math.floor(i)||1,h=Math.floor(n)||1,l=c+1,u=h+1,d=t/c,p=e/h,f=[],m=[],g=[],v=[];
// generate vertices, normals and uvs
for(a=0;a<u;a++){var y=a*p-s;for(r=0;r<l;r++){var x=r*d-o;m.push(x,-y,0),g.push(0,0,1),v.push(r/c),v.push(1-a/h)}}
// indices
for(a=0;a<h;a++)for(r=0;r<c;r++){var b=r+l*a,_=r+l*(a+1),w=r+1+l*(a+1),M=r+1+l*a;
// faces
f.push(b,_,M),f.push(_,w,M)}
// build geometry
this.setIndex(f),this.addAttribute("position",new ga(m,3)),this.addAttribute("normal",new ga(g,3)),this.addAttribute("uv",new ga(v,2))}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>
 * }
 */
function Ta(t){Vr.call(this),this.type="MeshBasicMaterial",this.color=new Fr(16777215),// emissive
this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Od,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(t)}/**
 * @author bhouston / http://clara.io
 */
function Sa(t,e){this.origin=void 0!==t?t:new er,this.direction=void 0!==e?e:new er}/**
 * @author bhouston / http://clara.io
 */
function Aa(t,e){this.start=void 0!==t?t:new er,this.end=void 0!==e?e:new er}/**
 * @author bhouston / http://clara.io
 * @author mrdoob / http://mrdoob.com/
 */
function La(t,e,i){this.a=void 0!==t?t:new er,this.b=void 0!==e?e:new er,this.c=void 0!==i?i:new er}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author jonobr1 / http://jonobr1.com/
 */
function Ra(t,e){ea.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new ba,this.material=void 0!==e?e:new Ta({color:16777215*Math.random()}),this.drawMode=Dp,this.updateMorphTargets()}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Pa(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program&&e.program&&t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Ca(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Ia(){var t={};return{get:function(e,i){var n=e.id+","+i.id,r=t[n];
// console.log( 'THREE.WebGLRenderLists:', hash );
return void 0===r&&(r=new function(){var t=[],e=0,i=[],n=[];return{opaque:i,transparent:n,init:function(){e=0,i.length=0,n.length=0},push:function(r,a,o,s,c){var h=t[e];void 0===h?(h={id:r.id,object:r,geometry:a,material:o,program:o.program,renderOrder:r.renderOrder,z:s,group:c},t[e]=h):(h.id=r.id,h.object=r,h.geometry=a,h.material=o,h.program=o.program,h.renderOrder=r.renderOrder,h.z=s,h.group=c),(!0===o.transparent?n:i).push(h),e++},sort:function(){i.length>1&&i.sort(Pa),n.length>1&&n.sort(Ca)}}},t[n]=r),r},dispose:function(){t={}}}}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Ua(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Na(){var t=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(){var t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];var i;switch(e.type){case"DirectionalLight":i={direction:new er,color:new Fr,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Zn};break;case"SpotLight":i={position:new er,direction:new er,color:new Fr,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Zn};break;case"PointLight":i={position:new er,color:new Fr,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Zn,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":i={direction:new er,skyColor:new Fr,groundColor:new Fr};break;case"RectAreaLight":i={color:new Fr,position:new er,halfWidth:new er,halfHeight:new er}}return t[e.id]=i,i}}},e={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},i=new er,n=new ir,r=new ir;return{setup:function(a,o,s){for(var c=0,h=0,l=0,u=0,d=0,p=0,f=0,m=0,g=s.matrixWorldInverse,v=0,y=a.length;v<y;v++){var x=a[v],b=x.color,_=x.intensity,w=x.distance,M=x.shadow&&x.shadow.map?x.shadow.map.texture:null;if(x.isAmbientLight)c+=b.r*_,h+=b.g*_,l+=b.b*_;else if(x.isDirectionalLight)(T=t.get(x)).color.copy(x.color).multiplyScalar(x.intensity),T.direction.setFromMatrixPosition(x.matrixWorld),i.setFromMatrixPosition(x.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(g),T.shadow=x.castShadow,x.castShadow&&(E=x.shadow,T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize),e.directionalShadowMap[u]=M,e.directionalShadowMatrix[u]=x.shadow.matrix,e.directional[u]=T,u++;else if(x.isSpotLight)(T=t.get(x)).position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(g),T.color.copy(b).multiplyScalar(_),T.distance=w,T.direction.setFromMatrixPosition(x.matrixWorld),i.setFromMatrixPosition(x.target.matrixWorld),T.direction.sub(i),T.direction.transformDirection(g),T.coneCos=Math.cos(x.angle),T.penumbraCos=Math.cos(x.angle*(1-x.penumbra)),T.decay=0===x.distance?0:x.decay,T.shadow=x.castShadow,x.castShadow&&(E=x.shadow,T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize),e.spotShadowMap[p]=M,e.spotShadowMatrix[p]=x.shadow.matrix,e.spot[p]=T,p++;else if(x.isRectAreaLight)
// (a) intensity controls irradiance of entire light
(T=t.get(x)).color.copy(b).multiplyScalar(_/(x.width*x.height)),
// (b) intensity controls the radiance per light area
// uniforms.color.copy( color ).multiplyScalar( intensity );
T.position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(g),
// extract local rotation of light to derive width/height half vectors
r.identity(),n.copy(x.matrixWorld),n.premultiply(g),r.extractRotation(n),T.halfWidth.set(.5*x.width,0,0),T.halfHeight.set(0,.5*x.height,0),T.halfWidth.applyMatrix4(r),T.halfHeight.applyMatrix4(r),
// TODO (abelnation): RectAreaLight distance?
// uniforms.distance = distance;
e.rectArea[f]=T,f++;else if(x.isPointLight){if((T=t.get(x)).position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(g),T.color.copy(x.color).multiplyScalar(x.intensity),T.distance=x.distance,T.decay=0===x.distance?0:x.decay,T.shadow=x.castShadow,x.castShadow){var E=x.shadow;T.shadowBias=E.bias,T.shadowRadius=E.radius,T.shadowMapSize=E.mapSize,T.shadowCameraNear=E.camera.near,T.shadowCameraFar=E.camera.far}e.pointShadowMap[d]=M,e.pointShadowMatrix[d]=x.shadow.matrix,e.point[d]=T,d++}else if(x.isHemisphereLight){var T=t.get(x);T.direction.setFromMatrixPosition(x.matrixWorld),T.direction.transformDirection(g),T.direction.normalize(),T.skyColor.copy(x.color).multiplyScalar(_),T.groundColor.copy(x.groundColor).multiplyScalar(_),e.hemi[m]=T,m++}}e.ambient[0]=c,e.ambient[1]=h,e.ambient[2]=l,e.directional.length=u,e.spot.length=p,e.rectArea.length=f,e.point.length=d,e.hemi.length=m,
// TODO (sam-g-steel) why aren't we using join
e.hash=u+","+d+","+p+","+f+","+m+","+o.length},state:e}}function Oa(t,e,i){var n=t.createShader(e);
// --enable-privileged-webgl-extension
// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );
/**
 * @author mrdoob / http://mrdoob.com/
 */
return t.shaderSource(n,i),t.compileShader(n),!1===t.getShaderParameter(n,t.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(n)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",e===t.VERTEX_SHADER?"vertex":"fragment",t.getShaderInfoLog(n),function(t){for(var e=t.split("\n"),i=0;i<e.length;i++)e[i]=i+1+": "+e[i];return e.join("\n")}(i)),n}function Da(t){switch(t){case zp:return["Linear","( value )"];case Gp:return["sRGB","( value )"];case Vp:return["RGBE","( value )"];case kp:return["RGBM","( value, 7.0 )"];case jp:return["RGBM","( value, 16.0 )"];case Wp:return["RGBD","( value, 256.0 )"];case Hp:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+t)}}function Fa(t,e){var i=Da(e);return"vec4 "+t+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function Ba(t){return""!==t}function za(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights)}function Ga(t){return t.replace(/^[ \t]*#include +<([\w\d.]+)>/gm,function(t,e){var i=sf[e];if(void 0===i)throw new Error("Can not resolve #include <"+e+">");return Ga(i)})}function Ha(t){return t.replace(/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,function(t,e,i,n){for(var r="",a=parseInt(e);a<parseInt(i);a++)r+=n.replace(/\[ i \]/g,"[ "+a+" ]");return r})}function Va(t,e,i,n,r,a){var o=t.context,s=n.defines,c=r.vertexShader,h=r.fragmentShader,l="SHADOWMAP_TYPE_BASIC";a.shadowMapType===Qu?l="SHADOWMAP_TYPE_PCF":a.shadowMapType===Ku&&(l="SHADOWMAP_TYPE_PCF_SOFT");var u="ENVMAP_TYPE_CUBE",d="ENVMAP_MODE_REFLECTION",p="ENVMAP_BLENDING_MULTIPLY";if(a.envMap){switch(n.envMap.mapping){case kd:case jd:u="ENVMAP_TYPE_CUBE";break;case Yd:case Zd:u="ENVMAP_TYPE_CUBE_UV";break;case Wd:case Xd:u="ENVMAP_TYPE_EQUIREC";break;case qd:u="ENVMAP_TYPE_SPHERE"}switch(n.envMap.mapping){case jd:case Xd:d="ENVMAP_MODE_REFRACTION"}switch(n.combine){case Od:p="ENVMAP_BLENDING_MULTIPLY";break;case Dd:p="ENVMAP_BLENDING_MIX";break;case Fd:p="ENVMAP_BLENDING_ADD"}}var f,m,g=t.gammaFactor>0?t.gammaFactor:1,v=function(t,e,i){return[(t=t||{}).derivatives||e.envMapCubeUV||e.bumpMap||e.normalMap||e.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||e.logarithmicDepthBuffer)&&i.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&i.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||e.envMap)&&i.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ba).join("\n")}(n.extensions,a,e),y=function(t){var e=[];for(var i in t){var n=t[i];!1!==n&&e.push("#define "+i+" "+n)}return e.join("\n")}(s),x=o.createProgram();n.isRawShaderMaterial?(f=[y,"\n"].filter(Ba).join("\n"),m=[v,y,"\n"].filter(Ba).join("\n")):(f=["precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+r.name,y,a.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+g,"#define MAX_BONES "+a.maxBones,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+d:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexColors?"#define USE_COLOR":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.useVertexTexture?"#define BONE_TEXTURE":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&&!1===a.flatShading?"#define USE_MORPHNORMALS":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+a.numClippingPlanes,a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+l:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&e.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ba).join("\n"),m=[v,"precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+r.name,y,a.alphaTest?"#define ALPHATEST "+a.alphaTest:"","#define GAMMA_FACTOR "+g,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+u:"",a.envMap?"#define "+d:"",a.envMap?"#define "+p:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexColors?"#define USE_COLOR":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+a.numClippingPlanes,"#define UNION_CLIPPING_PLANES "+(a.numClippingPlanes-a.numClipIntersection),a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+l:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&e.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",a.envMap&&e.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",a.toneMapping!==Bd?"#define TONE_MAPPING":"",a.toneMapping!==Bd?sf.tonemapping_pars_fragment:"",// this code is required here because it is used by the toneMapping() function defined below
a.toneMapping!==Bd?function(t,e){var i;switch(e){case zd:i="Linear";break;case Gd:i="Reinhard";break;case Hd:i="Uncharted2";break;case Vd:i="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}("toneMapping",a.toneMapping):"",a.dithering?"#define DITHERING":"",a.outputEncoding||a.mapEncoding||a.envMapEncoding||a.emissiveMapEncoding?sf.encodings_pars_fragment:"",// this code is required here because it is used by the various encoding/decoding function defined below
a.mapEncoding?Fa("mapTexelToLinear",a.mapEncoding):"",a.envMapEncoding?Fa("envMapTexelToLinear",a.envMapEncoding):"",a.emissiveMapEncoding?Fa("emissiveMapTexelToLinear",a.emissiveMapEncoding):"",a.outputEncoding?function(t,e){var i=Da(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}("linearToOutputTexel",a.outputEncoding):"",a.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Ba).join("\n")),c=za(c=Ga(c),a),h=za(h=Ga(h),a),n.isShaderMaterial||(c=Ha(c),h=Ha(h));var b=f+c,_=m+h,w=Oa(o,o.VERTEX_SHADER,b),M=Oa(o,o.FRAGMENT_SHADER,_);o.attachShader(x,w),o.attachShader(x,M),
// Force a particular attribute to index 0.
void 0!==n.index0AttributeName?o.bindAttribLocation(x,0,n.index0AttributeName):!0===a.morphTargets&&
// programs with morphTargets displace position out of attribute 0
o.bindAttribLocation(x,0,"position"),o.linkProgram(x);var E=o.getProgramInfoLog(x),T=o.getShaderInfoLog(w),S=o.getShaderInfoLog(M),A=!0,L=!0;
// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );
// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );
!1===o.getProgramParameter(x,o.LINK_STATUS)?(A=!1,console.error("THREE.WebGLProgram: shader error: ",o.getError(),"gl.VALIDATE_STATUS",o.getProgramParameter(x,o.VALIDATE_STATUS),"gl.getProgramInfoLog",E,T,S)):""!==E?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",E):""!==T&&""!==S||(L=!1),L&&(this.diagnostics={runnable:A,material:n,programLog:E,vertexShader:{log:T,prefix:f},fragmentShader:{log:S,prefix:m}}),
// clean up
o.deleteShader(w),o.deleteShader(M);
// set up caching for uniform locations
var R;this.getUniforms=function(){return void 0===R&&(R=new Dr(o,x,t)),R};
// set up caching for attribute locations
var P;
// free resource
// DEPRECATED
//
return this.getAttributes=function(){return void 0===P&&(P=function(t,e,i){for(var n={},r=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES),a=0;a<r;a++){var o=t.getActiveAttrib(e,a).name;
// console.log("THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:", name, i );
n[o]=t.getAttribLocation(e,o)}return n}(o,x)),P},this.destroy=function(){o.deleteProgram(x),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=df++,this.code=i,this.usedTimes=1,this.program=x,this.vertexShader=w,this.fragmentShader=M,this}/**
 * @author mrdoob / http://mrdoob.com/
 */
function ka(t,e,i){function n(t,e){var i;
// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.
return t?t.isTexture?i=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),i=t.texture.encoding):i=zp,i===zp&&e&&(i=Hp),i}var r=[],a={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow"},o=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering"];this.getParameters=function(e,r,o,s,c,h,l){var u=a[e.type],d=l.isSkinnedMesh?function(t){var e=t.skeleton.bones;if(i.floatVertexTextures)return 1024;
// default for when object is not specified
// ( for example when prebuilding shader to be used with multiple objects )
//
//  - leave some extra space for other uniforms
//  - limit here is ANGLE's 254 max uniform vectors
//    (up to 54 should be safe)
var n=i.maxVertexUniforms,r=Math.floor((n-20)/4),a=Math.min(r,e.length);return a<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+a+"."),0):a}(l):0,p=i.precision;null!==e.precision&&(p=i.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",p,"instead.");var f=t.getRenderTarget();return{shaderID:u,precision:p,supportsVertexTextures:i.vertexTextures,outputEncoding:n(f?f.texture:null,t.gammaOutput),map:!!e.map,mapEncoding:n(e.map,t.gammaInput),envMap:!!e.envMap,envMapMode:e.envMap&&e.envMap.mapping,envMapEncoding:n(e.envMap,t.gammaInput),envMapCubeUV:!!e.envMap&&(e.envMap.mapping===Yd||e.envMap.mapping===Zd),lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:n(e.emissiveMap,t.gammaInput),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,combine:e.combine,vertexColors:e.vertexColors,fog:!!s,useFog:e.fog,fogExp:s&&s.isFogExp2,flatShading:e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:i.logarithmicDepthBuffer,skinning:e.skinning&&d>0,maxBones:d,useVertexTexture:i.floatVertexTextures,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:r.directional.length,numPointLights:r.point.length,numSpotLights:r.spot.length,numRectAreaLights:r.rectArea.length,numHemiLights:r.hemi.length,numClippingPlanes:c,numClipIntersection:h,dithering:e.dithering,shadowMapEnabled:t.shadowMap.enabled&&l.receiveShadow&&o.length>0,shadowMapType:t.shadowMap.type,toneMapping:t.toneMapping,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===ed,flipSided:e.side===td,depthPacking:void 0!==e.depthPacking&&e.depthPacking}},this.getProgramCode=function(e,i){var n=[];if(i.shaderID?n.push(i.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(var r in e.defines)n.push(r),n.push(e.defines[r]);for(var a=0;a<o.length;a++)n.push(i[o[a]]);return n.push(e.onBeforeCompile.toString()),n.push(t.gammaOutput),n.join()},this.acquireProgram=function(i,n,a,o){
// Check if code has been already compiled
for(var s,c=0,h=r.length;c<h;c++){var l=r[c];if(l.code===o){++(s=l).usedTimes;break}}return void 0===s&&(s=new Va(t,e,o,i,n,a),r.push(s)),s},this.releaseProgram=function(t){if(0==--t.usedTimes){
// Remove from unordered set
var e=r.indexOf(t);r[e]=r[r.length-1],r.pop(),
// Free WebGL resources
t.destroy()}},
// Exposed for resource monitoring & error feedback via renderer.info:
this.programs=r}/**
 * @author mrdoob / http://mrdoob.com/
 */
function ja(t,e,i,n,r,a,o){
//
function s(t,e){if(t.width>e||t.height>e){
// Warning: Scaling through the canvas will only work with images that use
// premultiplied alpha.
var i=e/Math.max(t.width,t.height),n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");n.width=Math.floor(t.width*i),n.height=Math.floor(t.height*i);return n.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,n.width,n.height),console.warn("THREE.WebGLRenderer: image is too big ("+t.width+"x"+t.height+"). Resized to "+n.width+"x"+n.height,t),n}return t}function c(t){return Yp.isPowerOfTwo(t.width)&&Yp.isPowerOfTwo(t.height)}function h(t,e){return t.generateMipmaps&&e&&t.minFilter!==$d&&t.minFilter!==ip}
// Fallback filters for non-power-of-2 textures
function l(e){return e===$d||e===tp||e===ep?t.NEAREST:t.LINEAR}
//
function u(e){var i=e.target;i.removeEventListener("dispose",u),
//
function(e){var i=n.get(e);if(e.image&&i.__image__webglTextureCube)
// cube texture
t.deleteTexture(i.__image__webglTextureCube);else{
// 2D texture
if(void 0===i.__webglInit)return;t.deleteTexture(i.__webglTexture)}
// remove all webgl properties
n.remove(e)}(i),o.textures--}function d(e){var i=e.target;i.removeEventListener("dispose",d),function(e){var i=n.get(e),r=n.get(e.texture);if(!e)return;void 0!==r.__webglTexture&&t.deleteTexture(r.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLRenderTargetCube)for(var a=0;a<6;a++)t.deleteFramebuffer(i.__webglFramebuffer[a]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[a]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer);n.remove(e.texture),n.remove(e)}(i),o.textures--}
//
function p(e,l){var d=n.get(e);if(e.version>0&&d.__version!==e.version){var p=e.image;if(void 0===p)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",e);else{if(!1!==p.complete)return void function(e,n,l){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",u),e.__webglTexture=t.createTexture(),o.textures++);i.activeTexture(t.TEXTURE0+l),i.bindTexture(t.TEXTURE_2D,e.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,n.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,n.unpackAlignment);var d=s(n.image,r.maxTextureSize);(function(t){return t.wrapS!==Qd||t.wrapT!==Qd||t.minFilter!==$d&&t.minFilter!==ip})(n)&&!1===c(d)&&(d=function(t){if(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement){var e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.width=Yp.nearestPowerOfTwo(t.width),e.height=Yp.nearestPowerOfTwo(t.height),e.getContext("2d").drawImage(t,0,0,e.width,e.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+t.width+"x"+t.height+"). Resized to "+e.width+"x"+e.height,t),e}return t}(d));var p=c(d),m=a.convert(n.format),g=a.convert(n.type);f(t.TEXTURE_2D,n,p);var v,x=n.mipmaps;if(n.isDepthTexture){
// populate depth texture with dummy data
var b=t.DEPTH_COMPONENT;if(n.type===up){if(!y)throw new Error("Float Depth Texture only supported in WebGL2.0");b=t.DEPTH_COMPONENT32F}else y&&(
// WebGL 2.0 requires signed internalformat for glTexImage2D
b=t.DEPTH_COMPONENT16);n.format===Mp&&b===t.DEPTH_COMPONENT&&n.type!==cp&&n.type!==lp&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=cp,g=a.convert(n.type)),
// Depth stencil textures need the DEPTH_STENCIL internal format
// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
n.format===Ep&&(b=t.DEPTH_STENCIL,
// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are
// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.
// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
n.type!==gp&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=gp,g=a.convert(n.type))),i.texImage2D(t.TEXTURE_2D,0,b,d.width,d.height,0,m,g,null)}else if(n.isDataTexture)
// use manually created mipmaps if available
// if there are no manual mipmaps
// set 0 level mipmap and then use GL to generate other mipmap levels
if(x.length>0&&p){for(var _=0,w=x.length;_<w;_++)v=x[_],i.texImage2D(t.TEXTURE_2D,_,m,v.width,v.height,0,m,g,v.data);n.generateMipmaps=!1}else i.texImage2D(t.TEXTURE_2D,0,m,d.width,d.height,0,m,g,d.data);else if(n.isCompressedTexture)for(var _=0,w=x.length;_<w;_++)v=x[_],n.format!==xp&&n.format!==yp?i.getCompressedTextureFormats().indexOf(m)>-1?i.compressedTexImage2D(t.TEXTURE_2D,_,m,v.width,v.height,0,v.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(t.TEXTURE_2D,_,m,v.width,v.height,0,m,g,v.data);else
// regular Texture (image, video, canvas)
// use manually created mipmaps if available
// if there are no manual mipmaps
// set 0 level mipmap and then use GL to generate other mipmap levels
if(x.length>0&&p){for(var _=0,w=x.length;_<w;_++)v=x[_],i.texImage2D(t.TEXTURE_2D,_,m,m,g,v);n.generateMipmaps=!1}else i.texImage2D(t.TEXTURE_2D,0,m,m,g,d);h(n,p)&&t.generateMipmap(t.TEXTURE_2D);e.__version=n.version,n.onUpdate&&n.onUpdate(n)}(d,e,l);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",e)}}i.activeTexture(t.TEXTURE0+l),i.bindTexture(t.TEXTURE_2D,d.__webglTexture)}function f(i,o,s){var c;if(s?(t.texParameteri(i,t.TEXTURE_WRAP_S,a.convert(o.wrapS)),t.texParameteri(i,t.TEXTURE_WRAP_T,a.convert(o.wrapT)),t.texParameteri(i,t.TEXTURE_MAG_FILTER,a.convert(o.magFilter)),t.texParameteri(i,t.TEXTURE_MIN_FILTER,a.convert(o.minFilter))):(t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),o.wrapS===Qd&&o.wrapT===Qd||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",o),t.texParameteri(i,t.TEXTURE_MAG_FILTER,l(o.magFilter)),t.texParameteri(i,t.TEXTURE_MIN_FILTER,l(o.minFilter)),o.minFilter!==$d&&o.minFilter!==ip&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",o)),c=e.get("EXT_texture_filter_anisotropic")){if(o.type===up&&null===e.get("OES_texture_float_linear"))return;if(o.type===dp&&null===e.get("OES_texture_half_float_linear"))return;(o.anisotropy>1||n.get(o).__currentAnisotropy)&&(t.texParameterf(i,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,r.getMaxAnisotropy())),n.get(o).__currentAnisotropy=o.anisotropy)}}
// Render targets
// Setup storage for target texture and bind it to correct framebuffer
function m(e,r,o,s){var c=a.convert(r.texture.format),h=a.convert(r.texture.type);i.texImage2D(s,0,c,r.width,r.height,0,c,h,null),t.bindFramebuffer(t.FRAMEBUFFER,e),t.framebufferTexture2D(t.FRAMEBUFFER,o,s,n.get(r.texture).__webglTexture,0),t.bindFramebuffer(t.FRAMEBUFFER,null)}
// Setup storage for internal depth/stencil buffers and bind to correct framebuffer
function g(e,i){t.bindRenderbuffer(t.RENDERBUFFER,e),i.depthBuffer&&!i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)):i.depthBuffer&&i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)):
// FIXME: We don't support !depth !stencil
t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,i.width,i.height),t.bindRenderbuffer(t.RENDERBUFFER,null)}
// Setup GL resources for a non-texture depth buffer
function v(e){var i=n.get(e),r=!0===e.isWebGLRenderTargetCube;if(e.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!
// Setup resources for a Depth Texture for a FBO (needs an extension)
function(e,i){if(i&&i.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(t.FRAMEBUFFER,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
// upload an empty depth texture with framebuffer size
n.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),p(i.depthTexture,0);var r=n.get(i.depthTexture).__webglTexture;if(i.depthTexture.format===Mp)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,r,0);else{if(i.depthTexture.format!==Ep)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,r,0)}}(i.__webglFramebuffer,e)}else if(r){i.__webglDepthbuffer=[];for(var a=0;a<6;a++)t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer[a]),i.__webglDepthbuffer[a]=t.createRenderbuffer(),g(i.__webglDepthbuffer[a],e)}else t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer),i.__webglDepthbuffer=t.createRenderbuffer(),g(i.__webglDepthbuffer,e);t.bindFramebuffer(t.FRAMEBUFFER,null)}var y="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext;this.setTexture2D=p,this.setTextureCube=function(e,l){var d=n.get(e);if(6===e.image.length)if(e.version>0&&d.__version!==e.version){d.__image__webglTextureCube||(e.addEventListener("dispose",u),d.__image__webglTextureCube=t.createTexture(),o.textures++),i.activeTexture(t.TEXTURE0+l),i.bindTexture(t.TEXTURE_CUBE_MAP,d.__image__webglTextureCube),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var p=e&&e.isCompressedTexture,m=e.image[0]&&e.image[0].isDataTexture,g=[],v=0;v<6;v++)g[v]=p||m?m?e.image[v].image:e.image[v]:s(e.image[v],r.maxCubemapSize);var y=c(g[0]),x=a.convert(e.format),b=a.convert(e.type);for(f(t.TEXTURE_CUBE_MAP,e,y),v=0;v<6;v++)if(p)for(var _,w=g[v].mipmaps,M=0,E=w.length;M<E;M++)_=w[M],e.format!==xp&&e.format!==yp?i.getCompressedTextureFormats().indexOf(x)>-1?i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+v,M,x,_.width,_.height,0,_.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+v,M,x,_.width,_.height,0,x,b,_.data);else m?i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+v,0,x,g[v].width,g[v].height,0,x,b,g[v].data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+v,0,x,x,b,g[v]);h(e,y)&&t.generateMipmap(t.TEXTURE_CUBE_MAP),d.__version=e.version,e.onUpdate&&e.onUpdate(e)}else i.activeTexture(t.TEXTURE0+l),i.bindTexture(t.TEXTURE_CUBE_MAP,d.__image__webglTextureCube)},this.setTextureCubeDynamic=function(e,r){i.activeTexture(t.TEXTURE0+r),i.bindTexture(t.TEXTURE_CUBE_MAP,n.get(e).__webglTexture)},this.setupRenderTarget=
// Set up GL resources for the render target
function(e){var r=n.get(e),a=n.get(e.texture);e.addEventListener("dispose",d),a.__webglTexture=t.createTexture(),o.textures++;var s=!0===e.isWebGLRenderTargetCube,l=c(e);
// Setup framebuffer
if(s)for(r.__webglFramebuffer=[],u=0;u<6;u++)r.__webglFramebuffer[u]=t.createFramebuffer();else r.__webglFramebuffer=t.createFramebuffer();
// Setup color buffer
if(s){i.bindTexture(t.TEXTURE_CUBE_MAP,a.__webglTexture),f(t.TEXTURE_CUBE_MAP,e.texture,l);for(var u=0;u<6;u++)m(r.__webglFramebuffer[u],e,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+u);h(e.texture,l)&&t.generateMipmap(t.TEXTURE_CUBE_MAP),i.bindTexture(t.TEXTURE_CUBE_MAP,null)}else i.bindTexture(t.TEXTURE_2D,a.__webglTexture),f(t.TEXTURE_2D,e.texture,l),m(r.__webglFramebuffer,e,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),h(e.texture,l)&&t.generateMipmap(t.TEXTURE_2D),i.bindTexture(t.TEXTURE_2D,null);
// Setup depth and stencil buffers
e.depthBuffer&&v(e)},this.updateRenderTargetMipmap=function(e){var r=e.texture;if(h(r,c(e))){var a=e.isWebGLRenderTargetCube?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,o=n.get(r).__webglTexture;i.bindTexture(a,o),t.generateMipmap(a),i.bindTexture(a,null)}}}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Wa(t){ra.call(this),this.cameras=t||[]}/**
 * @author thespite / http://www.twitter.com/thespite
 */
function Xa(t,e){return{convert:function(i){var n;if(i===Jd)return t.REPEAT;if(i===Qd)return t.CLAMP_TO_EDGE;if(i===Kd)return t.MIRRORED_REPEAT;if(i===$d)return t.NEAREST;if(i===tp)return t.NEAREST_MIPMAP_NEAREST;if(i===ep)return t.NEAREST_MIPMAP_LINEAR;if(i===ip)return t.LINEAR;if(i===np)return t.LINEAR_MIPMAP_NEAREST;if(i===rp)return t.LINEAR_MIPMAP_LINEAR;if(i===ap)return t.UNSIGNED_BYTE;if(i===pp)return t.UNSIGNED_SHORT_4_4_4_4;if(i===fp)return t.UNSIGNED_SHORT_5_5_5_1;if(i===mp)return t.UNSIGNED_SHORT_5_6_5;if(i===op)return t.BYTE;if(i===sp)return t.SHORT;if(i===cp)return t.UNSIGNED_SHORT;if(i===hp)return t.INT;if(i===lp)return t.UNSIGNED_INT;if(i===up)return t.FLOAT;if(i===dp&&null!==(n=e.get("OES_texture_half_float")))return n.HALF_FLOAT_OES;if(i===vp)return t.ALPHA;if(i===yp)return t.RGB;if(i===xp)return t.RGBA;if(i===bp)return t.LUMINANCE;if(i===_p)return t.LUMINANCE_ALPHA;if(i===Mp)return t.DEPTH_COMPONENT;if(i===Ep)return t.DEPTH_STENCIL;if(i===ud)return t.FUNC_ADD;if(i===dd)return t.FUNC_SUBTRACT;if(i===pd)return t.FUNC_REVERSE_SUBTRACT;if(i===gd)return t.ZERO;if(i===vd)return t.ONE;if(i===yd)return t.SRC_COLOR;if(i===xd)return t.ONE_MINUS_SRC_COLOR;if(i===bd)return t.SRC_ALPHA;if(i===_d)return t.ONE_MINUS_SRC_ALPHA;if(i===wd)return t.DST_ALPHA;if(i===Md)return t.ONE_MINUS_DST_ALPHA;if(i===Ed)return t.DST_COLOR;if(i===Td)return t.ONE_MINUS_DST_COLOR;if(i===Sd)return t.SRC_ALPHA_SATURATE;if((i===Tp||i===Sp||i===Ap||i===Lp)&&null!==(n=e.get("WEBGL_compressed_texture_s3tc"))){if(i===Tp)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Sp)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===Ap)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===Lp)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((i===Rp||i===Pp||i===Cp||i===Ip)&&null!==(n=e.get("WEBGL_compressed_texture_pvrtc"))){if(i===Rp)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===Pp)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===Cp)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===Ip)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i===Up&&null!==(n=e.get("WEBGL_compressed_texture_etc1")))return n.COMPRESSED_RGB_ETC1_WEBGL;if((i===fd||i===md)&&null!==(n=e.get("EXT_blend_minmax"))){if(i===fd)return n.MIN_EXT;if(i===md)return n.MAX_EXT}return i===gp&&null!==(n=e.get("WEBGL_depth_texture"))?n.UNSIGNED_INT_24_8_WEBGL:0}}}
// import { Sphere } from '../math/Sphere';
/**
 * @author supereggbert / http://www.paulbrunt.co.uk/
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author szimek / https://github.com/szimek/
 * @author tschw
 */
function qa(t){function e(){return null===C?k:1}function i(){(nt=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t){var e={};return{get:function(i){if(void 0!==e[i])return e[i];var n;switch(i){case"WEBGL_depth_texture":n=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":n=t.getExtension("WEBGL_compressed_texture_etc1");break;default:n=t.getExtension(i)}return null===n&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),e[i]=n,n}}}(et)).get("WEBGL_depth_texture"),nt.get("OES_texture_float"),nt.get("OES_texture_float_linear"),nt.get("OES_texture_half_float"),nt.get("OES_texture_half_float_linear"),nt.get("OES_standard_derivatives"),nt.get("ANGLE_instanced_arrays"),nt.get("OES_element_index_uint")&&(ba.MaxIndex=4294967296),bt=new Xa(et,nt),rt=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e,i){function n(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var r,a=void 0!==i.precision?i.precision:"highp",o=n(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);var s=!0===i.logarithmicDepthBuffer&&!!e.get("EXT_frag_depth"),c=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),h=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),l=t.getParameter(t.MAX_TEXTURE_SIZE),u=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),d=t.getParameter(t.MAX_VERTEX_ATTRIBS),p=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),f=t.getParameter(t.MAX_VARYING_VECTORS),m=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),g=h>0,v=!!e.get("OES_texture_float");return{getMaxAnisotropy:function(){if(void 0!==r)return r;var i=e.get("EXT_texture_filter_anisotropic");return r=null!==i?t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:n,precision:a,logarithmicDepthBuffer:s,maxTextures:c,maxVertexTextures:h,maxTextureSize:l,maxCubemapSize:u,maxAttributes:d,maxVertexUniforms:p,maxVaryings:f,maxFragmentUniforms:m,vertexTextures:g,floatFragmentTextures:v,floatVertexTextures:g&&v}}(et,nt,t),(at=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e,i){function n(e,i,n){var r=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(var o=0;o<n;o++)t.texImage2D(i+o,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,r);return a}function r(e){!0!==y[e]&&(t.enable(e),y[e]=!0)}function a(e){!1!==y[e]&&(t.disable(e),y[e]=!1)}function o(e,n,o,s,c,h,l,u){if(e!==ad?r(t.BLEND):a(t.BLEND),e!==ld){if(e!==_||u!==L)switch(e){case sd:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE,t.ONE,t.ONE)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.SRC_ALPHA,t.ONE));break;case cd:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR));break;case hd:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.SRC_COLOR));break;default:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA))}w=null,M=null,E=null,T=null,S=null,A=null}else c=c||n,h=h||o,l=l||s,n===w&&c===T||(t.blendEquationSeparate(i.convert(n),i.convert(c)),w=n,T=c),o===M&&s===E&&h===S&&l===A||(t.blendFuncSeparate(i.convert(o),i.convert(s),i.convert(h),i.convert(l)),M=o,E=s,S=h,A=l);_=e,L=u}
//
function s(e){R!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),R=e)}function c(e){e!==qu?(r(t.CULL_FACE),e!==P&&(e===Yu?t.cullFace(t.BACK):e===Zu?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):a(t.CULL_FACE),P=e}function h(e,i,n){e?(r(t.POLYGON_OFFSET_FILL),I===i&&U===n||(t.polygonOffset(i,n),I=i,U=n)):a(t.POLYGON_OFFSET_FILL)}
// texture
function l(e){void 0===e&&(e=t.TEXTURE0+N-1),F!==e&&(t.activeTexture(e),F=e)}
//
var u=new function(){var e=!1,i=new Qn,n=null,r=new Qn(0,0,0,0);return{setMask:function(i){n===i||e||(t.colorMask(i,i,i,i),n=i)},setLocked:function(t){e=t},setClear:function(e,n,a,o,s){!0===s&&(e*=o,n*=o,a*=o),i.set(e,n,a,o),!1===r.equals(i)&&(t.clearColor(e,n,a,o),r.copy(i))},reset:function(){e=!1,n=null,r.set(-1,0,0,0)}}},d=new function(){var e=!1,i=null,n=null,o=null;return{setTest:function(e){e?r(t.DEPTH_TEST):a(t.DEPTH_TEST)},setMask:function(n){i===n||e||(t.depthMask(n),i=n)},setFunc:function(e){if(n!==e){if(e)switch(e){case Ad:t.depthFunc(t.NEVER);break;case Ld:t.depthFunc(t.ALWAYS);break;case Rd:t.depthFunc(t.LESS);break;case Pd:t.depthFunc(t.LEQUAL);break;case Cd:t.depthFunc(t.EQUAL);break;case Id:t.depthFunc(t.GEQUAL);break;case Ud:t.depthFunc(t.GREATER);break;case Nd:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}else t.depthFunc(t.LEQUAL);n=e}},setLocked:function(t){e=t},setClear:function(e){o!==e&&(t.clearDepth(e),o=e)},reset:function(){e=!1,i=null,n=null,o=null}}},p=new function(){var e=!1,i=null,n=null,o=null,s=null,c=null,h=null,l=null,u=null;return{setTest:function(e){e?r(t.STENCIL_TEST):a(t.STENCIL_TEST)},setMask:function(n){i===n||e||(t.stencilMask(n),i=n)},setFunc:function(e,i,r){n===e&&o===i&&s===r||(t.stencilFunc(e,i,r),n=e,o=i,s=r)},setOp:function(e,i,n){c===e&&h===i&&l===n||(t.stencilOp(e,i,n),c=e,h=i,l=n)},setLocked:function(t){e=t},setClear:function(e){u!==e&&(t.clearStencil(e),u=e)},reset:function(){e=!1,i=null,n=null,o=null,s=null,c=null,h=null,l=null,u=null}}},f=t.getParameter(t.MAX_VERTEX_ATTRIBS),m=new Uint8Array(f),g=new Uint8Array(f),v=new Uint8Array(f),y={},x=null,b=null,_=null,w=null,M=null,E=null,T=null,S=null,A=null,L=!1,R=null,P=null,C=null,I=null,U=null,N=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS),O=parseFloat(/^WebGL\ ([0-9])/.exec(t.getParameter(t.VERSION))[1]),D=parseFloat(O)>=1,F=null,B={},z=new Qn,G=new Qn,H={};
// init
return H[t.TEXTURE_2D]=n(t.TEXTURE_2D,t.TEXTURE_2D,1),H[t.TEXTURE_CUBE_MAP]=n(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),u.setClear(0,0,0,1),d.setClear(1),p.setClear(0),r(t.DEPTH_TEST),d.setFunc(Pd),s(!1),c(Yu),r(t.CULL_FACE),r(t.BLEND),o(od),{buffers:{color:u,depth:d,stencil:p},initAttributes:
//
function(){for(var t=0,e=m.length;t<e;t++)m[t]=0},enableAttribute:function(i){m[i]=1,0===g[i]&&(t.enableVertexAttribArray(i),g[i]=1),0!==v[i]&&(e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i,0),v[i]=0)},enableAttributeAndDivisor:function(i,n){m[i]=1,0===g[i]&&(t.enableVertexAttribArray(i),g[i]=1),v[i]!==n&&(e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i,n),v[i]=n)},disableUnusedAttributes:function(){for(var e=0,i=g.length;e!==i;++e)g[e]!==m[e]&&(t.disableVertexAttribArray(e),g[e]=0)},enable:r,disable:a,getCompressedTextureFormats:function(){if(null===x&&(x=[],e.get("WEBGL_compressed_texture_pvrtc")||e.get("WEBGL_compressed_texture_s3tc")||e.get("WEBGL_compressed_texture_etc1")))for(var i=t.getParameter(t.COMPRESSED_TEXTURE_FORMATS),n=0;n<i.length;n++)x.push(i[n]);return x},useProgram:function(e){return b!==e&&(t.useProgram(e),b=e,!0)},setBlending:o,setMaterial:function(e){e.side===ed?a(t.CULL_FACE):r(t.CULL_FACE),s(e.side===td),!0===e.transparent?o(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):o(ad),d.setFunc(e.depthFunc),d.setTest(e.depthTest),d.setMask(e.depthWrite),u.setMask(e.colorWrite),h(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:s,setCullFace:c,setLineWidth:function(e){e!==C&&(D&&t.lineWidth(e),C=e)},setPolygonOffset:h,setScissorTest:function(e){e?r(t.SCISSOR_TEST):a(t.SCISSOR_TEST)},activeTexture:l,bindTexture:function(e,i){null===F&&l();var n=B[F];void 0===n&&(n={type:void 0,texture:void 0},B[F]=n),n.type===e&&n.texture===i||(t.bindTexture(e,i||H[e]),n.type=e,n.texture=i)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:
//
function(e){!1===z.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),z.copy(e))},viewport:function(e){!1===G.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),G.copy(e))},reset:
//
function(){for(var e=0;e<g.length;e++)1===g[e]&&(t.disableVertexAttribArray(e),g[e]=0);y={},x=null,F=null,B={},b=null,_=null,R=null,P=null,u.reset(),d.reset(),p.reset()}}}(et,nt,bt)).scissor(B.copy(W).multiplyScalar(k)),at.viewport(F.copy(j).multiplyScalar(k)),ot=new/**
 * @author fordacious / fordacious.github.io
 */
function(){var t={};return{get:function(e){var i=e.uuid,n=t[i];return void 0===n&&(n={},t[i]=n),n},remove:function(e){delete t[e.uuid]},clear:function(){t={}}}},st=new ja(et,nt,at,ot,rt,bt,$),ct=new Kr(et),ht=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e,i){function n(t){var o=t.target,s=r[o.id];null!==s.index&&e.remove(s.index);for(var c in s.attributes)e.remove(s.attributes[c]);o.removeEventListener("dispose",n),delete r[o.id];
// TODO Remove duplicate code
var h=a[o.id];h&&(e.remove(h),delete a[o.id]),(h=a[s.id])&&(e.remove(h),delete a[s.id]),
//
i.geometries--}var r={},a={};return{get:function(t,e){var a=r[e.id];return a||(e.addEventListener("dispose",n),e.isBufferGeometry?a=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new ba).setFromObject(t)),a=e._bufferGeometry),r[e.id]=a,i.geometries++,a)},update:function(i){var n=i.index,r=i.attributes;null!==n&&e.update(n,t.ELEMENT_ARRAY_BUFFER);for(var a in r)e.update(r[a],t.ARRAY_BUFFER);
// morph targets
var o=i.morphAttributes;for(var a in o)for(var s=o[a],c=0,h=s.length;c<h;c++)e.update(s[c],t.ARRAY_BUFFER)},getWireframeAttribute:function(i){var n=a[i.id];if(n)return n;var r=[],o=i.index,s=i.attributes;
// console.time( 'wireframe' );
if(null!==o)for(var c=0,h=(p=o.array).length;c<h;c+=3){var l=p[c+0],u=p[c+1],d=p[c+2];r.push(l,u,u,d,d,l)}else for(var p=s.position.array,c=0,h=p.length/3-1;c<h;c+=3){var l=c+0,u=c+1,d=c+2;r.push(l,u,u,d,d,l)}
// console.timeEnd( 'wireframe' );
return n=new(xa(r)>65535?ma:pa)(r,1),e.update(n,t.ELEMENT_ARRAY_BUFFER),a[i.id]=n,n}}}(et,ct,$),lt=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e){var i={};return{update:function(n){var r=e.frame,a=n.geometry,o=t.get(n,a);
// Update once per frame
return i[o.id]!==r&&(a.isGeometry&&o.updateFromObject(n),t.update(o),i[o.id]=r),o},clear:function(){i={}}}}(ht,tt),mt=new function(t){var e={},i=new Float32Array(8);return{update:function(n,r,a,o){var s=n.morphTargetInfluences,c=s.length,h=e[r.id];if(void 0===h){for(
// initialise list
h=[],d=0;d<c;d++)h[d]=[d,0];e[r.id]=h}
// Remove current morphAttributes
for(var l=a.morphTargets&&r.morphAttributes.position,u=a.morphNormals&&r.morphAttributes.normal,d=0;d<c;d++)0!==(p=h[d])[1]&&(l&&r.removeAttribute("morphTarget"+d),u&&r.removeAttribute("morphNormal"+d));
// Collect influences
for(d=0;d<c;d++)(p=h[d])[0]=d,p[1]=s[d];
// Add morphAttributes
for(h.sort(Ua),d=0;d<8;d++){var p=h[d];if(p){var f=p[0],m=p[1];if(m){l&&r.addAttribute("morphTarget"+d,l[f]),u&&r.addAttribute("morphNormal"+d,u[f]),i[d]=m;continue}}i[d]=0}o.getUniforms().setValue(t,"morphTargetInfluences",i)}}}(et),dt=new ka(R,nt,rt),ut=new Na,pt=new Ia,ft=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e,i,n){function r(t,i){e.buffers.color.setClear(t.r,t.g,t.b,i,n)}var a,o,s,c=new Fr(0),h=0;return{getClearColor:function(){return c},setClearColor:function(t,e){c.set(t),r(c,h=void 0!==e?e:1)},getClearAlpha:function(){return h},setClearAlpha:function(t){r(c,h=t)},render:function(e,n,l,u){var d=n.background;null===d?r(c,h):d&&d.isColor&&(r(d,1),u=!0),(t.autoClear||u)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),d&&d.isCubeTexture?(void 0===s&&((s=new Ra(new wa(1,1,1),new kr({uniforms:cf.cube.uniforms,vertexShader:cf.cube.vertexShader,fragmentShader:cf.cube.fragmentShader,side:td,depthTest:!0,depthWrite:!1,polygonOffset:!0,fog:!1}))).geometry.removeAttribute("normal"),s.geometry.removeAttribute("uv"),s.onBeforeRender=function(t,e,i){var n=i.far;this.matrixWorld.makeScale(n,n,n),this.matrixWorld.copyPosition(i.matrixWorld),this.material.polygonOffsetUnits=10*n},i.update(s.geometry)),s.material.uniforms.tCube.value=d,e.push(s,s.geometry,s.material,0,null)):d&&d.isTexture&&(void 0===a&&(a=new na(-1,1,1,-1,0,1),o=new Ra(new Ea(2,2),new Ta({depthTest:!1,depthWrite:!1,fog:!1})),i.update(o.geometry)),o.material.map=d,
// TODO Push this to renderList
t.renderBufferDirect(a,null,o.geometry,o.material,o,null))}}}(R,at,ht,w),gt=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e,i){var n;
//
this.setMode=function(t){n=t},this.render=function(e,r){t.drawArrays(n,e,r),i.calls++,i.vertices+=r,n===t.TRIANGLES?i.faces+=r/3:n===t.POINTS&&(i.points+=r)},this.renderInstances=function(r,a,o){var s=e.get("ANGLE_instanced_arrays");if(null!==s){var c=r.attributes.position;c.isInterleavedBufferAttribute?(o=c.data.count,s.drawArraysInstancedANGLE(n,0,o,r.maxInstancedCount)):s.drawArraysInstancedANGLE(n,a,o,r.maxInstancedCount),i.calls++,i.vertices+=o*r.maxInstancedCount,n===t.TRIANGLES?i.faces+=r.maxInstancedCount*o/3:n===t.POINTS&&(i.points+=r.maxInstancedCount*o)}else console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.")}}(et,nt,tt),vt=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e,i){var n,r,a;
//
this.setMode=function(t){n=t},this.setIndex=function(t){r=t.type,a=t.bytesPerElement},this.render=function(e,o){t.drawElements(n,o,r,e*a),i.calls++,i.vertices+=o,n===t.TRIANGLES?i.faces+=o/3:n===t.POINTS&&(i.points+=o)},this.renderInstances=function(o,s,c){var h=e.get("ANGLE_instanced_arrays");null!==h?(h.drawElementsInstancedANGLE(n,c,r,s*a,o.maxInstancedCount),i.calls++,i.vertices+=c*o.maxInstancedCount,n===t.TRIANGLES?i.faces+=o.maxInstancedCount*c/3:n===t.POINTS&&(i.points+=o.maxInstancedCount*c)):console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.")}}(et,nt,tt),yt=new zr(R,et,at,st,rt),xt=new Hr(R,et,at,st,rt),R.info.programs=dt.programs,R.context=et,R.capabilities=rt,R.extensions=nt,R.properties=ot,R.renderLists=pt,R.state=at}
// Events
function n(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),P=!0}function r(t){console.log("THREE.WebGLRenderer: Context Restored."),P=!1,i()}function a(t){var e=t.target;e.removeEventListener("dispose",a),
// Buffer deallocation
function(t){o(t),ot.remove(t)}(e)}function o(t){var e=ot.get(t).program;t.program=void 0,void 0!==e&&dt.releaseProgram(e)}function s(t){null!==Et&&Et(t),(_t.getDevice()||window).requestAnimationFrame(s)}/*
	// TODO Duplicated code (Frustum)

	var _sphere = new Sphere();

	function isObjectViewable( object ) {

		var geometry = object.geometry;

		if ( geometry.boundingSphere === null )
			geometry.computeBoundingSphere();

		_sphere.copy( geometry.boundingSphere ).
		applyMatrix4( object.matrixWorld );

		return isSphereViewable( _sphere );

	}

	function isSpriteViewable( sprite ) {

		_sphere.center.set( 0, 0, 0 );
		_sphere.radius = 0.7071067811865476;
		_sphere.applyMatrix4( sprite.matrixWorld );

		return isSphereViewable( _sphere );

	}

	function isSphereViewable( sphere ) {

		if ( ! _frustum.intersectsSphere( sphere ) ) return false;

		var numPlanes = _clipping.numPlanes;

		if ( numPlanes === 0 ) return true;

		var planes = _this.clippingPlanes,

			center = sphere.center,
			negRad = - sphere.radius,
			i = 0;

		do {

			// out when deeper than radius in the negative halfspace
			if ( planes[ i ].distanceToPoint( center ) < negRad ) return false;

		} while ( ++ i !== numPlanes );

		return true;

	}
	*/
function c(t,e,i){if(t.visible){if(t.layers.test(e.layers))if(t.isLight)E.push(t),t.castShadow&&T.push(t);else if(t.isSprite)t.frustumCulled&&!q.intersectsSprite(t)||A.push(t);else if(t.isLensFlare)L.push(t);else if(t.isImmediateRenderObject)i&&K.setFromMatrixPosition(t.matrixWorld).applyMatrix4(Q),S.push(t,null,t.material,K.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.update(),!t.frustumCulled||q.intersectsObject(t))){i&&K.setFromMatrixPosition(t.matrixWorld).applyMatrix4(Q);var n=lt.update(t),r=t.material;if(Array.isArray(r))for(var a=n.groups,o=0,s=a.length;o<s;o++){var h=a[o],l=r[h.materialIndex];l&&l.visible&&S.push(t,n,l,K.z,h)}else r.visible&&S.push(t,n,r,K.z,null)}for(var u=t.children,o=0,s=u.length;o<s;o++)c(u[o],e,i)}}function h(t,e,i,n){for(var r=0,a=t.length;r<a;r++){var o=t[r],s=o.object,c=o.geometry,h=void 0===n?o.material:n,u=o.group;if(i.isArrayCamera){D=i;for(var d=i.cameras,p=0,f=d.length;p<f;p++){var m=d[p];if(s.layers.test(m.layers)){var g=m.bounds,v=g.x*H,y=g.y*V,x=g.z*H,b=g.w*V;at.viewport(F.set(v,y,x,b).multiplyScalar(k)),l(s,e,m,c,h,u)}}}else D=null,l(s,e,i,c,h,u)}}function l(t,e,i,n,r,a){if(t.onBeforeRender(R,e,i,n,r,a),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){at.setMaterial(r);var o=d(i,e.fog,r,t);N="",
// Buffer rendering
function(t,e,i){t.render(function(t){R.renderBufferImmediate(t,e,i)})}(t,o,r)}else R.renderBufferDirect(i,e.fog,n,r,t,a);t.onAfterRender(R,e,i,n,r,a)}function u(t,e,i){var n=ot.get(t),r=dt.getParameters(t,ut.state,T,e,Y.numPlanes,Y.numIntersection,i),s=dt.getProgramCode(t,r),c=n.program,h=!0;if(void 0===c)
// new material
t.addEventListener("dispose",a);else if(c.code!==s)
// changed glsl or parameters
o(t);else{if(void 0!==r.shaderID)
// same glsl and uniform list
return;
// only rebuild uniform list
h=!1}if(h){if(r.shaderID){var l=cf[r.shaderID];n.shader={name:t.type,uniforms:of.clone(l.uniforms),vertexShader:l.vertexShader,fragmentShader:l.fragmentShader}}else n.shader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};t.onBeforeCompile(n.shader),c=dt.acquireProgram(t,n.shader,r,s),n.program=c,t.program=c}var u=c.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(d=0;d<R.maxMorphTargets;d++)u["morphTarget"+d]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals){t.numSupportedMorphNormals=0;for(var d=0;d<R.maxMorphNormals;d++)u["morphNormal"+d]>=0&&t.numSupportedMorphNormals++}var p=n.shader.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(n.numClippingPlanes=Y.numPlanes,n.numIntersection=Y.numIntersection,p.clippingPlanes=Y.uniform),n.fog=e,
// store the light setup it was created for
n.lightsHash=ut.state.hash,t.lights&&(
// wire up the material to this renderer's lighting state
p.ambientLightColor.value=ut.state.ambient,p.directionalLights.value=ut.state.directional,p.spotLights.value=ut.state.spot,p.rectAreaLights.value=ut.state.rectArea,p.pointLights.value=ut.state.point,p.hemisphereLights.value=ut.state.hemi,p.directionalShadowMap.value=ut.state.directionalShadowMap,p.directionalShadowMatrix.value=ut.state.directionalShadowMatrix,p.spotShadowMap.value=ut.state.spotShadowMap,p.spotShadowMatrix.value=ut.state.spotShadowMatrix,p.pointShadowMap.value=ut.state.pointShadowMap,p.pointShadowMatrix.value=ut.state.pointShadowMatrix);var f=n.program.getUniforms(),m=Dr.seqWithValue(f.seq,p);n.uniformsList=m}function d(t,e,i,n){G=0;var r=ot.get(i);if(Z&&(J||t!==O)){var a=t===O&&i.id===U;
// we might want to call this function with some ClippingGroup
// object instead of the material, once it becomes feasible
// (#8465, #8379)
Y.setState(i.clippingPlanes,i.clipIntersection,i.clipShadows,t,r,a)}!1===i.needsUpdate&&(void 0===r.program?i.needsUpdate=!0:i.fog&&r.fog!==e?i.needsUpdate=!0:i.lights&&r.lightsHash!==ut.state.hash?i.needsUpdate=!0:void 0===r.numClippingPlanes||r.numClippingPlanes===Y.numPlanes&&r.numIntersection===Y.numIntersection||(i.needsUpdate=!0)),i.needsUpdate&&(u(i,e,n),i.needsUpdate=!1);var o=!1,s=!1,c=!1,h=r.program,l=h.getUniforms(),d=r.shader.uniforms;if(at.useProgram(h.program)&&(o=!0,s=!0,c=!0),i.id!==U&&(U=i.id,s=!0),o||t!==O){
// load material specific uniforms
// (shader material also gets them for the sake of genericity)
if(l.setValue(et,"projectionMatrix",t.projectionMatrix),rt.logarithmicDepthBuffer&&l.setValue(et,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),
// Avoid unneeded uniform updates per ArrayCamera's sub-camera
O!==(D||t)&&(O=D||t,
// lighting uniforms depend on the camera so enforce an update
// now, in case this material supports lights - or later, when
// the next material that does gets activated:
s=!0,// set to true on material change
c=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshStandardMaterial||i.envMap){var g=l.map.cameraPosition;void 0!==g&&g.setValue(et,K.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.skinning)&&l.setValue(et,"viewMatrix",t.matrixWorldInverse)}
// skinning uniforms must be set even if material didn't change
// auto-setting of texture unit for bone texture must go before other textures
// not sure why, but otherwise weird things happen
if(i.skinning){l.setOptional(et,n,"bindMatrix"),l.setOptional(et,n,"bindMatrixInverse");var v=n.skeleton;if(v){var y=v.bones;if(rt.floatVertexTextures){if(void 0===v.boneTexture){
// layout (1 matrix = 4 pixels)
//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)
//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)
//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)
//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)
//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)
var x=Math.sqrt(4*y.length);// 4 pixels needed for 1 matrix
x=Yp.nextPowerOfTwo(Math.ceil(x)),x=Math.max(x,4);var b=new Float32Array(x*x*4);// 4 floats per RGBA pixel
b.set(v.boneMatrices);// copy current values
var _=new nr(b,x,x,xp,up);v.boneMatrices=b,v.boneTexture=_,v.boneTextureSize=x}l.setValue(et,"boneTexture",v.boneTexture),l.setValue(et,"boneTextureSize",v.boneTextureSize)}else l.setOptional(et,v,"boneMatrices")}}
// the current material requires lighting info
// note: all lighting uniforms are always set correctly
// they simply reference the renderer's state for their
// values
//
// use the current material's .needsUpdate flags to set
// the GL state when required
// If uniforms are marked as clean, they don't need to be loaded to the GPU.
// refresh uniforms common to several materials
// RectAreaLight Texture
// TODO (mrdoob): Find a nicer implementation
// common matrices
return s&&(l.setValue(et,"toneMappingExposure",R.toneMappingExposure),l.setValue(et,"toneMappingWhitePoint",R.toneMappingWhitePoint),i.lights&&function(t,e){t.ambientLightColor.needsUpdate=e,t.directionalLights.needsUpdate=e,t.pointLights.needsUpdate=e,t.spotLights.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}(d,c),e&&i.fog&&function(t,e){t.fogColor.value=e.color,e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}(d,e),i.isMeshBasicMaterial?p(d,i):i.isMeshLambertMaterial?(p(d,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(d,i)):i.isMeshPhongMaterial?(p(d,i),i.isMeshToonMaterial?function(t,e){f(t,e),e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(d,i):f(d,i)):i.isMeshStandardMaterial?(p(d,i),i.isMeshPhysicalMaterial?function(t,e){t.clearCoat.value=e.clearCoat,t.clearCoatRoughness.value=e.clearCoatRoughness,m(t,e)}(d,i):m(d,i)):i.isMeshDepthMaterial?(p(d,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(d,i)):i.isMeshDistanceMaterial?(p(d,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(d,i)):i.isMeshNormalMaterial?(p(d,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale);e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale));e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(d,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity}(d,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(d,i)):i.isPointsMaterial?function(t,e){if(t.diffuse.value=e.color,t.opacity.value=e.opacity,t.size.value=e.size*k,t.scale.value=.5*V,t.map.value=e.map,null!==e.map){var i=e.map.offset,n=e.map.repeat;t.offsetRepeat.value.set(i.x,i.y,n.x,n.y)}}(d,i):i.isShadowMaterial&&(d.color.value=i.color,d.opacity.value=i.opacity),void 0!==d.ltcMat&&(d.ltcMat.value=af.LTC_MAT_TEXTURE),void 0!==d.ltcMag&&(d.ltcMag.value=af.LTC_MAG_TEXTURE),Dr.upload(et,r.uniformsList,d,R)),l.setValue(et,"modelViewMatrix",n.modelViewMatrix),l.setValue(et,"normalMatrix",n.normalMatrix),l.setValue(et,"modelMatrix",n.matrixWorld),h}
// Uniforms (refresh uniforms objects)
function p(t,e){t.opacity.value=e.opacity,e.color&&(t.diffuse.value=e.color),e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.specularMap&&(t.specularMap.value=e.specularMap),e.envMap&&(t.envMap.value=e.envMap,
// don't flip CubeTexture envMaps, flip everything else:
//  WebGLRenderTargetCube will be flipped for backwards compatibility
//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture
// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future
t.flipEnvMap.value=e.envMap&&e.envMap.isCubeTexture?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity);
// uv repeat and offset setting priorities
// 1. color map
// 2. specular map
// 3. normal map
// 4. bump map
// 5. alpha map
// 6. emissive map
var i;if(e.map?i=e.map:e.specularMap?i=e.specularMap:e.displacementMap?i=e.displacementMap:e.normalMap?i=e.normalMap:e.bumpMap?i=e.bumpMap:e.roughnessMap?i=e.roughnessMap:e.metalnessMap?i=e.metalnessMap:e.alphaMap?i=e.alphaMap:e.emissiveMap&&(i=e.emissiveMap),void 0!==i){
// backwards compatibility
i.isWebGLRenderTarget&&(i=i.texture);var n=i.offset,r=i.repeat;t.offsetRepeat.value.set(n.x,n.y,r.x,r.y)}}function f(t,e){t.specular.value=e.specular,t.shininess.value=Math.max(e.shininess,1e-4),// to prevent pow( 0.0, 0.0 )
e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function m(t,e){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),e.envMap&&(
//uniforms.envMap.value = material.envMap; // part of uniforms common
t.envMapIntensity.value=e.envMapIntensity)}console.log("THREE.WebGLRenderer",Xu);var g=void 0!==(t=t||{}).canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),v=void 0!==t.context?t.context:null,y=void 0!==t.alpha&&t.alpha,x=void 0===t.depth||t.depth,b=void 0===t.stencil||t.stencil,_=void 0!==t.antialias&&t.antialias,w=void 0===t.premultipliedAlpha||t.premultipliedAlpha,M=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,E=[],T=[],S=null,A=[],L=[];
// public properties
this.domElement=g,this.context=null,
// clearing
this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,
// scene graph
this.sortObjects=!0,
// user-defined clipping
this.clippingPlanes=[],this.localClippingEnabled=!1,
// physically based shading
this.gammaFactor=2,// for backwards compatibility
this.gammaInput=!1,this.gammaOutput=!1,
// physical lights
this.physicallyCorrectLights=!1,
// tone mapping
this.toneMapping=zd,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,
// morphs
this.maxMorphTargets=8,this.maxMorphNormals=4;
// internal properties
var R=this,P=!1,
// internal state cache
C=null,I=null,U=-1,N="",O=null,D=null,F=new Qn,B=new Qn,z=null,
//
G=0,
//
H=g.width,V=g.height,k=1,j=new Qn(0,0,H,V),W=new Qn(0,0,H,V),X=!1,
// frustum
q=new Jr,
// clipping
Y=new/**
 * @author tschw
 */
function(){function t(){h.value!==n&&(h.value=n,h.needsUpdate=r>0),i.numPlanes=r,i.numIntersection=0}function e(t,e,n,r){var a=null!==t?t.length:0,o=null;if(0!==a){if(o=h.value,!0!==r||null===o){var l=n+4*a,u=e.matrixWorldInverse;c.getNormalMatrix(u),(null===o||o.length<l)&&(o=new Float32Array(l));for(var d=0,p=n;d!==a;++d,p+=4)s.copy(t[d]).applyMatrix4(u,c),s.normal.toArray(o,p),o[p+3]=s.constant}h.value=o,h.needsUpdate=!0}return i.numPlanes=a,o}var i=this,n=null,r=0,a=!1,o=!1,s=new Zr,c=new Yr,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(t,i,o){var s=0!==t.length||i||
// enable state of previous frame - the clipping code has to
// run another frame in order to reset the state:
0!==r||a;return a=i,n=e(t,o,0),r=t.length,s},this.beginShadows=function(){o=!0,e(null)},this.endShadows=function(){o=!1,t()},this.setState=function(i,s,c,l,u,d){if(!a||null===i||0===i.length||o&&!c)
// there's no local clipping
o?
// there's no global clipping
e(null):t();else{var p=o?0:r,f=4*p,m=u.clippingState||null;h.value=m,// ensure unique state
m=e(i,l,f,d);for(var g=0;g!==f;++g)m[g]=n[g];u.clippingState=m,this.numIntersection=s?this.numPlanes:0,this.numPlanes+=p}}},Z=!1,J=!1,
// camera matrices cache
Q=new ir,K=new er,
// info
$={geometries:0,textures:0},tt={frame:0,calls:0,vertices:0,faces:0,points:0};this.info={render:tt,memory:$,programs:null};
// initialize
var et;try{var it={alpha:y,depth:x,stencil:b,antialias:_,premultipliedAlpha:w,preserveDrawingBuffer:M};if(null===(et=v||g.getContext("webgl",it)||g.getContext("experimental-webgl",it)))throw null!==g.getContext("webgl")?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";
// Some experimental-webgl implementations do not have getShaderPrecisionFormat
void 0===et.getShaderPrecisionFormat&&(et.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),g.addEventListener("webglcontextlost",n,!1),g.addEventListener("webglcontextrestored",r,!1)}catch(t){console.error("THREE.WebGLRenderer: "+t)}var nt,rt,at,ot,st,ct,ht,lt,ut,dt,pt,ft,mt,gt,vt,yt,xt,bt;i();
// vr
var _t=new/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t){function e(){if(null!==n&&n.isPresenting){var e=n.getEyeParameters("left"),r=e.renderWidth,a=e.renderHeight;d=t.getPixelRatio(),u=t.getSize(),t.setDrawingBufferSize(2*r,a,1)}else i.enabled&&t.setDrawingBufferSize(u.width,u.height,d)}var i=this,n=null,r=null;"VRFrameData"in window&&(r=new window.VRFrameData);var a=new ir,o=new ir,s=new ir,c=new ra;c.bounds=new Qn(0,0,.5,1),c.layers.enable(1);var h=new ra;h.bounds=new Qn(.5,0,.5,1),h.layers.enable(2);var l=new Wa([c,h]);l.layers.enable(1),l.layers.enable(2);
//
var u,d;window.addEventListener("vrdisplaypresentchange",e,!1),
//
this.enabled=!1,this.standing=!1,this.getDevice=function(){return n},this.setDevice=function(t){void 0!==t&&(n=t)},this.getCamera=function(t){if(null===n)return t;n.depthNear=t.near,n.depthFar=t.far,n.getFrameData(r);
//
var e=r.pose;null!==e.position?t.position.fromArray(e.position):t.position.set(0,0,0),null!==e.orientation&&t.quaternion.fromArray(e.orientation),t.updateMatrixWorld();var i=n.stageParameters;if(this.standing&&i&&(o.fromArray(i.sittingToStandingTransform),s.getInverse(o),t.matrixWorld.multiply(o),t.matrixWorldInverse.multiply(s)),!1===n.isPresenting)return t;
//
c.near=t.near,h.near=t.near,c.far=t.far,h.far=t.far,l.matrixWorld.copy(t.matrixWorld),l.matrixWorldInverse.copy(t.matrixWorldInverse),c.matrixWorldInverse.fromArray(r.leftViewMatrix),h.matrixWorldInverse.fromArray(r.rightViewMatrix),this.standing&&i&&(c.matrixWorldInverse.multiply(s),h.matrixWorldInverse.multiply(s));var u=t.parent;null!==u&&(a.getInverse(u.matrixWorld),c.matrixWorldInverse.multiply(a),h.matrixWorldInverse.multiply(a)),
// envMap and Mirror needs camera.matrixWorld
c.matrixWorld.getInverse(c.matrixWorldInverse),h.matrixWorld.getInverse(h.matrixWorldInverse),c.projectionMatrix.fromArray(r.leftProjectionMatrix),h.projectionMatrix.fromArray(r.rightProjectionMatrix),
// HACK @mrdoob
// https://github.com/w3c/webvr/issues/203
l.projectionMatrix.copy(c.projectionMatrix);
//
var d=n.getLayers();if(d.length){var p=d[0];null!==p.leftBounds&&4===p.leftBounds.length&&c.bounds.fromArray(p.leftBounds),null!==p.rightBounds&&4===p.rightBounds.length&&h.bounds.fromArray(p.rightBounds)}return l},this.getStandingMatrix=function(){return o},this.submitFrame=function(){n&&n.isPresenting&&n.submitFrame()},this.dispose=function(){window.removeEventListener("vrdisplaypresentchange",e)}}(R);this.vr=_t;
// shadow map
var wt=new Qr(R,lt,rt.maxTextureSize);this.shadowMap=wt,
// API
this.getContext=function(){return et},this.getContextAttributes=function(){return et.getContextAttributes()},this.forceContextLoss=function(){var t=nt.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){var t=nt.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return k},this.setPixelRatio=function(t){void 0!==t&&(k=t,this.setSize(H,V,!1))},this.getSize=function(){return{width:H,height:V}},this.setSize=function(t,e,i){var n=_t.getDevice();n&&n.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(H=t,V=e,g.width=t*k,g.height=e*k,!1!==i&&(g.style.width=t+"px",g.style.height=e+"px"),this.setViewport(0,0,t,e))},this.getDrawingBufferSize=function(){return{width:H*k,height:V*k}},this.setDrawingBufferSize=function(t,e,i){H=t,V=e,k=i,g.width=t*i,g.height=e*i,this.setViewport(0,0,t,e)},this.setViewport=function(t,e,i,n){j.set(t,V-e-n,i,n),at.viewport(F.copy(j).multiplyScalar(k))},this.setScissor=function(t,e,i,n){W.set(t,V-e-n,i,n),at.scissor(B.copy(W).multiplyScalar(k))},this.setScissorTest=function(t){at.setScissorTest(X=t)},
// Clearing
this.getClearColor=ft.getClearColor,this.setClearColor=ft.setClearColor,this.getClearAlpha=ft.getClearAlpha,this.setClearAlpha=ft.setClearAlpha,this.clear=function(t,e,i){var n=0;(void 0===t||t)&&(n|=et.COLOR_BUFFER_BIT),(void 0===e||e)&&(n|=et.DEPTH_BUFFER_BIT),(void 0===i||i)&&(n|=et.STENCIL_BUFFER_BIT),et.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(t,e,i,n){this.setRenderTarget(t),this.clear(e,i,n)},
//
this.dispose=function(){g.removeEventListener("webglcontextlost",n,!1),g.removeEventListener("webglcontextrestored",r,!1),pt.dispose(),_t.dispose()},this.renderBufferImmediate=function(t,e,i){at.initAttributes();var n=ot.get(t);t.hasPositions&&!n.position&&(n.position=et.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=et.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=et.createBuffer()),t.hasColors&&!n.color&&(n.color=et.createBuffer());var r=e.getAttributes();if(t.hasPositions&&(et.bindBuffer(et.ARRAY_BUFFER,n.position),et.bufferData(et.ARRAY_BUFFER,t.positionArray,et.DYNAMIC_DRAW),at.enableAttribute(r.position),et.vertexAttribPointer(r.position,3,et.FLOAT,!1,0,0)),t.hasNormals){if(et.bindBuffer(et.ARRAY_BUFFER,n.normal),!i.isMeshPhongMaterial&&!i.isMeshStandardMaterial&&!i.isMeshNormalMaterial&&!0===i.flatShading)for(var a=0,o=3*t.count;a<o;a+=9){var s=t.normalArray,c=(s[a+0]+s[a+3]+s[a+6])/3,h=(s[a+1]+s[a+4]+s[a+7])/3,l=(s[a+2]+s[a+5]+s[a+8])/3;s[a+0]=c,s[a+1]=h,s[a+2]=l,s[a+3]=c,s[a+4]=h,s[a+5]=l,s[a+6]=c,s[a+7]=h,s[a+8]=l}et.bufferData(et.ARRAY_BUFFER,t.normalArray,et.DYNAMIC_DRAW),at.enableAttribute(r.normal),et.vertexAttribPointer(r.normal,3,et.FLOAT,!1,0,0)}t.hasUvs&&i.map&&(et.bindBuffer(et.ARRAY_BUFFER,n.uv),et.bufferData(et.ARRAY_BUFFER,t.uvArray,et.DYNAMIC_DRAW),at.enableAttribute(r.uv),et.vertexAttribPointer(r.uv,2,et.FLOAT,!1,0,0)),t.hasColors&&i.vertexColors!==id&&(et.bindBuffer(et.ARRAY_BUFFER,n.color),et.bufferData(et.ARRAY_BUFFER,t.colorArray,et.DYNAMIC_DRAW),at.enableAttribute(r.color),et.vertexAttribPointer(r.color,3,et.FLOAT,!1,0,0)),at.disableUnusedAttributes(),et.drawArrays(et.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,i,n,r,a,o){at.setMaterial(r);var s=d(t,i,r,a),c=n.id+"_"+s.id+"_"+(!0===r.wireframe),h=!1;c!==N&&(N=c,h=!0),a.morphTargetInfluences&&(mt.update(a,n,r,s),h=!0);
//
var l=n.index,u=n.attributes.position,p=1;!0===r.wireframe&&(l=ht.getWireframeAttribute(n),p=2);var f,m=gt;null!==l&&(f=ct.get(l),(m=vt).setIndex(f)),h&&(!function(t,e,i,n){if(i&&i.isInstancedBufferGeometry&&null===nt.get("ANGLE_instanced_arrays"))console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");else{void 0===n&&(n=0),at.initAttributes();var r=i.attributes,a=e.getAttributes(),o=t.defaultAttributeValues;for(var s in a){var c=a[s];if(c>=0){var h=r[s];if(void 0!==h){var l=h.normalized,u=h.itemSize,d=ct.get(h);
// TODO Attribute may not be available on context restore
if(void 0===d)continue;var p=d.buffer,f=d.type,m=d.bytesPerElement;if(h.isInterleavedBufferAttribute){var g=h.data,v=g.stride,y=h.offset;g&&g.isInstancedInterleavedBuffer?(at.enableAttributeAndDivisor(c,g.meshPerAttribute),void 0===i.maxInstancedCount&&(i.maxInstancedCount=g.meshPerAttribute*g.count)):at.enableAttribute(c),et.bindBuffer(et.ARRAY_BUFFER,p),et.vertexAttribPointer(c,u,f,l,v*m,(n*v+y)*m)}else h.isInstancedBufferAttribute?(at.enableAttributeAndDivisor(c,h.meshPerAttribute),void 0===i.maxInstancedCount&&(i.maxInstancedCount=h.meshPerAttribute*h.count)):at.enableAttribute(c),et.bindBuffer(et.ARRAY_BUFFER,p),et.vertexAttribPointer(c,u,f,l,0,n*u*m)}else if(void 0!==o){var x=o[s];if(void 0!==x)switch(x.length){case 2:et.vertexAttrib2fv(c,x);break;case 3:et.vertexAttrib3fv(c,x);break;case 4:et.vertexAttrib4fv(c,x);break;default:et.vertexAttrib1fv(c,x)}}}}at.disableUnusedAttributes()}}(r,s,n),null!==l&&et.bindBuffer(et.ELEMENT_ARRAY_BUFFER,f.buffer));
//
var g=0;null!==l?g=l.count:void 0!==u&&(g=u.count);var v=n.drawRange.start*p,y=n.drawRange.count*p,x=null!==o?o.start*p:0,b=null!==o?o.count*p:1/0,_=Math.max(v,x),w=Math.min(g,v+y,x+b)-1,M=Math.max(0,w-_+1);if(0!==M){
//
if(a.isMesh)if(!0===r.wireframe)at.setLineWidth(r.wireframeLinewidth*e()),m.setMode(et.LINES);else switch(a.drawMode){case Dp:m.setMode(et.TRIANGLES);break;case Fp:m.setMode(et.TRIANGLE_STRIP);break;case Bp:m.setMode(et.TRIANGLE_FAN)}else if(a.isLine){var E=r.linewidth;void 0===E&&(E=1),// Not using Line*Material
at.setLineWidth(E*e()),a.isLineSegments?m.setMode(et.LINES):a.isLineLoop?m.setMode(et.LINE_LOOP):m.setMode(et.LINE_STRIP)}else a.isPoints&&m.setMode(et.POINTS);n&&n.isInstancedBufferGeometry?n.maxInstancedCount>0&&m.renderInstances(n,_,M):m.render(_,M)}},
// Compile
this.compile=function(t,e){E.length=0,T.length=0,t.traverse(function(t){t.isLight&&(E.push(t),t.castShadow&&T.push(t))}),ut.setup(E,T,e),t.traverse(function(e){if(e.material)if(Array.isArray(e.material))for(var i=0;i<e.material.length;i++)u(e.material[i],t.fog,e);else u(e.material,t.fog,e)})};
// Animation Loop
var Mt=!1,Et=null;this.animate=function(t){Et=t,Mt||((_t.getDevice()||window).requestAnimationFrame(s),Mt=!0)},
// Rendering
this.render=function(t,e,i,n){if(e&&e.isCamera){if(!P){
// reset caching for this frame
N="",U=-1,O=null,
// update scene graph
!0===t.autoUpdate&&t.updateMatrixWorld(),
// update camera matrices and frustum
null===e.parent&&e.updateMatrixWorld(),_t.enabled&&(e=_t.getCamera(e)),Q.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),q.setFromMatrix(Q),E.length=0,T.length=0,A.length=0,L.length=0,J=this.localClippingEnabled,Z=Y.init(this.clippingPlanes,J,e),(S=pt.get(t,e)).init(),c(t,e,R.sortObjects),!0===R.sortObjects&&S.sort(),
//
Z&&Y.beginShadows(),wt.render(T,t,e),ut.setup(E,T,e),Z&&Y.endShadows(),
//
tt.frame++,tt.calls=0,tt.vertices=0,tt.faces=0,tt.points=0,void 0===i&&(i=null),this.setRenderTarget(i),
//
ft.render(S,t,e,n);
// render scene
var r=S.opaque,a=S.transparent;if(t.overrideMaterial){var o=t.overrideMaterial;r.length&&h(r,t,e,o),a.length&&h(a,t,e,o)}else
// opaque pass (front-to-back order)
r.length&&h(r,t,e),
// transparent pass (back-to-front order)
a.length&&h(a,t,e);
// custom renderers
xt.render(A,t,e),yt.render(L,t,e,F),
// Generate mipmap if we're using any kind of mipmap filtering
i&&st.updateRenderTargetMipmap(i),
// Ensure depth buffer writing is enabled so it can be cleared on next render
at.buffers.depth.setTest(!0),at.buffers.depth.setMask(!0),at.buffers.color.setMask(!0),at.setPolygonOffset(!1),_t.enabled&&_t.submitFrame()}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},
// GL state setting
this.setFaceCulling=function(t,e){at.setCullFace(t),at.setFlipSided(e===Ju)},this.allocTextureUnit=
// Textures
function(){var t=G;return t>=rt.maxTextures&&console.warn("THREE.WebGLRenderer: Trying to use "+t+" texture units while this GPU supports only "+rt.maxTextures),G+=1,t},
// this.setTexture2D = setTexture2D;
this.setTexture2D=function(){var t=!1;
// backwards compatibility: peel texture.texture
return function(e,i){e&&e.isWebGLRenderTarget&&(t||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),t=!0),e=e.texture),st.setTexture2D(e,i)}}(),this.setTexture=function(){var t=!1;return function(e,i){t||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),t=!0),st.setTexture2D(e,i)}}(),this.setTextureCube=function(){var t=!1;return function(e,i){
// backwards compatibility: peel texture.texture
e&&e.isWebGLRenderTargetCube&&(t||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),t=!0),e=e.texture),
// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture
// TODO: unify these code paths
e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?
// CompressedTexture can have Array in image :/
// this function alone should take care of cube textures
st.setTextureCube(e,i):
// assumed: texture property of THREE.WebGLRenderTargetCube
st.setTextureCubeDynamic(e,i)}}(),this.getRenderTarget=function(){return C},this.setRenderTarget=function(t){C=t,t&&void 0===ot.get(t).__webglFramebuffer&&st.setupRenderTarget(t);var e=null,i=!1;if(t){var n=ot.get(t).__webglFramebuffer;t.isWebGLRenderTargetCube?(e=n[t.activeCubeFace],i=!0):e=n,F.copy(t.viewport),B.copy(t.scissor),z=t.scissorTest}else F.copy(j).multiplyScalar(k),B.copy(W).multiplyScalar(k),z=X;if(I!==e&&(et.bindFramebuffer(et.FRAMEBUFFER,e),I=e),at.viewport(F),at.scissor(B),at.setScissorTest(z),i){var r=ot.get(t.texture);et.framebufferTexture2D(et.FRAMEBUFFER,et.COLOR_ATTACHMENT0,et.TEXTURE_CUBE_MAP_POSITIVE_X+t.activeCubeFace,r.__webglTexture,t.activeMipMapLevel)}},this.readRenderTargetPixels=function(t,e,i,n,r,a){if(t&&t.isWebGLRenderTarget){var o=ot.get(t).__webglFramebuffer;if(o){var s=!1;o!==I&&(et.bindFramebuffer(et.FRAMEBUFFER,o),s=!0);try{var c=t.texture,h=c.format,l=c.type;if(h!==xp&&bt.convert(h)!==et.getParameter(et.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(l===ap||bt.convert(l)===et.getParameter(et.IMPLEMENTATION_COLOR_READ_TYPE)||l===up&&(nt.get("OES_texture_float")||nt.get("WEBGL_color_buffer_float"))||l===dp&&nt.get("EXT_color_buffer_half_float")))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");et.checkFramebufferStatus(et.FRAMEBUFFER)===et.FRAMEBUFFER_COMPLETE?
// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)
e>=0&&e<=t.width-n&&i>=0&&i<=t.height-r&&et.readPixels(e,i,n,r,bt.convert(h),bt.convert(l),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&et.bindFramebuffer(et.FRAMEBUFFER,I)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
function Ya(t,e){this.name="",this.color=new Fr(t),this.density=void 0!==e?e:25e-5}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
function Za(t,e,i){this.name="",this.color=new Fr(t),this.near=void 0!==e?e:1,this.far=void 0!==i?i:1e3}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Ja(){ea.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */
function Qa(t,e,i,n,r){ea.call(this),this.lensFlares=[],this.positionScreen=new er,this.customUpdateCallback=void 0,void 0!==t&&this.add(t,e,i,n,r)}/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *	uvOffset: new THREE.Vector2(),
 *	uvScale: new THREE.Vector2()
 * }
 */
function Ka(t){Vr.call(this),this.type="SpriteMaterial",this.color=new Fr(16777215),this.map=null,this.rotation=0,this.fog=!1,this.lights=!1,this.setValues(t)}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 */
function $a(t){ea.call(this),this.type="Sprite",this.material=void 0!==t?t:new Ka}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */
function to(){ea.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author michael guerrero / http://realitymeltdown.com
 * @author ikerr / http://verold.com
 */
function eo(t,e){
// use the supplied bone inverses or calculate the inverses
if(
// copy the bone array
t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new ir)}}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author ikerr / http://verold.com
 */
function io(){ea.call(this),this.type="Bone"}/**
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author ikerr / http://verold.com
 */
function no(t,e){Ra.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ir,this.bindMatrixInverse=new ir;var i=new eo(this.initBones());this.bind(i,this.matrixWorld),this.normalizeSkinWeights()}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  linewidth: <float>,
 *  linecap: "round",
 *  linejoin: "round"
 * }
 */
function ro(t){Vr.call(this),this.type="LineBasicMaterial",this.color=new Fr(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(t)}/**
 * @author mrdoob / http://mrdoob.com/
 */
function ao(t,e,i){if(1===i)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new oo(t,e);ea.call(this),this.type="Line",this.geometry=void 0!==t?t:new ba,this.material=void 0!==e?e:new ro({color:16777215*Math.random()})}/**
 * @author mrdoob / http://mrdoob.com/
 */
function oo(t,e){ao.call(this,t,e),this.type="LineSegments"}/**
 * @author mgreter / http://github.com/mgreter
 */
function so(t,e){ao.call(this,t,e),this.type="LineLoop"}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *  size: <float>,
 *  sizeAttenuation: <bool>
 * }
 */
function co(t){Vr.call(this),this.type="PointsMaterial",this.color=new Fr(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.lights=!1,this.setValues(t)}/**
 * @author alteredq / http://alteredqualia.com/
 */
function ho(t,e){ea.call(this),this.type="Points",this.geometry=void 0!==t?t:new ba,this.material=void 0!==e?e:new co({color:16777215*Math.random()})}/**
 * @author mrdoob / http://mrdoob.com/
 */
function lo(){ea.call(this),this.type="Group"}/**
 * @author mrdoob / http://mrdoob.com/
 */
function uo(t,e,i,n,r,a,o,s,c){function h(){requestAnimationFrame(h),t.readyState>=t.HAVE_CURRENT_DATA&&(l.needsUpdate=!0)}Jn.call(this,t,e,i,n,r,a,o,s,c),this.generateMipmaps=!1;var l=this;h()}/**
 * @author alteredq / http://alteredqualia.com/
 */
function po(t,e,i,n,r,a,o,s,c,h,l,u){Jn.call(this,null,a,o,s,c,h,n,r,l,u),this.image={width:e,height:i},this.mipmaps=t,
// no flipping for cube textures
// (also flipping doesn't work for compressed textures )
this.flipY=!1,
// can't generate mipmaps for compressed textures
// mips must be embedded in DDS files
this.generateMipmaps=!1}/**
 * @author Matt DesLauriers / @mattdesl
 * @author atix / arthursilber.de
 */
function fo(t,e,i,n,r,a,o,s,c,h){if((h=void 0!==h?h:Mp)!==Mp&&h!==Ep)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&h===Mp&&(i=cp),void 0===i&&h===Ep&&(i=gp),Jn.call(this,null,n,r,a,o,s,h,i,c),this.image={width:t,height:e},this.magFilter=void 0!==o?o:$d,this.minFilter=void 0!==s?s:$d,this.flipY=!1,this.generateMipmaps=!1}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */
function mo(t){ba.call(this),this.type="WireframeGeometry";
// buffer
var e,i,n,r,a,o,s,c,h,l,u=[],d=[0,0],p={},f=["a","b","c"];
// different logic for Geometry and BufferGeometry
if(t&&t.isGeometry){
// create a data structure that contains all edges without duplicates
var m=t.faces;for(e=0,n=m.length;e<n;e++){var g=m[e];for(i=0;i<3;i++)s=g[f[i]],c=g[f[(i+1)%3]],d[0]=Math.min(s,c),// sorting prevents duplicates
d[1]=Math.max(s,c),void 0===p[h=d[0]+","+d[1]]&&(p[h]={index1:d[0],index2:d[1]})}
// generate vertices
for(h in p)o=p[h],l=t.vertices[o.index1],u.push(l.x,l.y,l.z),l=t.vertices[o.index2],u.push(l.x,l.y,l.z)}else if(t&&t.isBufferGeometry){var v,y,x,b,_,w,M;if(l=new er,null!==t.index){
// create a data structure that contains all eges without duplicates
for(
// indexed BufferGeometry
v=t.attributes.position,y=t.index,0===(x=t.groups).length&&(x=[{start:0,count:y.count,materialIndex:0}]),r=0,a=x.length;r<a;++r)for(e=_=(b=x[r]).start,n=_+b.count;e<n;e+=3)for(i=0;i<3;i++)s=y.getX(e+i),c=y.getX(e+(i+1)%3),d[0]=Math.min(s,c),// sorting prevents duplicates
d[1]=Math.max(s,c),void 0===p[h=d[0]+","+d[1]]&&(p[h]={index1:d[0],index2:d[1]});
// generate vertices
for(h in p)o=p[h],l.fromBufferAttribute(v,o.index1),u.push(l.x,l.y,l.z),l.fromBufferAttribute(v,o.index2),u.push(l.x,l.y,l.z)}else for(
// non-indexed BufferGeometry
e=0,n=(v=t.attributes.position).count/3;e<n;e++)for(i=0;i<3;i++)
// three edges per triangle, an edge is represented as (index1, index2)
// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)
w=3*e+i,l.fromBufferAttribute(v,w),u.push(l.x,l.y,l.z),M=3*e+(i+1)%3,l.fromBufferAttribute(v,M),u.push(l.x,l.y,l.z)}
// build geometry
this.addAttribute("position",new ga(u,3))}/**
 * @author zz85 / https://github.com/zz85
 * @author Mugen87 / https://github.com/Mugen87
 *
 * Parametric Surfaces Geometry
 * based on the brilliant article by @prideout http://prideout.net/blog/?p=44
 */
// ParametricGeometry
function go(t,e,i){sa.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:i},this.fromBufferGeometry(new vo(t,e,i)),this.mergeVertices()}
// ParametricBufferGeometry
function vo(t,e,i){ba.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:i};
// buffers
var n,r,a=[],o=[],s=[],c=[],h=new er,l=new er,u=new er,d=new er,p=new er,f=e+1;for(n=0;n<=i;n++){var m=n/i;for(r=0;r<=e;r++){var g=r/e;
// vertex
l=t(g,m,l),o.push(l.x,l.y,l.z),
// normal
// approximate tangent vectors via finite differences
g-1e-5>=0?(u=t(g-1e-5,m,u),d.subVectors(l,u)):(u=t(g+1e-5,m,u),d.subVectors(u,l)),m-1e-5>=0?(u=t(g,m-1e-5,u),p.subVectors(l,u)):(u=t(g,m+1e-5,u),p.subVectors(u,l)),
// cross product of tangent vectors returns surface normal
h.crossVectors(d,p).normalize(),s.push(h.x,h.y,h.z),
// uv
c.push(g,m)}}
// generate indices
for(n=0;n<i;n++)for(r=0;r<e;r++){var v=n*f+r,y=n*f+r+1,x=(n+1)*f+r+1,b=(n+1)*f+r;
// faces one and two
a.push(v,y,b),a.push(y,x,b)}
// build geometry
this.setIndex(a),this.addAttribute("position",new ga(o,3)),this.addAttribute("normal",new ga(s,3)),this.addAttribute("uv",new ga(c,2))}/**
 * @author clockworkgeek / https://github.com/clockworkgeek
 * @author timothypratley / https://github.com/timothypratley
 * @author WestLangley / http://github.com/WestLangley
 * @author Mugen87 / https://github.com/Mugen87
 */
// PolyhedronGeometry
function yo(t,e,i,n){sa.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:n},this.fromBufferGeometry(new xo(t,e,i,n)),this.mergeVertices()}
// PolyhedronBufferGeometry
function xo(t,e,i,n){function r(t){c.push(t.x,t.y,t.z)}function a(e,i){var n=3*e;i.x=t[n+0],i.y=t[n+1],i.z=t[n+2]}function o(t,e,i,n){n<0&&1===t.x&&(h[e]=t.x-1),0===i.x&&0===i.z&&(h[e]=n/2/Math.PI+.5)}
// Angle around the Y axis, counter-clockwise when looking from above.
function s(t){return Math.atan2(t.z,-t.x)}ba.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:n},i=i||1;
// default buffer data
var c=[],h=[];
// the subdivision creates the vertex buffer data
!
// helper functions
function(t){
// iterate over all faces and apply a subdivison with the given detail value
for(var i=new er,n=new er,o=new er,s=0;s<e.length;s+=3)
// get the vertices of the face
a(e[s+0],i),a(e[s+1],n),a(e[s+2],o),
// perform subdivision
function(t,e,i,n){var a,o,s=Math.pow(2,n),c=[];
// construct all of the vertices for this subdivision
for(a=0;a<=s;a++){c[a]=[];var h=t.clone().lerp(i,a/s),l=e.clone().lerp(i,a/s),u=s-a;for(o=0;o<=u;o++)c[a][o]=0===o&&a===s?h:h.clone().lerp(l,o/u)}
// construct all of the faces
for(a=0;a<s;a++)for(o=0;o<2*(s-a)-1;o++){var d=Math.floor(o/2);o%2==0?(r(c[a][d+1]),r(c[a+1][d]),r(c[a][d])):(r(c[a][d+1]),r(c[a+1][d+1]),r(c[a+1][d]))}}(i,n,o,t)}(n=n||0),
// all vertices should lie on a conceptual sphere with a given radius
function(t){
// iterate over the entire buffer and apply the radius to each vertex
for(var e=new er,i=0;i<c.length;i+=3)e.x=c[i+0],e.y=c[i+1],e.z=c[i+2],e.normalize().multiplyScalar(t),c[i+0]=e.x,c[i+1]=e.y,c[i+2]=e.z}(i),
// finally, create the uv data
function(){for(var t=new er,e=0;e<c.length;e+=3){t.x=c[e+0],t.y=c[e+1],t.z=c[e+2];var i=s(t)/2/Math.PI+.5,n=
// Angle above the XZ plane.
function(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}(t)/Math.PI+.5;h.push(i,1-n)}!function(){for(var t=new er,e=new er,i=new er,n=new er,r=new Zn,a=new Zn,l=new Zn,u=0,d=0;u<c.length;u+=9,d+=6){t.set(c[u+0],c[u+1],c[u+2]),e.set(c[u+3],c[u+4],c[u+5]),i.set(c[u+6],c[u+7],c[u+8]),r.set(h[d+0],h[d+1]),a.set(h[d+2],h[d+3]),l.set(h[d+4],h[d+5]),n.copy(t).add(e).add(i).divideScalar(3);var p=s(n);o(r,d+0,t,p),o(a,d+2,e,p),o(l,d+4,i,p)}}(),function(){
// handle case when face straddles the seam, see #3269
for(var t=0;t<h.length;t+=6){
// uv data of a single face
var e=h[t+0],i=h[t+2],n=h[t+4],r=Math.max(e,i,n),a=Math.min(e,i,n);
// 0.9 is somewhat arbitrary
r>.9&&a<.1&&(e<.2&&(h[t+0]+=1),i<.2&&(h[t+2]+=1),n<.2&&(h[t+4]+=1))}}()}(),
// build non-indexed geometry
this.addAttribute("position",new ga(c,3)),this.addAttribute("normal",new ga(c.slice(),3)),this.addAttribute("uv",new ga(h,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}/**
 * @author timothypratley / https://github.com/timothypratley
 * @author Mugen87 / https://github.com/Mugen87
 */
// TetrahedronGeometry
function bo(t,e){sa.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new _o(t,e)),this.mergeVertices()}
// TetrahedronBufferGeometry
function _o(t,e){xo.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}/**
 * @author timothypratley / https://github.com/timothypratley
 * @author Mugen87 / https://github.com/Mugen87
 */
// OctahedronGeometry
function wo(t,e){sa.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Mo(t,e)),this.mergeVertices()}
// OctahedronBufferGeometry
function Mo(t,e){xo.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}/**
 * @author timothypratley / https://github.com/timothypratley
 * @author Mugen87 / https://github.com/Mugen87
 */
// IcosahedronGeometry
function Eo(t,e){sa.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new To(t,e)),this.mergeVertices()}
// IcosahedronBufferGeometry
function To(t,e){var i=(1+Math.sqrt(5))/2;xo.call(this,[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}/**
 * @author Abe Pazos / https://hamoid.com
 * @author Mugen87 / https://github.com/Mugen87
 */
// DodecahedronGeometry
function So(t,e){sa.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ao(t,e)),this.mergeVertices()}
// DodecahedronBufferGeometry
function Ao(t,e){var i=(1+Math.sqrt(5))/2,n=1/i;xo.call(this,[
// (±1, ±1, ±1)
-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,
// (0, ±1/φ, ±φ)
0,-n,-i,0,-n,i,0,n,-i,0,n,i,
// (±1/φ, ±φ, 0)
-n,-i,0,-n,i,0,n,-i,0,n,i,0,
// (±φ, 0, ±1/φ)
-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}/**
 * @author oosmoxiecode / https://github.com/oosmoxiecode
 * @author WestLangley / https://github.com/WestLangley
 * @author zz85 / https://github.com/zz85
 * @author miningold / https://github.com/miningold
 * @author jonobr1 / https://github.com/jonobr1
 * @author Mugen87 / https://github.com/Mugen87
 *
 */
// TubeGeometry
function Lo(t,e,i,n,r,a){sa.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:n,closed:r},void 0!==a&&console.warn("THREE.TubeGeometry: taper has been removed.");var o=new Ro(t,e,i,n,r);
// expose internals
this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,
// create geometry
this.fromBufferGeometry(o),this.mergeVertices()}
// TubeBufferGeometry
function Ro(t,e,i,n,r){function a(r){
// we use getPointAt to sample evenly distributed points from the given path
var a=t.getPointAt(r/e),s=o.normals[r],u=o.binormals[r];
// generate normals and vertices for the current segment
for(c=0;c<=n;c++){var f=c/n*Math.PI*2,m=Math.sin(f),g=-Math.cos(f);
// normal
l.x=g*s.x+m*u.x,l.y=g*s.y+m*u.y,l.z=g*s.z+m*u.z,l.normalize(),p.push(l.x,l.y,l.z),
// vertex
h.x=a.x+i*l.x,h.y=a.y+i*l.y,h.z=a.z+i*l.z,d.push(h.x,h.y,h.z)}}ba.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:n,closed:r},e=e||64,i=i||1,n=n||8,r=r||!1;var o=t.computeFrenetFrames(e,r);
// expose internals
this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;
// helper variables
var s,c,h=new er,l=new er,u=new Zn,d=[],p=[],f=[],m=[];
// create buffer data
!
// functions
function(){for(s=0;s<e;s++)a(s);
// if the geometry is not closed, generate the last row of vertices and normals
// at the regular position on the given path
//
// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)
a(!1===r?e:0),
// uvs are generated in a separate function.
// this makes it easy compute correct values for closed geometries
function(){for(s=0;s<=e;s++)for(c=0;c<=n;c++)u.x=s/e,u.y=c/n,f.push(u.x,u.y)}(),
// finally create faces
function(){for(c=1;c<=e;c++)for(s=1;s<=n;s++){var t=(n+1)*(c-1)+(s-1),i=(n+1)*c+(s-1),r=(n+1)*c+s,a=(n+1)*(c-1)+s;
// faces
m.push(t,i,a),m.push(i,r,a)}}()}(),
// build geometry
this.setIndex(m),this.addAttribute("position",new ga(d,3)),this.addAttribute("normal",new ga(p,3)),this.addAttribute("uv",new ga(f,2))}/**
 * @author oosmoxiecode
 * @author Mugen87 / https://github.com/Mugen87
 *
 * based on http://www.blackpawn.com/texts/pqtorus/
 */
// TorusKnotGeometry
function Po(t,e,i,n,r,a,o){sa.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:r,q:a},void 0!==o&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new Co(t,e,i,n,r,a)),this.mergeVertices()}
// TorusKnotBufferGeometry
function Co(t,e,i,n,r,a){
// this function calculates the current position on the torus curve
function o(t,e,i,n,r){var a=Math.cos(t),o=Math.sin(t),s=i/e*t,c=Math.cos(s);r.x=n*(2+c)*.5*a,r.y=n*(2+c)*o*.5,r.z=n*Math.sin(s)*.5}ba.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:r,q:a},t=t||100,e=e||40,i=Math.floor(i)||64,n=Math.floor(n)||8,r=r||2,a=a||3;
// buffers
var s,c,h=[],l=[],u=[],d=[],p=new er,f=new er,m=new er,g=new er,v=new er,y=new er,x=new er;
// generate vertices, normals and uvs
for(s=0;s<=i;++s){
// the radian "u" is used to calculate the position on the torus curve of the current tubular segement
var b=s/i*r*Math.PI*2;for(
// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.
// these points are used to create a special "coordinate space", which is necessary to calculate the correct vertex positions
o(b,r,a,t,m),o(b+.01,r,a,t,g),
// calculate orthonormal basis
y.subVectors(g,m),x.addVectors(g,m),v.crossVectors(y,x),x.crossVectors(v,y),
// normalize B, N. T can be ignored, we don't use it
v.normalize(),x.normalize(),c=0;c<=n;++c){
// now calculate the vertices. they are nothing more than an extrusion of the torus curve.
// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.
var _=c/n*Math.PI*2,w=-e*Math.cos(_),M=e*Math.sin(_);
// now calculate the final vertex position.
// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve
p.x=m.x+(w*x.x+M*v.x),p.y=m.y+(w*x.y+M*v.y),p.z=m.z+(w*x.z+M*v.z),l.push(p.x,p.y,p.z),
// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)
f.subVectors(p,m).normalize(),u.push(f.x,f.y,f.z),
// uv
d.push(s/i),d.push(c/n)}}
// generate indices
for(c=1;c<=i;c++)for(s=1;s<=n;s++){
// indices
var E=(n+1)*(c-1)+(s-1),T=(n+1)*c+(s-1),S=(n+1)*c+s,A=(n+1)*(c-1)+s;
// faces
h.push(E,T,A),h.push(T,S,A)}
// build geometry
this.setIndex(h),this.addAttribute("position",new ga(l,3)),this.addAttribute("normal",new ga(u,3)),this.addAttribute("uv",new ga(d,2))}/**
 * @author oosmoxiecode
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */
// TorusGeometry
function Io(t,e,i,n,r){sa.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},this.fromBufferGeometry(new Uo(t,e,i,n,r)),this.mergeVertices()}
// TorusBufferGeometry
function Uo(t,e,i,n,r){ba.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},t=t||100,e=e||40,i=Math.floor(i)||8,n=Math.floor(n)||6,r=r||2*Math.PI;
// buffers
var a,o,s=[],c=[],h=[],l=[],u=new er,d=new er,p=new er;
// generate vertices, normals and uvs
for(a=0;a<=i;a++)for(o=0;o<=n;o++){var f=o/n*r,m=a/i*Math.PI*2;
// vertex
d.x=(t+e*Math.cos(m))*Math.cos(f),d.y=(t+e*Math.cos(m))*Math.sin(f),d.z=e*Math.sin(m),c.push(d.x,d.y,d.z),
// normal
u.x=t*Math.cos(f),u.y=t*Math.sin(f),p.subVectors(d,u).normalize(),h.push(p.x,p.y,p.z),
// uv
l.push(o/n),l.push(a/i)}
// generate indices
for(a=1;a<=i;a++)for(o=1;o<=n;o++){
// indices
var g=(n+1)*a+o-1,v=(n+1)*(a-1)+o-1,y=(n+1)*(a-1)+o,x=(n+1)*a+o;
// faces
s.push(g,v,x),s.push(v,y,x)}
// build geometry
this.setIndex(s),this.addAttribute("position",new ga(c,3)),this.addAttribute("normal",new ga(h,3)),this.addAttribute("uv",new ga(l,2))}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 *
 * Creates extruded geometry from a path shape.
 *
 * parameters = {
 *
 *  curveSegments: <int>, // number of points on the curves
 *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too
 *  amount: <int>, // Depth to extrude the shape
 *
 *  bevelEnabled: <bool>, // turn on bevel
 *  bevelThickness: <float>, // how deep into the original shape bevel goes
 *  bevelSize: <float>, // how far from shape outline is bevel
 *  bevelSegments: <int>, // number of bevel layers
 *
 *  extrudePath: <THREE.Curve> // curve to extrude shape along
 *  frames: <Object> // containing arrays of tangents, normals, binormals
 *
 *  UVGenerator: <Object> // object that provides UV generator functions
 *
 * }
 */
// ExtrudeGeometry
function No(t,e){sa.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new Oo(t,e)),this.mergeVertices()}
// ExtrudeBufferGeometry
function Oo(t,e){void 0!==t&&(ba.call(this),this.type="ExtrudeBufferGeometry",t=Array.isArray(t)?t:[t],this.addShapeList(t,e),this.computeVertexNormals())}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author alteredq / http://alteredqualia.com/
 *
 * Text = 3D Text
 *
 * parameters = {
 *  font: <THREE.Font>, // font
 *
 *  size: <float>, // size of the text
 *  height: <float>, // thickness to extrude text
 *  curveSegments: <int>, // number of points on the curves
 *
 *  bevelEnabled: <bool>, // turn on bevel
 *  bevelThickness: <float>, // how deep into text bevel goes
 *  bevelSize: <float> // how far from text outline is bevel
 * }
 */
// TextGeometry
function Do(t,e){sa.call(this),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new Fo(t,e)),this.mergeVertices()}
// TextBufferGeometry
function Fo(t,e){var i=(e=e||{}).font;if(!i||!i.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new sa;var n=i.generateShapes(t,e.size,e.curveSegments);
// translate parameters to ExtrudeGeometry API
e.amount=void 0!==e.height?e.height:50,
// defaults
void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),Oo.call(this,n,e),this.type="TextBufferGeometry"}/**
 * @author mrdoob / http://mrdoob.com/
 * @author benaadams / https://twitter.com/ben_a_adams
 * @author Mugen87 / https://github.com/Mugen87
 */
// SphereGeometry
function Bo(t,e,i,n,r,a,o){sa.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new zo(t,e,i,n,r,a,o)),this.mergeVertices()}
// SphereBufferGeometry
function zo(t,e,i,n,r,a,o){ba.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:a,thetaLength:o},t=t||50,e=Math.max(3,Math.floor(e)||8),i=Math.max(2,Math.floor(i)||6),n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI;var s,c,h=(a=void 0!==a?a:0)+(o=void 0!==o?o:Math.PI),l=0,u=[],d=new er,p=new er,f=[],m=[],g=[],v=[];
// generate vertices, normals and uvs
for(c=0;c<=i;c++){var y=[],x=c/i;for(s=0;s<=e;s++){var b=s/e;
// vertex
d.x=-t*Math.cos(n+b*r)*Math.sin(a+x*o),d.y=t*Math.cos(a+x*o),d.z=t*Math.sin(n+b*r)*Math.sin(a+x*o),m.push(d.x,d.y,d.z),
// normal
p.set(d.x,d.y,d.z).normalize(),g.push(p.x,p.y,p.z),
// uv
v.push(b,1-x),y.push(l++)}u.push(y)}
// indices
for(c=0;c<i;c++)for(s=0;s<e;s++){var _=u[c][s+1],w=u[c][s],M=u[c+1][s],E=u[c+1][s+1];(0!==c||a>0)&&f.push(_,w,E),(c!==i-1||h<Math.PI)&&f.push(w,M,E)}
// build geometry
this.setIndex(f),this.addAttribute("position",new ga(m,3)),this.addAttribute("normal",new ga(g,3)),this.addAttribute("uv",new ga(v,2))}/**
 * @author Kaleb Murphy
 * @author Mugen87 / https://github.com/Mugen87
 */
// RingGeometry
function Go(t,e,i,n,r,a){sa.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:a},this.fromBufferGeometry(new Ho(t,e,i,n,r,a)),this.mergeVertices()}
// RingBufferGeometry
function Ho(t,e,i,n,r,a){ba.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:a},t=t||20,e=e||50,r=void 0!==r?r:0,a=void 0!==a?a:2*Math.PI,i=void 0!==i?Math.max(3,i):8;
// buffers
var o,s,c,h=[],l=[],u=[],d=[],p=t,f=(e-t)/(n=void 0!==n?Math.max(1,n):1),m=new er,g=new Zn;
// generate vertices, normals and uvs
for(s=0;s<=n;s++){for(c=0;c<=i;c++)
// values are generate from the inside of the ring to the outside
o=r+c/i*a,
// vertex
m.x=p*Math.cos(o),m.y=p*Math.sin(o),l.push(m.x,m.y,m.z),
// normal
u.push(0,0,1),
// uv
g.x=(m.x/e+1)/2,g.y=(m.y/e+1)/2,d.push(g.x,g.y);
// increase the radius for next row of vertices
p+=f}
// indices
for(s=0;s<n;s++){var v=s*(i+1);for(c=0;c<i;c++){var y=o=c+v,x=o+i+1,b=o+i+2,_=o+1;
// faces
h.push(y,x,_),h.push(x,b,_)}}
// build geometry
this.setIndex(h),this.addAttribute("position",new ga(l,3)),this.addAttribute("normal",new ga(u,3)),this.addAttribute("uv",new ga(d,2))}/**
 * @author astrodud / http://astrodud.isgreat.org/
 * @author zz85 / https://github.com/zz85
 * @author bhouston / http://clara.io
 * @author Mugen87 / https://github.com/Mugen87
 */
// LatheGeometry
function Vo(t,e,i,n){sa.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:n},this.fromBufferGeometry(new ko(t,e,i,n)),this.mergeVertices()}
// LatheBufferGeometry
function ko(t,e,i,n){ba.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:n},e=Math.floor(e)||12,i=i||0,n=n||2*Math.PI,
// clamp phiLength so it's in range of [ 0, 2PI ]
n=Yp.clamp(n,0,2*Math.PI);
// buffers
var r,a,o,s=[],c=[],h=[],l=1/e,u=new er,d=new Zn;
// generate vertices and uvs
for(a=0;a<=e;a++){var p=i+a*l*n,f=Math.sin(p),m=Math.cos(p);for(o=0;o<=t.length-1;o++)
// vertex
u.x=t[o].x*f,u.y=t[o].y,u.z=t[o].x*m,c.push(u.x,u.y,u.z),
// uv
d.x=a/e,d.y=o/(t.length-1),h.push(d.x,d.y)}
// indices
for(a=0;a<e;a++)for(o=0;o<t.length-1;o++){var g=r=o+a*t.length,v=r+t.length,y=r+t.length+1,x=r+1;
// faces
s.push(g,v,x),s.push(v,y,x)}
// if the geometry is closed, we need to average the normals along the seam.
// because the corresponding vertices are identical (but still have different UVs).
if(
// build geometry
this.setIndex(s),this.addAttribute("position",new ga(c,3)),this.addAttribute("uv",new ga(h,2)),
// generate normals
this.computeVertexNormals(),n===2*Math.PI){var b=this.attributes.normal.array,_=new er,w=new er,M=new er;for(
// this is the buffer offset for the last line of vertices
r=e*t.length*3,a=0,o=0;a<t.length;a++,o+=3)
// select the normal of the vertex in the first line
_.x=b[o+0],_.y=b[o+1],_.z=b[o+2],
// select the normal of the vertex in the last line
w.x=b[r+o+0],w.y=b[r+o+1],w.z=b[r+o+2],
// average normals
M.addVectors(_,w).normalize(),
// assign the new values to both normals
b[o+0]=b[r+o+0]=M.x,b[o+1]=b[r+o+1]=M.y,b[o+2]=b[r+o+2]=M.z}}/**
 * @author jonobr1 / http://jonobr1.com
 * @author Mugen87 / https://github.com/Mugen87
 */
// ShapeGeometry
function jo(t,e){sa.call(this),this.type="ShapeGeometry","object"==typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new Wo(t,e)),this.mergeVertices()}
// ShapeBufferGeometry
function Wo(t,e){
// helper functions
function i(t){var i,s,h,l=r.length/3,u=t.extractPoints(e),d=u.shape,p=u.holes;
// check direction of vertices
if(!1===pf.isClockWise(d))
// also check if holes are in the opposite direction
for(d=d.reverse(),i=0,s=p.length;i<s;i++)h=p[i],!0===pf.isClockWise(h)&&(p[i]=h.reverse());var f=pf.triangulateShape(d,p);
// join vertices of inner and outer paths to a single array
for(i=0,s=p.length;i<s;i++)h=p[i],d=d.concat(h);
// vertices, normals, uvs
for(i=0,s=d.length;i<s;i++){var m=d[i];r.push(m.x,m.y,0),a.push(0,0,1),o.push(m.x,m.y)}
// incides
for(i=0,s=f.length;i<s;i++){var g=f[i],v=g[0]+l,y=g[1]+l,x=g[2]+l;n.push(v,y,x),c+=3}}ba.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;
// buffers
var n=[],r=[],a=[],o=[],s=0,c=0;
// allow single and array values for "shapes" parameter
if(!1===Array.isArray(t))i(t);else for(var h=0;h<t.length;h++)i(t[h]),this.addGroup(s,c,h),// enables MultiMaterial support
s+=c,c=0;
// build geometry
this.setIndex(n),this.addAttribute("position",new ga(r,3)),this.addAttribute("normal",new ga(a,3)),this.addAttribute("uv",new ga(o,2))}/**
 * @author WestLangley / http://github.com/WestLangley
 * @author Mugen87 / https://github.com/Mugen87
 */
function Xo(t,e){ba.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;
// buffer
var i,n,r,a,o=[],s=Math.cos(Yp.DEG2RAD*e),c=[0,0],h={},l=["a","b","c"];t.isBufferGeometry?(a=new sa).fromBufferGeometry(t):a=t.clone(),a.mergeVertices(),a.computeFaceNormals();
// now create a data structure where each entry represents an edge with its adjoining faces
for(var u=a.vertices,d=a.faces,p=0,f=d.length;p<f;p++)for(var m=d[p],g=0;g<3;g++)i=m[l[g]],n=m[l[(g+1)%3]],c[0]=Math.min(i,n),c[1]=Math.max(i,n),void 0===h[r=c[0]+","+c[1]]?h[r]={index1:c[0],index2:c[1],face1:p,face2:void 0}:h[r].face2=p;
// generate vertices
for(r in h){var v=h[r];
// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.
if(void 0===v.face2||d[v.face1].normal.dot(d[v.face2].normal)<=s){var y=u[v.index1];o.push(y.x,y.y,y.z),y=u[v.index2],o.push(y.x,y.y,y.z)}}
// build geometry
this.addAttribute("position",new ga(o,3))}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */
// CylinderGeometry
function qo(t,e,i,n,r,a,o,s){sa.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:n,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new Yo(t,e,i,n,r,a,o,s)),this.mergeVertices()}
// CylinderBufferGeometry
function Yo(t,e,i,n,r,a,o,s){function c(i){var r,a,c,m=new Zn,y=new er,x=0,b=!0===i?t:e,_=!0===i?1:-1;
// first we generate the center vertex data of the cap.
// because the geometry needs one set of uvs per face,
// we must generate a center vertex per face/segment
for(
// save the index of the first center vertex
a=f,r=1;r<=n;r++)
// vertex
u.push(0,g*_,0),
// normal
d.push(0,_,0),
// uv
p.push(.5,.5),
// increase index
f++;
// now we generate the surrounding vertices, normals and uvs
for(
// save the index of the last center vertex
c=f,r=0;r<=n;r++){var w=r/n*s+o,M=Math.cos(w),E=Math.sin(w);
// vertex
y.x=b*E,y.y=g*_,y.z=b*M,u.push(y.x,y.y,y.z),
// normal
d.push(0,_,0),
// uv
m.x=.5*M+.5,m.y=.5*E*_+.5,p.push(m.x,m.y),
// increase index
f++}
// generate indices
for(r=0;r<n;r++){var T=a+r,S=c+r;!0===i?
// face top
l.push(S,S+1,T):
// face bottom
l.push(S+1,S,T),x+=3}
// add a group to the geometry. this will ensure multi material support
h.addGroup(v,x,!0===i?1:2),
// calculate new start value for groups
v+=x}ba.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:n,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:s};var h=this;t=void 0!==t?t:20,e=void 0!==e?e:20,i=void 0!==i?i:100,n=Math.floor(n)||8,r=Math.floor(r)||1,a=void 0!==a&&a,o=void 0!==o?o:0,s=void 0!==s?s:2*Math.PI;
// buffers
var l=[],u=[],d=[],p=[],f=0,m=[],g=i/2,v=0;
// generate geometry
!function(){var a,c,y=new er,x=new er,b=0,_=(e-t)/i;
// generate vertices, normals and uvs
for(c=0;c<=r;c++){var w=[],M=c/r,E=M*(e-t)+t;for(a=0;a<=n;a++){var T=a/n,S=T*s+o,A=Math.sin(S),L=Math.cos(S);
// vertex
x.x=E*A,x.y=-M*i+g,x.z=E*L,u.push(x.x,x.y,x.z),
// normal
y.set(A,_,L).normalize(),d.push(y.x,y.y,y.z),
// uv
p.push(T,1-M),
// save index of vertex in respective row
w.push(f++)}
// now save vertices of the row in our index array
m.push(w)}
// generate indices
for(a=0;a<n;a++)for(c=0;c<r;c++){
// we use the index array to access the correct indices
var R=m[c][a],P=m[c+1][a],C=m[c+1][a+1],I=m[c][a+1];
// faces
l.push(R,P,I),l.push(P,C,I),
// update group counter
b+=6}
// add a group to the geometry. this will ensure multi material support
h.addGroup(v,b,0),
// calculate new start value for groups
v+=b}(),!1===a&&(t>0&&c(!0),e>0&&c(!1)),
// build geometry
this.setIndex(l),this.addAttribute("position",new ga(u,3)),this.addAttribute("normal",new ga(d,3)),this.addAttribute("uv",new ga(p,2))}/**
 * @author abelnation / http://github.com/abelnation
 */
// ConeGeometry
function Zo(t,e,i,n,r,a,o){qo.call(this,0,t,e,i,n,r,a,o),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:a,thetaLength:o}}
// ConeBufferGeometry
function Jo(t,e,i,n,r,a,o){Yo.call(this,0,t,e,i,n,r,a,o),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:a,thetaLength:o}}/**
 * @author benaadams / https://twitter.com/ben_a_adams
 * @author Mugen87 / https://github.com/Mugen87
 * @author hughes
 */
// CircleGeometry
function Qo(t,e,i,n){sa.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:n},this.fromBufferGeometry(new Ko(t,e,i,n)),this.mergeVertices()}
// CircleBufferGeometry
function Ko(t,e,i,n){ba.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:n},t=t||50,e=void 0!==e?Math.max(3,e):8,i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI;
// buffers
var r,a,o=[],s=[],c=[],h=[],l=new er,u=new Zn;for(
// center point
s.push(0,0,0),c.push(0,0,1),h.push(.5,.5),a=0,r=3;a<=e;a++,r+=3){var d=i+a/e*n;
// vertex
l.x=t*Math.cos(d),l.y=t*Math.sin(d),s.push(l.x,l.y,l.z),
// normal
c.push(0,0,1),
// uvs
u.x=(s[r]/t+1)/2,u.y=(s[r+1]/t+1)/2,h.push(u.x,u.y)}
// indices
for(r=1;r<=e;r++)o.push(r,r+1,0);
// build geometry
this.setIndex(o),this.addAttribute("position",new ga(s,3)),this.addAttribute("normal",new ga(c,3)),this.addAttribute("uv",new ga(h,2))}/**
 * @author mrdoob / http://mrdoob.com/
 *
 * parameters = {
 *  color: <THREE.Color>,
 *  opacity: <float>
 * }
 */
function $o(t){Vr.call(this),this.type="ShadowMaterial",this.color=new Fr(0),this.opacity=1,this.lights=!0,this.transparent=!0,this.setValues(t)}/**
 * @author mrdoob / http://mrdoob.com/
 */
function ts(t){kr.call(this,t),this.type="RawShaderMaterial"}/**
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *  color: <hex>,
 *  roughness: <float>,
 *  metalness: <float>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  roughnessMap: new THREE.Texture( <Image> ),
 *
 *  metalnessMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  envMapIntensity: <float>
 *
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */
function es(t){Vr.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Fr(16777215),// diffuse
this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Fr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new Zn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}/**
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *  reflectivity: <float>
 * }
 */
function is(t){es.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,// maps to F0 = 0.04
this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(t)}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  specular: <hex>,
 *  shininess: <float>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */
function ns(t){Vr.call(this),this.type="MeshPhongMaterial",this.color=new Fr(16777215),// diffuse
this.specular=new Fr(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Fr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new Zn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Od,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}/**
 * @author takahirox / http://github.com/takahirox
 *
 * parameters = {
 *  gradientMap: new THREE.Texture( <Image> )
 * }
 */
function rs(t){ns.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(t)}/**
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 *
 * parameters = {
 *  opacity: <float>,
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */
function as(t){Vr.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new Zn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */
function os(t){Vr.call(this),this.type="MeshLambertMaterial",this.color=new Fr(16777215),// diffuse
this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Fr(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Od,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}/**
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  linewidth: <float>,
 *
 *  scale: <float>,
 *  dashSize: <float>,
 *  gapSize: <float>
 * }
 */
function ss(t){ro.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}/**
 * @author mrdoob / http://mrdoob.com/
 */
function cs(t,e,i){var n=this,r=!1,a=0,o=0;this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){o++,!1===r&&void 0!==n.onStart&&n.onStart(t,a,o),r=!0},this.itemEnd=function(t){a++,void 0!==n.onProgress&&n.onProgress(t,a,o),a===o&&(r=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(t){void 0!==n.onError&&n.onError(t)}}/**
 * @author mrdoob / http://mrdoob.com/
 */
function hs(t){this.manager=void 0!==t?t:vf}/**
 * @author mrdoob / http://mrdoob.com/
 *
 * Abstract Base class to block based textures loader (dds, pvr, ...)
 */
function ls(t){this.manager=void 0!==t?t:vf,
// override in sub classes
this._parser=null}/**
 * @author Nikos M. / https://github.com/foo123/
 *
 * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)
 */
function us(t){this.manager=void 0!==t?t:vf,
// override in sub classes
this._parser=null}/**
 * @author mrdoob / http://mrdoob.com/
 */
function ds(t){this.manager=void 0!==t?t:vf}/**
 * @author mrdoob / http://mrdoob.com/
 */
function ps(t){this.manager=void 0!==t?t:vf}/**
 * @author mrdoob / http://mrdoob.com/
 */
function fs(t){this.manager=void 0!==t?t:vf}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
function ms(t,e){ea.call(this),this.type="Light",this.color=new Fr(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}/**
 * @author alteredq / http://alteredqualia.com/
 */
function gs(t,e,i){ms.call(this,t,i),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(ea.DefaultUp),this.updateMatrix(),this.groundColor=new Fr(e)}/**
 * @author mrdoob / http://mrdoob.com/
 */
function vs(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new Zn(512,512),this.map=null,this.matrix=new ir}/**
 * @author mrdoob / http://mrdoob.com/
 */
function ys(){vs.call(this,new ra(50,1,.5,500))}/**
 * @author alteredq / http://alteredqualia.com/
 */
function xs(t,e,i,n,r,a){ms.call(this,t,e),this.type="SpotLight",this.position.copy(ea.DefaultUp),this.updateMatrix(),this.target=new ea,Object.defineProperty(this,"power",{get:function(){
// intensity = power per solid angle.
// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
return this.intensity*Math.PI},set:function(t){
// intensity = power per solid angle.
// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
this.intensity=t/Math.PI}}),this.distance=void 0!==i?i:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==r?r:0,this.decay=void 0!==a?a:1,// for physically correct lights, should be 2.
this.shadow=new ys}/**
 * @author mrdoob / http://mrdoob.com/
 */
function bs(t,e,i,n){ms.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){
// intensity = power per solid angle.
// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
return 4*this.intensity*Math.PI},set:function(t){
// intensity = power per solid angle.
// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf
this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==i?i:0,this.decay=void 0!==n?n:1,// for physically correct lights, should be 2.
this.shadow=new vs(new ra(90,1,.5,500))}/**
 * @author mrdoob / http://mrdoob.com/
 */
function _s(){vs.call(this,new na(-5,5,5,-5,.5,500))}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
function ws(t,e){ms.call(this,t,e),this.type="DirectionalLight",this.position.copy(ea.DefaultUp),this.updateMatrix(),this.target=new ea,this.shadow=new _s}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Ms(t,e){ms.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}/**
 * @author abelnation / http://github.com/abelnation
 */
function Es(t,e,i,n){ms.call(this,t,e),this.type="RectAreaLight",this.position.set(0,1,0),this.updateMatrix(),this.width=void 0!==i?i:10,this.height=void 0!==n?n:10}/**
 * Abstract base class of interpolants over parametric samples.
 *
 * The parameter domain is one dimensional, typically the time or a path
 * along a curve defined by the data.
 *
 * The sample values can have any dimensionality and derived classes may
 * apply special interpretations to the data.
 *
 * This class provides the interval seek in a Template Method, deferring
 * the actual interpolation to derived classes.
 *
 * Time complexity is O(1) for linear access crossing at most two points
 * and O(log N) for random access, where N is the number of positions.
 *
 * References:
 *
 * 		http://www.oodesign.com/template-method-pattern.html
 *
 * @author tschw
 */
function Ts(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i}/**
 * Fast and simple cubic spline interpolant.
 *
 * It was derived from a Hermitian construction setting the first derivative
 * at each sample position to the linear slope between neighboring positions
 * over their parameter interval.
 *
 * @author tschw
 */
function Ss(t,e,i,n){Ts.call(this,t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}/**
 * @author tschw
 */
function As(t,e,i,n){Ts.call(this,t,e,i,n)}/**
 *
 * Interpolant that evaluates to the sample value at the position preceeding
 * the parameter.
 *
 * @author tschw
 */
function Ls(t,e,i,n){Ts.call(this,t,e,i,n)}function Rs(t,e,i,n){if(void 0===t)throw new Error("track name is undefined");if(void 0===e||0===e.length)throw new Error("no keyframes in track named "+t);this.name=t,this.times=yf.convertArray(e,this.TimeBufferType),this.values=yf.convertArray(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation),this.validate(),this.optimize()}/**
 *
 * A Track of vectored keyframe values.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function Ps(t,e,i,n){Rs.call(this,t,e,i,n)}/**
 * Spherical linear unit quaternion interpolant.
 *
 * @author tschw
 */
function Cs(t,e,i,n){Ts.call(this,t,e,i,n)}/**
 *
 * A Track of quaternion keyframe values.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function Is(t,e,i,n){Rs.call(this,t,e,i,n)}/**
 *
 * A Track of numeric keyframe values.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function Us(t,e,i,n){Rs.call(this,t,e,i,n)}/**
 *
 * A Track that interpolates Strings
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function Ns(t,e,i,n){Rs.call(this,t,e,i,n)}/**
 *
 * A Track of Boolean keyframe values.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function Os(t,e,i){Rs.call(this,t,e,i)}/**
 *
 * A Track of keyframe values that represent color.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function Ds(t,e,i,n){Rs.call(this,t,e,i,n)}/**
 *
 * A timed sequence of keyframes for a specific property.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function Fs(t,e,i,n){Rs.apply(this,arguments)}/**
 *
 * Reusable set of Tracks that represent an animation.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 */
function Bs(t,e,i){this.name=t,this.tracks=i,this.duration=void 0!==e?e:-1,this.uuid=Yp.generateUUID(),
// this means it should figure out its duration by scanning the tracks
this.duration<0&&this.resetDuration(),this.optimize()}/**
 * @author mrdoob / http://mrdoob.com/
 */
function zs(t){this.manager=void 0!==t?t:vf,this.textures={}}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Gs(t){this.manager=void 0!==t?t:vf}/**
 * @author alteredq / http://alteredqualia.com/
 */
function Hs(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
function Vs(t){"boolean"==typeof t&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),t=void 0),this.manager=void 0!==t?t:vf,this.withCredentials=!1}/**
 * @author mrdoob / http://mrdoob.com/
 */
function ks(t){this.manager=void 0!==t?t:vf,this.texturePath=""}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 *
 * Bezier Curves formulas obtained from
 * http://en.wikipedia.org/wiki/Bézier_curve
 */
function js(t,e,i,n,r){var a=.5*(n-e),o=.5*(r-i),s=t*t;return(2*i-2*n+a+o)*(t*s)+(-3*i+3*n-2*a-o)*s+a*t+i}function Ws(t,e,i,n){
//
return function(t,e){var i=1-t;return i*i*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,i)+function(t,e){return t*t*e}(t,n)}function Xs(t,e,i,n,r){
//
return function(t,e){var i=1-t;return i*i*i*e}(t,e)+function(t,e){var i=1-t;return 3*i*i*t*e}(t,i)+function(t,e){return 3*(1-t)*t*t*e}(t,n)+function(t,e){return t*t*t*e}(t,r)}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Extensible curve object
 *
 * Some common of curve methods:
 * .getPoint(t), getTangent(t)
 * .getPointAt(u), getTangentAt(u)
 * .getPoints(), .getSpacedPoints()
 * .getLength()
 * .updateArcLengths()
 *
 * This following curves inherit from THREE.Curve:
 *
 * -- 2D curves --
 * THREE.ArcCurve
 * THREE.CubicBezierCurve
 * THREE.EllipseCurve
 * THREE.LineCurve
 * THREE.QuadraticBezierCurve
 * THREE.SplineCurve
 *
 * -- 3D curves --
 * THREE.CatmullRomCurve3
 * THREE.CubicBezierCurve3
 * THREE.LineCurve3
 * THREE.QuadraticBezierCurve3
 *
 * A series of curves can be represented as a THREE.CurvePath.
 *
 **/
/**************************************************************
 *	Abstract Curve base class
 **************************************************************/
function qs(){this.arcLengthDivisions=200}function Ys(t,e){qs.call(this),this.v1=t,this.v2=e}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 *
 **/
/**************************************************************
 *	Curved Path - a curve path is simply a array of connected
 *  curves, but retains the api of a curve
 **************************************************************/
function Zs(){qs.call(this),this.curves=[],this.autoClose=!1}function Js(t,e,i,n,r,a,o,s){qs.call(this),this.aX=t,this.aY=e,this.xRadius=i,this.yRadius=n,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=o,this.aRotation=s||0}function Qs(t){qs.call(this),this.points=void 0===t?[]:t}function Ks(t,e,i,n){qs.call(this),this.v0=t,this.v1=e,this.v2=i,this.v3=n}function $s(t,e,i){qs.call(this),this.v0=t,this.v1=e,this.v2=i}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Creates free form 2d path using series of points, lines or curves.
 **/
function tc(t){Zs.call(this),this.currentPoint=new Zn,t&&this.fromPoints(t)}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * Defines a 2d shape plane using paths.
 **/
// STEP 1 Create a path.
// STEP 2 Turn path into shape.
// STEP 3 ExtrudeGeometry takes in Shape/Shapes
// STEP 3a - Extract points from each shape, turn to vertices
// STEP 3b - Triangulate each shape, add faces.
function ec(){tc.apply(this,arguments),this.holes=[]}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * minimal class for proxing functions to Path. Replaces old "extractSubpaths()"
 **/
function ic(){this.subPaths=[],this.currentPath=null}/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author mrdoob / http://mrdoob.com/
 */
function nc(t){this.data=t}/**
 * @author mrdoob / http://mrdoob.com/
 */
function rc(t){this.manager=void 0!==t?t:vf}/**
 * @author Reece Aaron Lecrivain / http://reecenotes.com/
 */
function ac(t){this.manager=void 0!==t?t:vf}/**
 * @author mrdoob / http://mrdoob.com/
 */
function oc(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ra,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ra,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}/**
 * Camera for rendering cube maps
 *	- renders scene into axis-aligned cube
 *
 * @author alteredq / http://alteredqualia.com/
 */
function sc(t,e,i){ea.call(this),this.type="CubeCamera";var n=new ra(90,1,t,e);n.up.set(0,-1,0),n.lookAt(new er(1,0,0)),this.add(n);var r=new ra(90,1,t,e);r.up.set(0,-1,0),r.lookAt(new er(-1,0,0)),this.add(r);var a=new ra(90,1,t,e);a.up.set(0,0,1),a.lookAt(new er(0,1,0)),this.add(a);var o=new ra(90,1,t,e);o.up.set(0,0,-1),o.lookAt(new er(0,-1,0)),this.add(o);var s=new ra(90,1,t,e);s.up.set(0,-1,0),s.lookAt(new er(0,0,1)),this.add(s);var c=new ra(90,1,t,e);c.up.set(0,-1,0),c.lookAt(new er(0,0,-1)),this.add(c);var h={format:yp,magFilter:ip,minFilter:ip};this.renderTarget=new $n(i,i,h),this.renderTarget.texture.name="CubeCamera",this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();var i=this.renderTarget,h=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,i.activeCubeFace=0,t.render(e,n,i),i.activeCubeFace=1,t.render(e,r,i),i.activeCubeFace=2,t.render(e,a,i),i.activeCubeFace=3,t.render(e,o,i),i.activeCubeFace=4,t.render(e,s,i),i.texture.generateMipmaps=h,i.activeCubeFace=5,t.render(e,c,i),t.setRenderTarget(null)},this.clear=function(t,e,i,n){for(var r=this.renderTarget,a=0;a<6;a++)r.activeCubeFace=a,t.setRenderTarget(r),t.clear(e,i,n);t.setRenderTarget(null)}}/**
 * @author mrdoob / http://mrdoob.com/
 */
function cc(){ea.call(this),this.type="AudioListener",this.context=Sf.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Reece Aaron Lecrivain / http://reecenotes.com/
 */
function hc(t){ea.call(this),this.type="Audio",this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.loop=!1,this.startTime=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]}/**
 * @author mrdoob / http://mrdoob.com/
 */
function lc(t){hc.call(this,t),this.panner=this.context.createPanner(),this.panner.connect(this.gain)}/**
 * @author mrdoob / http://mrdoob.com/
 */
function uc(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}/**
 *
 * Buffered scene graph property that allows weighted accumulation.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function dc(t,e,i){this.binding=t,this.valueSize=i;var n,r=Float64Array;switch(e){case"quaternion":n=this._slerp;break;case"string":case"bool":r=Array,n=this._select;break;default:n=this._lerp}this.buffer=new r(4*i),
// layout: [ incoming | accu0 | accu1 | orig ]
//
// interpolators can use .buffer as their .result
// the data then goes to 'incoming'
//
// 'accu0' and 'accu1' are used frame-interleaved for
// the cumulative result and are compared to detect
// changes
//
// 'orig' stores the original state of the property
this._mixBufferRegion=n,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}/**
 *
 * A reference to a real property in the scene graph.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function pc(t,e,i){var n=i||fc.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)}function fc(t,e,i){this.path=e,this.parsedPath=i||fc.parseTrackName(e),this.node=fc.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}/**
 *
 * A group of objects that receives a shared animation state.
 *
 * Usage:
 *
 * 	-	Add objects you would otherwise pass as 'root' to the
 * 		constructor or the .clipAction method of AnimationMixer.
 *
 * 	-	Instead pass this object as 'root'.
 *
 * 	-	You can also add and remove objects later when the mixer
 * 		is running.
 *
 * Note:
 *
 *  	Objects of this class appear as one object to the mixer,
 *  	so cache control of the individual objects must be done
 *  	on the group.
 *
 * Limitation:
 *
 * 	- 	The animated properties must be compatible among the
 * 		all objects in the group.
 *
 *  -	A single property can either be controlled through a
 *  	target group or directly, but not both.
 *
 * @author tschw
 */
function mc(t){this.uuid=Yp.generateUUID(),
// cached objects followed by the active ones
this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;// threshold
// note: read by PropertyBinding.Composite
var e={};this._indicesByUUID=e;// for bookkeeping
for(var i=0,n=arguments.length;i!==n;++i)e[arguments[i].uuid]=i;this._paths=[],// inside: string
this._parsedPaths=[],// inside: { we don't care, here }
this._bindings=[],// inside: Array< PropertyBinding >
this._bindingsIndicesByPath={};// inside: indices in these arrays
var r=this;this.stats={objects:{get total(){return r._objects.length},get inUse(){return this.total-r.nCachedObjects_}},get bindingsPerObject(){return r._bindings.length}}}/**
 *
 * Action provided by AnimationMixer for scheduling clip playback on specific
 * objects.
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 *
 */
function gc(t,e,i){this._mixer=t,this._clip=e,this._localRoot=i||null;for(var n=e.tracks,r=n.length,a=new Array(r),o={endingStart:Op,endingEnd:Op},s=0;s!==r;++s){var c=n[s].createInterpolant(null);a[s]=c,c.settings=o}this._interpolantSettings=o,this._interpolants=a,// bound by the mixer
// inside: PropertyMixer (managed by the mixer)
this._propertyBindings=new Array(r),this._cacheIndex=null,// for the memory manager
this._byClipCacheIndex=null,// for the memory manager
this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Np,this._loopCount=-1,
// global mixer time when the action is to be started
// it's set back to 'null' upon start of the action
this._startTime=null,
// scaled local time of the action
// gets clamped or wrapped to 0..clip.duration according to loop
this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,// no. of repetitions when looping
this.paused=!1,// true -> zero effective time scale
this.enabled=!0,// false -> zero effective weight
this.clampWhenFinished=!1,// keep feeding the last frame?
this.zeroSlopeAtStart=!0,// for smooth interpolation w/o separate
this.zeroSlopeAtEnd=!0}/**
 *
 * Player for AnimationClips.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function vc(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}/**
 * @author mrdoob / http://mrdoob.com/
 */
function yc(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */
function xc(){ba.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */
function bc(t,e,i,n){this.uuid=Yp.generateUUID(),this.data=t,this.itemSize=e,this.offset=i,this.normalized=!0===n}/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */
function _c(t,e){this.uuid=Yp.generateUUID(),this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */
function wc(t,e,i){_c.call(this,t,e),this.meshPerAttribute=i||1}/**
 * @author benaadams / https://twitter.com/ben_a_adams
 */
function Mc(t,e,i){ca.call(this,t,e),this.meshPerAttribute=i||1}/**
 * @author mrdoob / http://mrdoob.com/
 * @author bhouston / http://clara.io/
 * @author stephomi / http://stephaneginier.com/
 */
function Ec(t,e,i,n){this.ray=new Sa(t,e),
// direction is assumed to be normalized (for accurate distance calculations)
this.near=i||0,this.far=n||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Tc(t,e){return t.distance-e.distance}function Sc(t,e,i,n){if(!1!==t.visible&&(t.raycast(e,i),!0===n))for(var r=t.children,a=0,o=r.length;a<o;a++)Sc(r[a],e,i,!0)}/**
 * @author alteredq / http://alteredqualia.com/
 */
function Ac(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}/**
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 *
 * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system
 *
 * The poles (phi) are at the positive and negative y axis.
 * The equator starts at positive z.
 */
function Lc(t,e,i){// around the equator of the sphere
// up / down towards top and bottom pole
return this.radius=void 0!==t?t:1,this.phi=void 0!==e?e:0,this.theta=void 0!==i?i:0,this}/**
 * @author Mugen87 / https://github.com/Mugen87
 *
 * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system
 *
 */
function Rc(t,e,i){// height above the x-z plane
// distance from the origin to a point in the x-z plane
// counterclockwise angle in the x-z plane measured in radians from the positive z-axis
return this.radius=void 0!==t?t:1,this.theta=void 0!==e?e:0,this.y=void 0!==i?i:0,this}/**
 * @author alteredq / http://alteredqualia.com/
 */
function Pc(t){ea.call(this),this.material=t,this.render=function(t){}}/**
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 */
function Cc(t,e,i,n){this.object=t,this.size=void 0!==e?e:1;var r=void 0!==i?i:16711680,a=void 0!==n?n:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=3*s.faces.length:s&&s.isBufferGeometry&&(o=s.attributes.normal.count);
//
var c=new ba,h=new ga(2*o*3,3);c.addAttribute("position",h),oo.call(this,c,new ro({color:r,linewidth:a})),
//
this.matrixAutoUpdate=!1,this.update()}/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 */
function Ic(t,e){ea.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;for(var i=new ba,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],r=0,a=1;r<32;r++,a++){var o=r/32*Math.PI*2,s=a/32*Math.PI*2;n.push(Math.cos(o),Math.sin(o),1,Math.cos(s),Math.sin(s),1)}i.addAttribute("position",new ga(n,3));var c=new ro({fog:!1});this.cone=new oo(i,c),this.add(this.cone),this.update()}/**
 * @author Sean Griffin / http://twitter.com/sgrif
 * @author Michael Guerrero / http://realitymeltdown.com
 * @author mrdoob / http://mrdoob.com/
 * @author ikerr / http://verold.com
 * @author Mugen87 / https://github.com/Mugen87
 */
function Uc(t){var e=[];t&&t.isBone&&e.push(t);for(var i=0;i<t.children.length;i++)e.push.apply(e,Uc(t.children[i]));return e}function Nc(t){for(var e=Uc(t),i=new ba,n=[],r=[],a=new Fr(0,0,1),o=new Fr(0,1,0),s=0;s<e.length;s++){var c=e[s];c.parent&&c.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(a.r,a.g,a.b),r.push(o.r,o.g,o.b))}i.addAttribute("position",new ga(n,3)),i.addAttribute("color",new ga(r,3));var h=new ro({vertexColors:rd,depthTest:!1,depthWrite:!1,transparent:!0});oo.call(this,i,h),this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.onBeforeRender()}/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */
function Oc(t,e,i){this.light=t,this.light.updateMatrixWorld(),this.color=i;var n=new zo(e,4,2),r=new Ta({wireframe:!0,fog:!1});Ra.call(this,n,r),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}/**
 * @author abelnation / http://github.com/abelnation
 * @author Mugen87 / http://github.com/Mugen87
 * @author WestLangley / http://github.com/WestLangley
 */
function Dc(t,e){ea.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;var i=new ro({fog:!1}),n=new ba;n.addAttribute("position",new ca(new Float32Array(15),3)),this.line=new ao(n,i),this.add(this.line),this.update()}/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / https://github.com/Mugen87
 */
function Fc(t,e,i){ea.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;var n=new Mo(e);n.rotateY(.5*Math.PI),this.material=new Ta({wireframe:!0,fog:!1}),void 0===this.color&&(this.material.vertexColors=rd);var r=n.getAttribute("position"),a=new Float32Array(3*r.count);n.addAttribute("color",new ca(a,3)),this.add(new Ra(n,this.material)),this.update()}/**
 * @author mrdoob / http://mrdoob.com/
 */
function Bc(t,e,i,n){t=t||10,e=e||10,i=new Fr(void 0!==i?i:4473924),n=new Fr(void 0!==n?n:8947848);for(var r=e/2,a=t/e,o=t/2,s=[],c=[],h=0,l=0,u=-o;h<=e;h++,u+=a){s.push(-o,0,u,o,0,u),s.push(u,0,-o,u,0,o);var d=h===r?i:n;d.toArray(c,l),l+=3,d.toArray(c,l),l+=3,d.toArray(c,l),l+=3,d.toArray(c,l),l+=3}var p=new ba;p.addAttribute("position",new ga(s,3)),p.addAttribute("color",new ga(c,3));var f=new ro({vertexColors:rd});oo.call(this,p,f)}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / http://github.com/Mugen87
 * @author Hectate / http://www.github.com/Hectate
 */
function zc(t,e,i,n,r,a){t=t||10,e=e||16,i=i||8,n=n||64,r=new Fr(void 0!==r?r:4473924),a=new Fr(void 0!==a?a:8947848);var o,s,c,h,l,u,d,p=[],f=[];
// create the radials
for(h=0;h<=e;h++)c=h/e*(2*Math.PI),o=Math.sin(c)*t,s=Math.cos(c)*t,p.push(0,0,0),p.push(o,0,s),d=1&h?r:a,f.push(d.r,d.g,d.b),f.push(d.r,d.g,d.b);
// create the circles
for(h=0;h<=i;h++)for(d=1&h?r:a,u=t-t/i*h,l=0;l<n;l++)
// first vertex
c=l/n*(2*Math.PI),o=Math.sin(c)*u,s=Math.cos(c)*u,p.push(o,0,s),f.push(d.r,d.g,d.b),
// second vertex
c=(l+1)/n*(2*Math.PI),o=Math.sin(c)*u,s=Math.cos(c)*u,p.push(o,0,s),f.push(d.r,d.g,d.b);var m=new ba;m.addAttribute("position",new ga(p,3)),m.addAttribute("color",new ga(f,3));var g=new ro({vertexColors:rd});oo.call(this,m,g)}/**
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 */
function Gc(t,e,i,n){
// FaceNormalsHelper only supports THREE.Geometry
this.object=t,this.size=void 0!==e?e:1;var r=void 0!==i?i:16776960,a=void 0!==n?n:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=s.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
//
var c=new ba,h=new ga(2*o*3,3);c.addAttribute("position",h),oo.call(this,c,new ro({color:r,linewidth:a})),
//
this.matrixAutoUpdate=!1,this.update()}/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
 */
function Hc(t,e,i){ea.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===e&&(e=1);var n=new ba;n.addAttribute("position",new ga([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));var r=new ro({fog:!1});this.lightPlane=new ao(n,r),this.add(this.lightPlane),(n=new ba).addAttribute("position",new ga([0,0,0,0,0,1],3)),this.targetLine=new ao(n,r),this.add(this.targetLine),this.update()}/**
 * @author alteredq / http://alteredqualia.com/
 * @author Mugen87 / https://github.com/Mugen87
 *
 *	- shows frustum, line of sight and up of the camera
 *	- suitable for fast updates
 * 	- based on frustum visualization in lightgl.js shadowmap example
 *		http://evanw.github.com/lightgl.js/tests/shadowmap.html
 */
function Vc(t){function e(t,e,n){i(t,n),i(e,n)}function i(t,e){a.push(0,0,0),o.push(e.r,e.g,e.b),void 0===s[t]&&(s[t]=[]),s[t].push(a.length/3-1)}var n=new ba,r=new ro({color:16777215,vertexColors:nd}),a=[],o=[],s={},c=new Fr(16755200),h=new Fr(16711680),l=new Fr(43775),u=new Fr(16777215),d=new Fr(3355443);
// near
e("n1","n2",c),e("n2","n4",c),e("n4","n3",c),e("n3","n1",c),
// far
e("f1","f2",c),e("f2","f4",c),e("f4","f3",c),e("f3","f1",c),
// sides
e("n1","f1",c),e("n2","f2",c),e("n3","f3",c),e("n4","f4",c),
// cone
e("p","n1",h),e("p","n2",h),e("p","n3",h),e("p","n4",h),
// up
e("u1","u2",l),e("u2","u3",l),e("u3","u1",l),
// target
e("c","t",u),e("p","c",d),
// cross
e("cn1","cn2",d),e("cn3","cn4",d),e("cf1","cf2",d),e("cf3","cf4",d),n.addAttribute("position",new ga(a,3)),n.addAttribute("color",new ga(o,3)),oo.call(this,n,r),this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}/**
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / http://github.com/Mugen87
 */
function kc(t,e){this.object=t,void 0===e&&(e=16776960);var i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new ba;r.setIndex(new ca(i,1)),r.addAttribute("position",new ca(n,3)),oo.call(this,r,new ro({color:e})),this.matrixAutoUpdate=!1,this.update()}/**
 * @author WestLangley / http://github.com/WestLangley
 */
function jc(t,e){this.type="Box3Helper",this.box=t;var i=void 0!==e?e:16776960,n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new ba;r.setIndex(new ca(n,1)),r.addAttribute("position",new ga([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),oo.call(this,r,new ro({color:i})),this.geometry.computeBoundingSphere(),this.onBeforeRender()}/**
 * @author WestLangley / http://github.com/WestLangley
 */
function Wc(t,e,i){this.type="PlaneHelper",this.plane=t,this.size=void 0===e?1:e;var n=void 0!==i?i:16776960,r=new ba;r.addAttribute("position",new ga([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),ao.call(this,r,new ro({color:n}));
//
var a=new ba;a.addAttribute("position",new ga([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),a.computeBoundingSphere(),this.add(new Ra(a,new Ta({color:n,opacity:.2,transparent:!0,depthWrite:!1}))),
//
this.onBeforeRender()}function Xc(t,e,i,n,r,a){
// dir is assumed to be normalized
ea.call(this),void 0===n&&(n=16776960),void 0===i&&(i=1),void 0===r&&(r=.2*i),void 0===a&&(a=.2*r),void 0===Af&&((Af=new ba).addAttribute("position",new ga([0,0,0,0,1,0],3)),(Lf=new Yo(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(e),this.line=new ao(Af,new ro({color:n})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ra(Lf,new Ta({color:n})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(i,r,a)}/**
 * @author sroucheray / http://sroucheray.org/
 * @author mrdoob / http://mrdoob.com/
 */
function qc(t){var e=[0,0,0,t=t||1,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=new ba;i.addAttribute("position",new ga(e,3)),i.addAttribute("color",new ga([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));var n=new ro({vertexColors:rd});oo.call(this,i,n)}/**
 * @author zz85 https://github.com/zz85
 *
 * Centripetal CatmullRom Curve - which is useful for avoiding
 * cusps and self-intersections in non-uniform catmull rom curves.
 * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf
 *
 * curve.type accepts centripetal(default), chordal and catmullrom
 * curve.tension is used for catmullrom which defaults to 0.5
 */
/*
Based on an optimized c++ solution in
 - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/
 - http://ideone.com/NoEbVM

This CubicPoly class could be used for reusing some variables and calculations,
but for three.js curve use, it could be possible inlined and flatten into a single function call
which can be placed in CurveUtils.
*/
function Yc(){/*
	 * Compute coefficients for a cubic polynomial
	 *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3
	 * such that
	 *   p(0) = x0, p(1) = x1
	 *  and
	 *   p'(0) = t0, p'(1) = t1.
	 */
function t(t,a,o,s){e=t,i=o,n=-3*t+3*a-2*o-s,r=2*t-2*a+o+s}var e=0,i=0,n=0,r=0;return{initCatmullRom:function(e,i,n,r,a){t(i,n,a*(n-e),a*(r-i))},initNonuniformCatmullRom:function(e,i,n,r,a,o,s){
// compute tangents when parameterized in [t1,t2]
var c=(i-e)/a-(n-e)/(a+o)+(n-i)/o,h=(n-i)/o-(r-i)/(o+s)+(r-n)/s;t(i,n,
// rescale tangents for parametrization in [0,1]
c*=o,h*=o)},calc:function(t){var a=t*t;return e+i*t+n*a+r*(a*t)}}}function Zc(t){qs.call(this),t.length<2&&console.warn("THREE.CatmullRomCurve3: Points array needs at least two entries."),this.points=t||[],this.closed=!1}function Jc(t,e,i,n){qs.call(this),this.v0=t,this.v1=e,this.v2=i,this.v3=n}function Qc(t,e,i){qs.call(this),this.v0=t,this.v1=e,this.v2=i}function Kc(t,e){qs.call(this),this.v1=t,this.v2=e}function $c(t,e,i,n,r,a){Js.call(this,t,e,i,i,n,r,a)}
//
function th(t){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Zc.call(this,t),this.type="catmullrom",this.closed=!0}
//
function eh(t){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),Zc.call(this,t),this.type="catmullrom"}
//
function ih(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Zc.call(this,t),this.type="catmullrom"}!function(t,e){if("undefined"==typeof document)return e;t=t||"";var i=document.head||document.getElementsByTagName("head")[0],n=document.createElement("style");n.type="text/css",i.appendChild(n),n.styleSheet?n.styleSheet.cssText=t:n.appendChild(document.createTextNode(t))}(".graph-info-msg {\r\n    position: absolute;\r\n    top: calc(50% - 4px);\r\n    width: 100%;\r\n    text-align: center;\r\n    color: lavender;\r\n    opacity: 0.7;\r\n    font-size: 22px;\r\n}\r\n\r\n.graph-tooltip {\r\n    position: absolute;\r\n    color: lavender;\r\n    font-size: 18px;\r\n}",void 0);"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;var nh=function(t,e){return e={exports:{}},t(e,e.exports),e.exports}(function(t,e){t.exports=function(t){function e(n){if(i[n])return i[n].exports;var r=i[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var i={};return e.m=t,e.c=i,e.d=function(t,i,n){e.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:n})},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=0)}([function(t,e,i){var n,r,a;r=[t,e,i(1)],void 0!==(a="function"==typeof(n=function(t,e,i){Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){var e=t.stateInit,i=void 0===e?{}:e,a=t.props,o=void 0===a?{}:a,s=t.methods,c=void 0===s?{}:s,h=t.init,l=void 0===h?function(){}:h,u=t.update,d=void 0===u?function(){}:u,p=Object.keys(o).map(function(t){return new r(t,o[t])});return function(){function t(i){return a(i,e),o(),t}var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=Object.assign({},i,{initialised:!1}),a=function(e,i){l.call(t,e,r,i),r.initialised=!0},o=(0,n.default)(function(){r.initialised&&d.call(t,r)},1);return p.forEach(function(e){t[e.name]=function(e){var i=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(t,e){};return function(a){return arguments.length?(r[e]=a,n.call(t,a,r),i&&o(),t):r[e]}}(e.name,e.triggerUpdate,e.onChange)}),Object.keys(c).forEach(function(e){t[e]=function(){for(var i,n=arguments.length,a=Array(n),o=0;o<n;o++)a[o]=arguments[o];return(i=c[e]).call.apply(i,[t,r].concat(a))}}),t.resetProps=function(){return p.forEach(function(e){t[e.name](e.defaultVal)}),t},t.resetProps(),r._rerender=o,t}};var n=function(t){return t&&t.__esModule?t:{default:t}}(i),r=function t(e,i){var n=i.default,r=void 0===n?null:n,a=i.triggerUpdate,o=void 0===a||a,s=i.onChange,c=void 0===s?function(t,e){}:s;(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")})(this,t),this.name=e,this.defaultVal=r,this.triggerUpdate=o,this.onChange=c};t.exports=e.default})?n.apply(e,r):n)&&(t.exports=a)},function(t,e){t.exports=function(t,e,i){function n(){var h=Date.now()-s;h<e&&h>=0?r=setTimeout(n,e-h):(r=null,i||(c=t.apply(o,a),o=a=null))}var r,a,o,s,c;null==e&&(e=100);var h=function(){o=this,a=arguments,s=Date.now();var h=i&&!r;return r||(r=setTimeout(n,e)),h&&(c=t.apply(o,a),o=a=null),c};return h.clear=function(){r&&(clearTimeout(r),r=null)},h}}])}),rh=function(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}(nh);nh.Kapsule;
// Polyfills
void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(
// Missing in IE
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger
Number.isInteger=function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t}),
//
void 0===Math.sign&&(
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign
Math.sign=function(t){return t<0?-1:t>0?1:+t}),"name"in Function.prototype==!1&&
// Missing in IE
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name
Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(t){if(void 0===t||null===t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),i=1;i<arguments.length;i++){var n=arguments[i];if(void 0!==n&&null!==n)for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}),Object.assign(t.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var i=this._listeners[t];if(void 0!==i){var n=i.indexOf(e);-1!==n&&i.splice(n,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var i=e.slice(0),n=0,r=i.length;n<r;n++)i[n].call(this,t)}}}});var ah="88",oh=0,sh=1,ch=2,hh=0,lh=1,uh=2,dh=0,ph=1,fh=2,mh=0,gh=1,vh=2,yh=0,xh=1,bh=2,_h=3,wh=4,Mh=5,Eh=100,Th=101,Sh=102,Ah=103,Lh=104,Rh=200,Ph=201,Ch=202,Ih=203,Uh=204,Nh=205,Oh=206,Dh=207,Fh=208,Bh=209,zh=210,Gh=0,Hh=1,Vh=2,kh=3,jh=4,Wh=5,Xh=6,qh=7,Yh=0,Zh=1,Jh=2,Qh=0,Kh=1,$h=2,tl=3,el=4,il=301,nl=302,rl=303,al=304,ol=305,sl=306,cl=307,hl=1e3,ll=1001,ul=1002,dl=1003,pl=1004,fl=1005,ml=1006,gl=1007,vl=1008,yl=1009,xl=1010,bl=1011,_l=1012,wl=1013,Ml=1014,El=1015,Tl=1016,Sl=1017,Al=1018,Ll=1019,Rl=1020,Pl=1021,Cl=1022,Il=1023,Ul=1024,Nl=1025,Ol=1026,Dl=1027,Fl=2001,Bl=2002,zl=2003,Gl=2004,Hl=2100,Vl=2101,kl=2102,jl=2103,Wl=2151,Xl=2201,ql=2400,Yl=0,Zl=1,Jl=2,Ql=3e3,Kl=3001,$l=3007,tu=3002,eu=3004,iu=3005,nu=3006,ru=3200,au=3201,ou={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){
// http://www.broofa.com/Tools/Math.uuid.htm
// Replaced .join with string concatenation (@takahirox)
var t,e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=0;return function(){for(var n="",r=0;r<36;r++)8===r||13===r||18===r||23===r?n+="-":14===r?n+="4":(i<=2&&(i=33554432+16777216*Math.random()|0),t=15&i,i>>=4,n+=e[19===r?3&t|8:t]);return n}}(),clamp:function(t,e,i){return Math.max(e,Math.min(i,t))},
// compute euclidian modulo of m % n
// https://en.wikipedia.org/wiki/Modulo_operation
euclideanModulo:function(t,e){return(t%e+e)%e},
// Linear mapping from range <a1, a2> to range <b1, b2>
mapLinear:function(t,e,i,n,r){return n+(t-e)*(r-n)/(i-e)},
// https://en.wikipedia.org/wiki/Linear_interpolation
lerp:function(t,e,i){return(1-i)*t+i*e},
// http://en.wikipedia.org/wiki/Smoothstep
smoothstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},
// Random integer from <low, high> interval
randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},
// Random float from <low, high> interval
randFloat:function(t,e){return t+Math.random()*(e-t)},
// Random float from <-range/2, range/2> interval
randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*ou.DEG2RAD},radToDeg:function(t){return t*ou.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}};Object.defineProperties(e.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}}),Object.assign(e.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){var e=this.x,i=this.y,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6],this.y=n[1]*e+n[4]*i+n[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){
// assumes min < max, componentwise
return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(){var t=new e,i=new e;return function(e,n){return t.set(e,e),i.set(n,n),this.clamp(t,i)}}(),clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){
// computes the angle in radians with respect to the positive x-axis
var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y;return e*e+i*i},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var i=Math.cos(e),n=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*i-a*n+t.x,this.y=r*n+a*i+t.y,this}}),Object.assign(i.prototype,{isMatrix4:!0,set:function(t,e,i,n,r,a,o,s,c,h,l,u,d,p,f,m){var g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=n,g[1]=r,g[5]=a,g[9]=o,g[13]=s,g[2]=c,g[6]=h,g[10]=l,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new i).fromArray(this.elements)},copy:function(t){var e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this},copyPosition:function(t){var e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this},extractBasis:function(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this},extractRotation:function(){var t=new r;return function(e){var i=this.elements,n=e.elements,r=1/t.setFromMatrixColumn(e,0).length(),a=1/t.setFromMatrixColumn(e,1).length(),o=1/t.setFromMatrixColumn(e,2).length();return i[0]=n[0]*r,i[1]=n[1]*r,i[2]=n[2]*r,i[4]=n[4]*a,i[5]=n[5]*a,i[6]=n[6]*a,i[8]=n[8]*o,i[9]=n[9]*o,i[10]=n[10]*o,this}}(),makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,i=t.x,n=t.y,r=t.z,a=Math.cos(i),o=Math.sin(i),s=Math.cos(n),c=Math.sin(n),h=Math.cos(r),l=Math.sin(r);if("XYZ"===t.order){var u=a*h,d=a*l,p=o*h,f=o*l;e[0]=s*h,e[4]=-s*l,e[8]=c,e[1]=d+p*c,e[5]=u-f*c,e[9]=-o*s,e[2]=f-u*c,e[6]=p+d*c,e[10]=a*s}else if("YXZ"===t.order){var m=s*h,g=s*l,v=c*h,y=c*l;e[0]=m+y*o,e[4]=v*o-g,e[8]=a*c,e[1]=a*l,e[5]=a*h,e[9]=-o,e[2]=g*o-v,e[6]=y+m*o,e[10]=a*s}else if("ZXY"===t.order){var m=s*h,g=s*l,v=c*h,y=c*l;e[0]=m-y*o,e[4]=-a*l,e[8]=v+g*o,e[1]=g+v*o,e[5]=a*h,e[9]=y-m*o,e[2]=-a*c,e[6]=o,e[10]=a*s}else if("ZYX"===t.order){var u=a*h,d=a*l,p=o*h,f=o*l;e[0]=s*h,e[4]=p*c-d,e[8]=u*c+f,e[1]=s*l,e[5]=f*c+u,e[9]=d*c-p,e[2]=-c,e[6]=o*s,e[10]=a*s}else if("YZX"===t.order){var x=a*s,b=a*c,_=o*s,w=o*c;e[0]=s*h,e[4]=w-x*l,e[8]=_*l+b,e[1]=l,e[5]=a*h,e[9]=-o*h,e[2]=-c*h,e[6]=b*l+_,e[10]=x-w*l}else if("XZY"===t.order){var x=a*s,b=a*c,_=o*s,w=o*c;e[0]=s*h,e[4]=-l,e[8]=c*h,e[1]=x*l+w,e[5]=a*h,e[9]=b*l-_,e[2]=_*l-b,e[6]=o*h,e[10]=w*l+x}
// last column
// bottom row
return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){var e=this.elements,i=t._x,n=t._y,r=t._z,a=t._w,o=i+i,s=n+n,c=r+r,h=i*o,l=i*s,u=i*c,d=n*s,p=n*c,f=r*c,m=a*o,g=a*s,v=a*c;
// last column
// bottom row
return e[0]=1-(d+f),e[4]=l-v,e[8]=u+g,e[1]=l+v,e[5]=1-(h+f),e[9]=p-m,e[2]=u-g,e[6]=p+m,e[10]=1-(h+d),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var t=new r,e=new r,i=new r;return function(n,r,a){var o=this.elements;
// eye and target are in the same position
// up and z are parallel
return i.subVectors(n,r),0===i.lengthSq()&&(i.z=1),i.normalize(),t.crossVectors(a,i),0===t.lengthSq()&&(1===Math.abs(a.z)?i.x+=1e-4:i.z+=1e-4,i.normalize(),t.crossVectors(a,i)),t.normalize(),e.crossVectors(i,t),o[0]=t.x,o[4]=e.x,o[8]=i.x,o[1]=t.y,o[5]=e.y,o[9]=i.y,o[2]=t.z,o[6]=e.z,o[10]=i.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,n=e.elements,r=this.elements,a=i[0],o=i[4],s=i[8],c=i[12],h=i[1],l=i[5],u=i[9],d=i[13],p=i[2],f=i[6],m=i[10],g=i[14],v=i[3],y=i[7],x=i[11],b=i[15],_=n[0],w=n[4],M=n[8],E=n[12],T=n[1],S=n[5],A=n[9],L=n[13],R=n[2],P=n[6],C=n[10],I=n[14],U=n[3],N=n[7],O=n[11],D=n[15];return r[0]=a*_+o*T+s*R+c*U,r[4]=a*w+o*S+s*P+c*N,r[8]=a*M+o*A+s*C+c*O,r[12]=a*E+o*L+s*I+c*D,r[1]=h*_+l*T+u*R+d*U,r[5]=h*w+l*S+u*P+d*N,r[9]=h*M+l*A+u*C+d*O,r[13]=h*E+l*L+u*I+d*D,r[2]=p*_+f*T+m*R+g*U,r[6]=p*w+f*S+m*P+g*N,r[10]=p*M+f*A+m*C+g*O,r[14]=p*E+f*L+m*I+g*D,r[3]=v*_+y*T+x*R+b*U,r[7]=v*w+y*S+x*P+b*N,r[11]=v*M+y*A+x*C+b*O,r[15]=v*E+y*L+x*I+b*D,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(){var t=new r;return function(e){for(var i=0,n=e.count;i<n;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.applyMatrix4(this),e.setXYZ(i,t.x,t.y,t.z);return e}}(),determinant:function(){var t=this.elements,e=t[0],i=t[4],n=t[8],r=t[12],a=t[1],o=t[5],s=t[9],c=t[13],h=t[2],l=t[6],u=t[10],d=t[14];
//TODO: make this more efficient
//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )
return t[3]*(+r*s*l-n*c*l-r*o*u+i*c*u+n*o*d-i*s*d)+t[7]*(+e*s*d-e*c*u+r*a*u-n*a*d+n*c*h-r*s*h)+t[11]*(+e*c*l-e*o*d-r*a*l+i*a*d+r*o*h-i*c*h)+t[15]*(-n*o*h-e*s*l+e*o*u+n*a*l-i*a*u+i*s*h)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){
// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
var i=this.elements,n=t.elements,r=n[0],a=n[1],o=n[2],s=n[3],c=n[4],h=n[5],l=n[6],u=n[7],d=n[8],p=n[9],f=n[10],m=n[11],g=n[12],v=n[13],y=n[14],x=n[15],b=p*y*u-v*f*u+v*l*m-h*y*m-p*l*x+h*f*x,_=g*f*u-d*y*u-g*l*m+c*y*m+d*l*x-c*f*x,w=d*v*u-g*p*u+g*h*m-c*v*m-d*h*x+c*p*x,M=g*p*l-d*v*l-g*h*f+c*v*f+d*h*y-c*p*y,E=r*b+a*_+o*w+s*M;if(0===E){var T="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(T);return console.warn(T),this.identity()}var S=1/E;return i[0]=b*S,i[1]=(v*f*s-p*y*s-v*o*m+a*y*m+p*o*x-a*f*x)*S,i[2]=(h*y*s-v*l*s+v*o*u-a*y*u-h*o*x+a*l*x)*S,i[3]=(p*l*s-h*f*s-p*o*u+a*f*u+h*o*m-a*l*m)*S,i[4]=_*S,i[5]=(d*y*s-g*f*s+g*o*m-r*y*m-d*o*x+r*f*x)*S,i[6]=(g*l*s-c*y*s-g*o*u+r*y*u+c*o*x-r*l*x)*S,i[7]=(c*f*s-d*l*s+d*o*u-r*f*u-c*o*m+r*l*m)*S,i[8]=w*S,i[9]=(g*p*s-d*v*s-g*a*m+r*v*m+d*a*x-r*p*x)*S,i[10]=(c*v*s-g*h*s+g*a*u-r*v*u-c*a*x+r*h*x)*S,i[11]=(d*h*s-c*p*s-d*a*u+r*p*u+c*a*m-r*h*m)*S,i[12]=M*S,i[13]=(d*v*o-g*p*o+g*a*f-r*v*f-d*a*y+r*p*y)*S,i[14]=(g*h*o-c*v*o-g*a*l+r*v*l+c*a*y-r*h*y)*S,i[15]=(c*p*o-d*h*o+d*a*l-r*p*l-c*a*f+r*h*f)*S,this},scale:function(t){var e=this.elements,i=t.x,n=t.y,r=t.z;return e[0]*=i,e[4]*=n,e[8]*=r,e[1]*=i,e[5]*=n,e[9]*=r,e[2]*=i,e[6]*=n,e[10]*=r,e[3]*=i,e[7]*=n,e[11]*=r,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))},makeTranslation:function(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){
// Based on http://www.gamedev.net/reference/articles/article1199.asp
var i=Math.cos(e),n=Math.sin(e),r=1-i,a=t.x,o=t.y,s=t.z,c=r*a,h=r*o;return this.set(c*a+i,c*o-n*s,c*s+n*o,0,c*o+n*s,h*o+i,h*s-n*a,0,c*s-n*o,h*s+n*a,r*s*s+i,0,0,0,0,1),this},makeScale:function(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this},makeShear:function(t,e,i){return this.set(1,e,i,0,t,1,i,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,i){return this.makeRotationFromQuaternion(e),this.scale(i),this.setPosition(t),this},decompose:function(){var t=new r,e=new i;return function(i,n,r){var a=this.elements,o=t.set(a[0],a[1],a[2]).length(),s=t.set(a[4],a[5],a[6]).length(),c=t.set(a[8],a[9],a[10]).length();this.determinant()<0&&(o=-o),i.x=a[12],i.y=a[13],i.z=a[14],
// scale the rotation part
e.copy(this);var h=1/o,l=1/s,u=1/c;return e.elements[0]*=h,e.elements[1]*=h,e.elements[2]*=h,e.elements[4]*=l,e.elements[5]*=l,e.elements[6]*=l,e.elements[8]*=u,e.elements[9]*=u,e.elements[10]*=u,n.setFromRotationMatrix(e),r.x=o,r.y=s,r.z=c,this}}(),makePerspective:function(t,e,i,n,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements,s=2*r/(e-t),c=2*r/(i-n),h=(e+t)/(e-t),l=(i+n)/(i-n),u=-(a+r)/(a-r),d=-2*a*r/(a-r);return o[0]=s,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=c,o[9]=l,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(t,e,i,n,r,a){var o=this.elements,s=1/(e-t),c=1/(i-n),h=1/(a-r),l=(e+t)*s,u=(i+n)*c,d=(a+r)*h;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-l,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*h,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(t){for(var e=this.elements,i=t.elements,n=0;n<16;n++)if(e[n]!==i[n])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;i<16;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}),Object.assign(n,{slerp:function(t,e,i,n){return i.copy(t).slerp(e,n)},slerpFlat:function(t,e,i,n,r,a,o){
// fuzz-free, array-based Quaternion SLERP operation
var s=i[n+0],c=i[n+1],h=i[n+2],l=i[n+3],u=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(l!==f||s!==u||c!==d||h!==p){var m=1-o,g=s*u+c*d+h*p+l*f,v=g>=0?1:-1,y=1-g*g;
// Skip the Slerp for tiny steps to avoid numeric problems:
if(y>Number.EPSILON){var x=Math.sqrt(y),b=Math.atan2(x,g*v);m=Math.sin(m*b)/x,o=Math.sin(o*b)/x}var _=o*v;
// Normalize in case we just did a lerp:
if(s=s*m+u*_,c=c*m+d*_,h=h*m+p*_,l=l*m+f*_,m===1-o){var w=1/Math.sqrt(s*s+c*c+h*h+l*l);s*=w,c*=w,h*=w,l*=w}}t[e]=s,t[e+1]=c,t[e+2]=h,t[e+3]=l}}),Object.defineProperties(n.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this.onChangeCallback()}}}),Object.assign(n.prototype,{set:function(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var i=t._x,n=t._y,r=t._z,a=t.order,o=Math.cos,s=Math.sin,c=o(i/2),h=o(n/2),l=o(r/2),u=s(i/2),d=s(n/2),p=s(r/2);return"XYZ"===a?(this._x=u*h*l+c*d*p,this._y=c*d*l-u*h*p,this._z=c*h*p+u*d*l,this._w=c*h*l-u*d*p):"YXZ"===a?(this._x=u*h*l+c*d*p,this._y=c*d*l-u*h*p,this._z=c*h*p-u*d*l,this._w=c*h*l+u*d*p):"ZXY"===a?(this._x=u*h*l-c*d*p,this._y=c*d*l+u*h*p,this._z=c*h*p+u*d*l,this._w=c*h*l-u*d*p):"ZYX"===a?(this._x=u*h*l-c*d*p,this._y=c*d*l+u*h*p,this._z=c*h*p-u*d*l,this._w=c*h*l+u*d*p):"YZX"===a?(this._x=u*h*l+c*d*p,this._y=c*d*l+u*h*p,this._z=c*h*p-u*d*l,this._w=c*h*l-u*d*p):"XZY"===a&&(this._x=u*h*l-c*d*p,this._y=c*d*l-u*h*p,this._z=c*h*p+u*d*l,this._w=c*h*l+u*d*p),!1!==e&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){
// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm
// assumes axis is normalized
var i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this.onChangeCallback(),this},setFromRotationMatrix:function(t){
// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
var e,i=t.elements,n=i[0],r=i[4],a=i[8],o=i[1],s=i[5],c=i[9],h=i[2],l=i[6],u=i[10],d=n+s+u;return d>0?(e=.5/Math.sqrt(d+1),this._w=.25/e,this._x=(l-c)*e,this._y=(a-h)*e,this._z=(o-r)*e):n>s&&n>u?(e=2*Math.sqrt(1+n-s-u),this._w=(l-c)/e,this._x=.25*e,this._y=(r+o)/e,this._z=(a+h)/e):s>u?(e=2*Math.sqrt(1+s-n-u),this._w=(a-h)/e,this._x=(r+o)/e,this._y=.25*e,this._z=(c+l)/e):(e=2*Math.sqrt(1+u-n-s),this._w=(o-r)/e,this._x=(a+h)/e,this._y=(c+l)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(){
// assumes direction vectors vFrom and vTo are normalized
var t,e=new r;return function(i,n){return void 0===e&&(e=new r),(t=i.dot(n)+1)<1e-6?(t=0,Math.abs(i.x)>Math.abs(i.z)?e.set(-i.y,i.x,0):e.set(0,-i.z,i.y)):e.crossVectors(i,n),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){
// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm
var i=t._x,n=t._y,r=t._z,a=t._w,o=e._x,s=e._y,c=e._z,h=e._w;return this._x=i*h+a*o+n*c-r*s,this._y=n*h+a*s+r*o-i*c,this._z=r*h+a*c+i*s-n*o,this._w=a*h-i*o-n*s-r*c,this.onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var i=this._x,n=this._y,r=this._z,a=this._w,o=a*t._w+i*t._x+n*t._y+r*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=i,this._y=n,this._z=r,this;var s=Math.sqrt(1-o*o);if(Math.abs(s)<.001)return this._w=.5*(a+this._w),this._x=.5*(i+this._x),this._y=.5*(n+this._y),this._z=.5*(r+this._z),this;var c=Math.atan2(s,o),h=Math.sin((1-e)*c)/s,l=Math.sin(e*c)/s;return this._w=a*h+this._w*l,this._x=i*h+this._x*l,this._y=n*h+this._y*l,this._z=r*h+this._z*l,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(r.prototype,{isVector3:!0,set:function(t,e,i){return this.x=t,this.y=e,this.z=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t=new n;return function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(t.setFromEuler(e))}}(),applyAxisAngle:function(){var t=new n;return function(e,i){return this.applyQuaternion(t.setFromAxisAngle(e,i))}}(),applyMatrix3:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6]*n,this.y=r[1]*e+r[4]*i+r[7]*n,this.z=r[2]*e+r[5]*i+r[8]*n,this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements,a=1/(r[3]*e+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*e+r[4]*i+r[8]*n+r[12])*a,this.y=(r[1]*e+r[5]*i+r[9]*n+r[13])*a,this.z=(r[2]*e+r[6]*i+r[10]*n+r[14])*a,this},applyQuaternion:function(t){var e=this.x,i=this.y,n=this.z,r=t.x,a=t.y,o=t.z,s=t.w,c=s*e+a*n-o*i,h=s*i+o*e-r*n,l=s*n+r*i-a*e,u=-r*e-a*i-o*n;
// calculate result * inverse quat
return this.x=c*s+u*-r+h*-o-l*-a,this.y=h*s+u*-a+l*-r-c*-o,this.z=l*s+u*-o+c*-a-h*-r,this},project:function(){var t=new i;return function(e){return t.multiplyMatrices(e.projectionMatrix,t.getInverse(e.matrixWorld)),this.applyMatrix4(t)}}(),unproject:function(){var t=new i;return function(e){return t.multiplyMatrices(e.matrixWorld,t.getInverse(e.projectionMatrix)),this.applyMatrix4(t)}}(),transformDirection:function(t){
// input: THREE.Matrix4 affine matrix
// vector interpreted as a direction
var e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*n,this.y=r[1]*e+r[5]*i+r[9]*n,this.z=r[2]*e+r[6]*i+r[10]*n,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){
// assumes min < max, componentwise
return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(){var t=new r,e=new r;return function(i,n){return t.set(i,i,i),e.set(n,n,n),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},
// TODO lengthSquared?
lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},cross:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)},crossVectors:function(t,e){var i=t.x,n=t.y,r=t.z,a=e.x,o=e.y,s=e.z;return this.x=n*s-r*o,this.y=r*a-i*s,this.z=i*o-n*a,this},projectOnVector:function(t){var e=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(e)},projectOnPlane:function(){var t=new r;return function(e){return t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){
// reflect incident vector off plane orthogonal to normal
// normal is assumed to have unit length
var t=new r;return function(e){return this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){var e=this.dot(t)/Math.sqrt(this.lengthSq()*t.lengthSq());
// clamp, to handle numerical problems
return Math.acos(ou.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){var e=Math.sin(t.phi)*t.radius;return this.x=e*Math.sin(t.theta),this.y=Math.cos(t.phi)*t.radius,this.z=e*Math.cos(t.theta),this},setFromCylindrical:function(t){return this.x=t.radius*Math.sin(t.theta),this.y=t.y,this.z=t.radius*Math.cos(t.theta),this},setFromMatrixPosition:function(t){var e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,4*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}}),Object.assign(a.prototype,{isMatrix3:!0,set:function(t,e,i,n,r,a,o,s,c){var h=this.elements;return h[0]=t,h[1]=n,h[2]=o,h[3]=e,h[4]=r,h[5]=s,h[6]=i,h[7]=a,h[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(){var t=new r;return function(e){for(var i=0,n=e.count;i<n;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.applyMatrix3(this),e.setXYZ(i,t.x,t.y,t.z);return e}}(),multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,n=e.elements,r=this.elements,a=i[0],o=i[3],s=i[6],c=i[1],h=i[4],l=i[7],u=i[2],d=i[5],p=i[8],f=n[0],m=n[3],g=n[6],v=n[1],y=n[4],x=n[7],b=n[2],_=n[5],w=n[8];return r[0]=a*f+o*v+s*b,r[3]=a*m+o*y+s*_,r[6]=a*g+o*x+s*w,r[1]=c*f+h*v+l*b,r[4]=c*m+h*y+l*_,r[7]=c*g+h*x+l*w,r[2]=u*f+d*v+p*b,r[5]=u*m+d*y+p*_,r[8]=u*g+d*x+p*w,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],a=t[4],o=t[5],s=t[6],c=t[7],h=t[8];return e*a*h-e*o*c-i*r*h+i*o*s+n*r*c-n*a*s},getInverse:function(t,e){t&&t.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var i=t.elements,n=this.elements,r=i[0],a=i[1],o=i[2],s=i[3],c=i[4],h=i[5],l=i[6],u=i[7],d=i[8],p=d*c-h*u,f=h*l-d*s,m=u*s-c*l,g=r*p+a*f+o*m;if(0===g){var v="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(v);return console.warn(v),this.identity()}var y=1/g;return n[0]=p*y,n[1]=(o*u-d*a)*y,n[2]=(h*a-o*c)*y,n[3]=f*y,n[4]=(d*r-o*l)*y,n[5]=(o*s-h*r)*y,n[6]=m*y,n[7]=(a*l-u*r)*y,n[8]=(c*r-a*s)*y,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,i,n,r,a,o){var s=Math.cos(r),c=Math.sin(r);this.set(i*s,i*c,-i*(s*a+c*o)+a+t,-n*c,n*s,-n*(-c*a+s*o)+o+e,0,0,1)},scale:function(t,e){var i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=e,i[4]*=e,i[7]*=e,this},rotate:function(t){var e=Math.cos(t),i=Math.sin(t),n=this.elements,r=n[0],a=n[3],o=n[6],s=n[1],c=n[4],h=n[7];return n[0]=e*r+i*s,n[3]=e*a+i*c,n[6]=e*o+i*h,n[1]=-i*r+e*s,n[4]=-i*a+e*c,n[7]=-i*o+e*h,this},translate:function(t,e){var i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=e*i[2],i[4]+=e*i[5],i[7]+=e*i[8],this},equals:function(t){for(var e=this.elements,i=t.elements,n=0;n<9;n++)if(e[n]!==i[n])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;i<9;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author szimek / https://github.com/szimek/
 */
var su=0;o.DEFAULT_IMAGE=void 0,o.DEFAULT_MAPPING=300,Object.defineProperty(o.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(o.prototype,t.prototype,{constructor:o,isTexture:!0,clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){var e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];var i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){
// TODO: Move to THREE.Image
var n=this.image;void 0===n.uuid&&(n.uuid=ou.generateUUID()),e||void 0!==t.images[n.uuid]||(t.images[n.uuid]={uuid:n.uuid,url:function(t){var e;if(t instanceof HTMLCanvasElement)e=t;else{(e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")).width=t.width,e.height=t.height;var i=e.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height)}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}(n)}),i.image=n.uuid}return e||(t.textures[this.uuid]=i),i},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(300===this.mapping){if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case hl:t.x=t.x-Math.floor(t.x);break;case ll:t.x=t.x<0?0:1;break;case ul:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case hl:t.y=t.y-Math.floor(t.y);break;case ll:t.y=t.y<0?0:1;break;case ul:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}this.flipY&&(t.y=1-t.y)}}}),Object.assign(s.prototype,{isVector4:!0,set:function(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*i+a[8]*n+a[12]*r,this.y=a[1]*e+a[5]*i+a[9]*n+a[13]*r,this.z=a[2]*e+a[6]*i+a[10]*n+a[14]*r,this.w=a[3]*e+a[7]*i+a[11]*n+a[15]*r,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){
// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm
// q is assumed to be normalized
this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){
// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
var e,i,n,r,// margin to distinguish between 0 and 180 degrees
a=t.elements,o=a[0],s=a[4],c=a[8],h=a[1],l=a[5],u=a[9],d=a[2],p=a[6],f=a[10];if(Math.abs(s-h)<.01&&Math.abs(c-d)<.01&&Math.abs(u-p)<.01){
// singularity found
// first check for identity matrix which must have +1 for all terms
// in leading diagonal and zero in other terms
if(Math.abs(s+h)<.1&&Math.abs(c+d)<.1&&Math.abs(u+p)<.1&&Math.abs(o+l+f-3)<.1)
// this singularity is identity matrix so angle = 0
return this.set(1,0,0,0),this;
// otherwise this singularity is angle = 180
e=Math.PI;var m=(o+1)/2,g=(l+1)/2,v=(f+1)/2,y=(s+h)/4,x=(c+d)/4,b=(u+p)/4;
// m11 is the largest diagonal term
// m22 is the largest diagonal term
// m33 is the largest diagonal term so base result on this
return m>g&&m>v?m<.01?(i=0,n=.707106781,r=.707106781):(n=y/(i=Math.sqrt(m)),r=x/i):g>v?g<.01?(i=.707106781,n=0,r=.707106781):(i=y/(n=Math.sqrt(g)),r=b/n):v<.01?(i=.707106781,n=.707106781,r=0):(i=x/(r=Math.sqrt(v)),n=b/r),this.set(i,n,r,e),this}
// as we have reached here there are no singularities so we can handle normally
var _=Math.sqrt((p-u)*(p-u)+(c-d)*(c-d)+(h-s)*(h-s));// used to normalize
// prevent divide by zero, should not happen if matrix is orthogonal and should be
// caught by singularity test above, but I've left it in just in case
return Math.abs(_)<.001&&(_=1),this.x=(p-u)/_,this.y=(c-d)/_,this.z=(h-s)/_,this.w=Math.acos((o+l+f-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){
// assumes min < max, componentwise
return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(){var t,e;return function(i,n){return void 0===t&&(t=new s,e=new s),t.set(i,i,i,i),e.set(n,n,n,n),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}}),Object.assign(c.prototype,t.prototype,{isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),(h.prototype=Object.create(c.prototype)).constructor=h,h.prototype.isWebGLRenderTargetCube=!0,(l.prototype=Object.create(o.prototype)).constructor=l,l.prototype.isDataTexture=!0,(u.prototype=Object.create(o.prototype)).constructor=u,u.prototype.isCubeTexture=!0,Object.defineProperty(u.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}});/**
 * @author tschw
 *
 * Uniforms of a program.
 * Those form a tree structure with a special top-level container for the root,
 * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.
 *
 *
 * Properties of inner nodes including the top-level container:
 *
 * .seq - array of nested uniforms
 * .map - nested uniforms by name
 *
 *
 * Methods of all nodes except the top-level container:
 *
 * .setValue( gl, value, [renderer] )
 *
 * 		uploads a uniform value(s)
 *  	the 'renderer' parameter is needed for sampler uniforms
 *
 *
 * Static methods of the top-level container (renderer factorizations):
 *
 * .upload( gl, seq, values, renderer )
 *
 * 		sets uniforms in 'seq' to 'values[id].value'
 *
 * .seqWithValue( seq, values ) : filteredSeq
 *
 * 		filters 'seq' entries with corresponding entry in values
 *
 *
 * Methods of the top-level container (renderer factorizations):
 *
 * .setValue( gl, name, value )
 *
 * 		sets uniform with  name 'name' to 'value'
 *
 * .set( gl, obj, prop )
 *
 * 		sets uniform from object and property with same name than uniform
 *
 * .setOptional( gl, obj, prop )
 *
 * 		like .set for an optional property of the object
 *
 */
var cu=new o,hu=new u,lu=[],uu=[],du=new Float32Array(16),pu=new Float32Array(9);G.prototype.setValue=function(t,e){for(var i=this.seq,n=0,r=i.length;n!==r;++n){var a=i[n];a.setValue(t,e[a.id])}};
// --- Top-level ---
// Parser - builds up the property tree from the path strings
var fu=/([\w\d_]+)(\])?(\[|\.)?/g;k.prototype.setValue=function(t,e,i){var n=this.map[e];void 0!==n&&n.setValue(t,i,this.renderer)},k.prototype.setOptional=function(t,e,i){var n=e[i];void 0!==n&&this.setValue(t,i,n)},
// Static interface
k.upload=function(t,e,i,n){for(var r=0,a=e.length;r!==a;++r){var o=e[r],s=i[o.id];!1!==s.needsUpdate&&
// note: always updating when .needsUpdate is undefined
o.setValue(t,s.value,n)}},k.seqWithValue=function(t,e){for(var i=[],n=0,r=t.length;n!==r;++n){var a=t[n];a.id in e&&i.push(a)}return i};/**
 * @author mrdoob / http://mrdoob.com/
 */
var mu={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Object.assign(j.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,i){return this.r=t,this.g=e,this.b=i,this},setHSL:function(){function t(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}return function(e,i,n){if(
// h,s,l ranges are in 0.0 - 1.0
e=ou.euclideanModulo(e,1),i=ou.clamp(i,0,1),n=ou.clamp(n,0,1),0===i)this.r=this.g=this.b=n;else{var r=n<=.5?n*(1+i):n+i-n*i,a=2*n-r;this.r=t(a,r,e+1/3),this.g=t(a,r,e),this.b=t(a,r,e-1/3)}return this}}(),setStyle:function(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){
// rgb / hsl
var n,r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(n=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
// rgb(255,0,0) rgba(255,0,0,0.5)
return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,e(n[5]),this;if(n=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)
return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,e(n[5]),this;break;case"hsl":case"hsla":if(n=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){
// hsl(120,50%,50%) hsla(120,50%,50%,0.5)
var o=parseFloat(n[1])/360,s=parseInt(n[2],10)/100,c=parseInt(n[3],10)/100;return e(n[5]),this.setHSL(o,s,c)}}}else if(i=/^\#([A-Fa-f0-9]+)$/.exec(t)){
// hex color
var h=(l=i[1]).length;if(3===h)
// #ff0
return this.r=parseInt(l.charAt(0)+l.charAt(0),16)/255,this.g=parseInt(l.charAt(1)+l.charAt(1),16)/255,this.b=parseInt(l.charAt(2)+l.charAt(2),16)/255,this;if(6===h)
// #ff0000
return this.r=parseInt(l.charAt(0)+l.charAt(1),16)/255,this.g=parseInt(l.charAt(2)+l.charAt(3),16)/255,this.b=parseInt(l.charAt(4)+l.charAt(5),16)/255,this}if(t&&t.length>0){
// color keywords
var l=mu[t];void 0!==l?
// red
this.setHex(l):
// unknown color
console.warn("THREE.Color: Unknown color "+t)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);var i=e>0?1/e:1;return this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this},convertGammaToLinear:function(){var t=this.r,e=this.g,i=this.b;return this.r=t*t,this.g=e*e,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){
// h,s,l ranges are in 0.0 - 1.0
var e,i,n=t||{h:0,s:0,l:0},r=this.r,a=this.g,o=this.b,s=Math.max(r,a,o),c=Math.min(r,a,o),h=(c+s)/2;if(c===s)e=0,i=0;else{var l=s-c;switch(i=h<=.5?l/(s+c):l/(2-s-c),s){case r:e=(a-o)/l+(a<o?6:0);break;case a:e=(o-r)/l+2;break;case o:e=(r-a)/l+4}e/=6}return n.h=e,n.s=i,n.l=h,n},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,i){var n=this.getHSL();return n.h+=t,n.s+=e,n.l+=i,this.setHSL(n.h,n.s,n.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}});/**
 * Uniforms library for shared webgl shaders
 */
var gu={common:{diffuse:{value:new j(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new a},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new e(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new j(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},
// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src
rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new j(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new a}}},vu={merge:function(t){for(var e={},i=0;i<t.length;i++){var n=this.clone(t[i]);for(var r in n)e[r]=n[r]}return e},clone:function(t){var e={};for(var i in t){e[i]={};for(var n in t[i]){var r=t[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[i][n]=r.clone():Array.isArray(r)?e[i][n]=r.slice():e[i][n]=r}}return e}},yu={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"\nvec3 transformed = vec3( position );\n",beginnormal_vertex:"\nvec3 objectNormal = vec3( normal );\n",bsdfs:"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n\tfloat b = 3.45068 + (4.18814 + y) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n\treturn result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\n",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",defaultnormal_vertex:"vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",encodings_fragment:"  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",envmap_fragment:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",envmap_pars_fragment:"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",envmap_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",fog_vertex:"\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",gradientmap_pars_fragment:"#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",lights_pars:"uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",lights_template:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *= gl_Position.w;\n\t#endif\n#endif\n",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",map_particle_fragment:"#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",map_particle_pars_fragment:"#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif\n",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",normal_fragment:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",project_vertex:"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n",dithering_fragment:"#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",dithering_pars_fragment:"#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",tonemapping_pars_fragment:"#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",uv_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\n",uv_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",cube_vert:"varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}\n",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}\n",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}\n",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",equirect_vert:"varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshphysical_frag:"#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphysical_vert:"#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}\n",shadow_vert:"#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n"},xu={basic:{uniforms:vu.merge([gu.common,gu.specularmap,gu.envmap,gu.aomap,gu.lightmap,gu.fog]),vertexShader:yu.meshbasic_vert,fragmentShader:yu.meshbasic_frag},lambert:{uniforms:vu.merge([gu.common,gu.specularmap,gu.envmap,gu.aomap,gu.lightmap,gu.emissivemap,gu.fog,gu.lights,{emissive:{value:new j(0)}}]),vertexShader:yu.meshlambert_vert,fragmentShader:yu.meshlambert_frag},phong:{uniforms:vu.merge([gu.common,gu.specularmap,gu.envmap,gu.aomap,gu.lightmap,gu.emissivemap,gu.bumpmap,gu.normalmap,gu.displacementmap,gu.gradientmap,gu.fog,gu.lights,{emissive:{value:new j(0)},specular:{value:new j(1118481)},shininess:{value:30}}]),vertexShader:yu.meshphong_vert,fragmentShader:yu.meshphong_frag},standard:{uniforms:vu.merge([gu.common,gu.envmap,gu.aomap,gu.lightmap,gu.emissivemap,gu.bumpmap,gu.normalmap,gu.displacementmap,gu.roughnessmap,gu.metalnessmap,gu.fog,gu.lights,{emissive:{value:new j(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:yu.meshphysical_vert,fragmentShader:yu.meshphysical_frag},points:{uniforms:vu.merge([gu.points,gu.fog]),vertexShader:yu.points_vert,fragmentShader:yu.points_frag},dashed:{uniforms:vu.merge([gu.common,gu.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:yu.linedashed_vert,fragmentShader:yu.linedashed_frag},depth:{uniforms:vu.merge([gu.common,gu.displacementmap]),vertexShader:yu.depth_vert,fragmentShader:yu.depth_frag},normal:{uniforms:vu.merge([gu.common,gu.bumpmap,gu.normalmap,gu.displacementmap,{opacity:{value:1}}]),vertexShader:yu.normal_vert,fragmentShader:yu.normal_frag},/* -------------------------------------------------------------------------
	//	Cube map shader
	 ------------------------------------------------------------------------- */
cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:yu.cube_vert,fragmentShader:yu.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:yu.equirect_vert,fragmentShader:yu.equirect_frag},distanceRGBA:{uniforms:vu.merge([gu.common,gu.displacementmap,{referencePosition:{value:new r},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:yu.distanceRGBA_vert,fragmentShader:yu.distanceRGBA_frag},shadow:{uniforms:vu.merge([gu.lights,gu.fog,{color:{value:new j(0)},opacity:{value:1}}]),vertexShader:yu.shadow_vert,fragmentShader:yu.shadow_frag}};xu.physical={uniforms:vu.merge([xu.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:yu.meshphysical_vert,fragmentShader:yu.meshphysical_frag},Object.assign(W.prototype,{set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new e;return function(e,i){var n=t.copy(i).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){
// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes
return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){var i=t||new e;return this.isEmpty()?i.set(0,0):i.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){var i=t||new e;return this.isEmpty()?i.set(0,0):i.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,i){return(i||new e).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){
// using 4 splitting planes to rule out intersections
return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,i){return(i||new e).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new e;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}),(q.prototype=Object.create(o.prototype)).constructor=q;/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
var bu=0;Object.assign(Z.prototype,t.prototype,{isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(void 0!==t)for(var e in t){var i=t[e];if(void 0!==i)
// for backward compatability if shading is set in the constructor
if("shading"!==e){var n=this[e];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):
// ensure overdraw is backwards-compatible with legacy boolean type
this[e]="overdraw"===e?Number(i):i:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===i;else console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},toJSON:function(t){
// TODO: Copied from Object3D.toJSON
function e(t){var e=[];for(var i in t){var n=t[i];delete n.metadata,e.push(n)}return e}var i=void 0===t||"string"==typeof t;i&&(t={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};if(
// standard Material serialization
n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearCoat&&(n.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(n.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==xh&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),this.side!==dh&&(n.side=this.side),this.vertexColors!==mh&&(n.vertexColors=this.vertexColors),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,
// rotation (SpriteMaterial)
0!==this.rotation&&(n.rotation=this.rotation),1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),i){var r=e(t.textures),a=e(t.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.lights=t.lights,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.overdraw=t.overdraw,this.visible=t.visible,this.userData=JSON.parse(JSON.stringify(t.userData)),this.clipShadows=t.clipShadows,this.clipIntersection=t.clipIntersection;var e=t.clippingPlanes,i=null;if(null!==e){var n=e.length;i=new Array(n);for(var r=0;r!==n;++r)i[r]=e[r].clone()}return this.clippingPlanes=i,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),(J.prototype=Object.create(Z.prototype)).constructor=J,J.prototype.isMeshDepthMaterial=!0,J.prototype.copy=function(t){return Z.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},(Q.prototype=Object.create(Z.prototype)).constructor=Q,Q.prototype.isMeshDistanceMaterial=!0,Q.prototype.copy=function(t){return Z.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this},Object.assign(K.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,i=1/0,n=1/0,r=-1/0,a=-1/0,o=-1/0,s=0,c=t.length;s<c;s+=3){var h=t[s],l=t[s+1],u=t[s+2];h<e&&(e=h),l<i&&(i=l),u<n&&(n=u),h>r&&(r=h),l>a&&(a=l),u>o&&(o=u)}return this.min.set(e,i,n),this.max.set(r,a,o),this},setFromBufferAttribute:function(t){for(var e=1/0,i=1/0,n=1/0,r=-1/0,a=-1/0,o=-1/0,s=0,c=t.count;s<c;s++){var h=t.getX(s),l=t.getY(s),u=t.getZ(s);h<e&&(e=h),l<i&&(i=l),u<n&&(n=u),h>r&&(r=h),l>a&&(a=l),u>o&&(o=u)}return this.min.set(e,i,n),this.max.set(r,a,o),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new r;return function(e,i){var n=t.copy(i).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}}(),setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){
// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes
return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){var e=t||new r;return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){var e=t||new r;return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(){function t(t){var r=t.geometry;if(void 0!==r)if(r.isGeometry){var o=r.vertices;for(i=0,n=o.length;i<n;i++)a.copy(o[i]),a.applyMatrix4(t.matrixWorld),e.expandByPoint(a)}else if(r.isBufferGeometry){var s=r.attributes.position;if(void 0!==s)for(i=0,n=s.count;i<n;i++)a.fromBufferAttribute(s,i).applyMatrix4(t.matrixWorld),e.expandByPoint(a)}}
// Computes the world-axis-aligned bounding box of an object (including its children),
// accounting for both the object's, and children's, world transforms
var e,i,n,a=new r;return function(i){return e=this,i.updateMatrixWorld(!0),i.traverse(t),this}}(),containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return(e||new r).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){
// using 6 splitting planes to rule out intersections.
return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(){var t=new r;return function(e){
// If that point is inside the sphere, the AABB and sphere intersect.
// Find the point on the AABB closest to the sphere center.
return this.clampPoint(e.center,t),t.distanceToSquared(e.center)<=e.radius*e.radius}}(),intersectsPlane:function(t){
// We compute the minimum and maximum dot product values. If those values
// are on the same side (back or front) of the plane, then there is no intersection.
var e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=t.constant&&i>=t.constant},clampPoint:function(t,e){return(e||new r).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new r;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),getBoundingSphere:function(){var t=new r;return function(e){var i=e||new $;return this.getCenter(i.center),i.radius=.5*this.getSize(t).length(),i}}(),intersect:function(t){
// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.
return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new r,new r,new r,new r,new r,new r,new r,new r];return function(e){
// transform of empty box is an empty box.
// transform of empty box is an empty box.
// NOTE: I am using a binary pattern to specify all 2^3 combinations below
// 000
// 001
// 010
// 011
// 100
// 101
// 110
// 111
return this.isEmpty()?this:(t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(t),this)}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}),Object.assign($.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new K;return function(e,i){var n=this.center;void 0!==i?n.copy(i):t.setFromPoints(e).getCenter(n);for(var r=0,a=0,o=e.length;a<o;a++)r=Math.max(r,n.distanceToSquared(e[a]));return this.radius=Math.sqrt(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var i=this.center.distanceToSquared(t),n=e||new r;return n.copy(t),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n},getBoundingBox:function(t){var e=t||new K;return e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}}),Object.assign(tt.prototype,{set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new r,e=new r;return function(i,n,r){var a=t.subVectors(r,n).cross(e.subVectors(i,n)).normalize();
// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?
return this.setFromNormalAndCoplanarPoint(a,i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){
// Note: will lead to a divide by zero if the plane is invalid.
var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return(e||new r).copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(){var t=new r;return function(e,i){var n=i||new r,a=e.delta(t),o=this.normal.dot(a);if(0!==o){var s=-(e.start.dot(this.normal)+this.constant)/o;if(!(s<0||s>1))return n.copy(a).multiplyScalar(s).add(e.start)}else
// line is coplanar, return origin
if(0===this.distanceToPoint(e.start))return n.copy(e.start)}}(),intersectsLine:function(t){
// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.
var e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return(t||new r).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new r,e=new a;return function(i,n){var r=n||e.getNormalMatrix(i),a=this.coplanarPoint(t).applyMatrix4(i),o=this.normal.applyMatrix3(r).normalize();return this.constant=-a.dot(o),this}}(),translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}),Object.assign(et.prototype,{set:function(t,e,i,n,r,a){var o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(i),o[3].copy(n),o[4].copy(r),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,i=0;i<6;i++)e[i].copy(t.planes[i]);return this},setFromMatrix:function(t){var e=this.planes,i=t.elements,n=i[0],r=i[1],a=i[2],o=i[3],s=i[4],c=i[5],h=i[6],l=i[7],u=i[8],d=i[9],p=i[10],f=i[11],m=i[12],g=i[13],v=i[14],y=i[15];return e[0].setComponents(o-n,l-s,f-u,y-m).normalize(),e[1].setComponents(o+n,l+s,f+u,y+m).normalize(),e[2].setComponents(o+r,l+c,f+d,y+g).normalize(),e[3].setComponents(o-r,l-c,f-d,y-g).normalize(),e[4].setComponents(o-a,l-h,f-p,y-v).normalize(),e[5].setComponents(o+a,l+h,f+p,y+v).normalize(),this},intersectsObject:function(){var t=new $;return function(e){var i=e.geometry;return null===i.boundingSphere&&i.computeBoundingSphere(),t.copy(i.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSprite:function(){var t=new $;return function(e){return t.center.set(0,0,0),t.radius=.7071067811865476,t.applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){for(var e=this.planes,i=t.center,n=-t.radius,r=0;r<6;r++){if(e[r].distanceToPoint(i)<n)return!1}return!0},intersectsBox:function(){var t=new r,e=new r;return function(i){for(var n=this.planes,r=0;r<6;r++){var a=n[r];t.x=a.normal.x>0?i.min.x:i.max.x,e.x=a.normal.x>0?i.max.x:i.min.x,t.y=a.normal.y>0?i.min.y:i.max.y,e.y=a.normal.y>0?i.max.y:i.min.y,t.z=a.normal.z>0?i.min.z:i.max.z,e.z=a.normal.z>0?i.max.z:i.min.z;var o=a.distanceToPoint(t),s=a.distanceToPoint(e);
// if both outside plane, no intersection
if(o<0&&s<0)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}}),rt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],rt.DefaultOrder="XYZ",Object.defineProperties(rt.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this.onChangeCallback()}}}),Object.assign(rt.prototype,{isEuler:!0,set:function(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._order=n||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e,i){var n=ou.clamp,r=t.elements,a=r[0],o=r[4],s=r[8],c=r[1],h=r[5],l=r[9],u=r[2],d=r[6],p=r[10];return"XYZ"===(e=e||this._order)?(this._y=Math.asin(n(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,p),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(d,h),this._z=0)):"YXZ"===e?(this._x=Math.asin(-n(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(s,p),this._z=Math.atan2(c,h)):(this._y=Math.atan2(-u,a),this._z=0)):"ZXY"===e?(this._x=Math.asin(n(d,-1,1)),Math.abs(d)<.99999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(c,a))):"ZYX"===e?(this._y=Math.asin(-n(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-o,h))):"YZX"===e?(this._z=Math.asin(n(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(s,p))):"XZY"===e?(this._z=Math.asin(-n(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(d,h),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-l,p),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,!1!==i&&this.onChangeCallback(),this},setFromQuaternion:function(){var t=new i;return function(e,i,n){return t.makeRotationFromQuaternion(e),this.setFromRotationMatrix(t,i,n)}}(),setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(){
// WARNING: this discards revolution information -bhouston
var t=new n;return function(e){return t.setFromEuler(this),this.setFromQuaternion(t,e)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new r(this._x,this._y,this._z)},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(at.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},test:function(t){return 0!=(this.mask&t.mask)}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author elephantatwork / www.elephantatwork.ch
 */
var _u=0;ot.DefaultUp=new r(0,1,0),ot.DefaultMatrixAutoUpdate=!0,Object.assign(ot.prototype,t.prototype,{isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){
// assumes axis is normalized
this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){
// assumes q is normalized
this.quaternion.copy(t)},rotateOnAxis:function(){
// rotate object on axis in object space
// axis is assumed to be normalized
var t=new n;return function(e,i){return t.setFromAxisAngle(e,i),this.quaternion.multiply(t),this}}(),rotateOnWorldAxis:function(){
// rotate object on axis in world space
// axis is assumed to be normalized
// method assumes no rotated parent
var t=new n;return function(e,i){return t.setFromAxisAngle(e,i),this.quaternion.premultiply(t),this}}(),rotateX:function(){var t=new r(1,0,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateY:function(){var t=new r(0,1,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateZ:function(){var t=new r(0,0,1);return function(e){return this.rotateOnAxis(t,e)}}(),translateOnAxis:function(){
// translate object by distance along axis in object space
// axis is assumed to be normalized
var t=new r;return function(e,i){return t.copy(e).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(i)),this}}(),translateX:function(){var t=new r(1,0,0);return function(e){return this.translateOnAxis(t,e)}}(),translateY:function(){var t=new r(0,1,0);return function(e){return this.translateOnAxis(t,e)}}(),translateZ:function(){var t=new r(0,0,1);return function(e){return this.translateOnAxis(t,e)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new i;return function(e){return e.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){
// This method does not support objects with rotated and/or translated parent(s)
var t=new i,e=new r;return function(i,n,r){i.isVector3?e.copy(i):e.set(i,n,r),this.isCamera?t.lookAt(this.position,e,this.up):t.lookAt(e,this.position,this.up),this.quaternion.setFromRotationMatrix(t)}}(),add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var i=this.children.indexOf(t);return-1!==i&&(t.parent=null,t.dispatchEvent({type:"removed"}),this.children.splice(i,1)),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var i=0,n=this.children.length;i<n;i++){var r=this.children[i].getObjectByProperty(t,e);if(void 0!==r)return r}},getWorldPosition:function(t){var e=t||new r;return this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var t=new r,e=new r;return function(i){var r=i||new n;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,r,e),r}}(),getWorldRotation:function(){var t=new n;return function(e){var i=e||new rt;return this.getWorldQuaternion(t),i.setFromQuaternion(t,this.rotation.order,!1)}}(),getWorldScale:function(){var t=new r,e=new n;return function(i){var n=i||new r;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,e,n),n}}(),getWorldDirection:function(){var t=new n;return function(e){var i=e||new r;return this.getWorldQuaternion(t),i.set(0,0,1).applyQuaternion(t)}}(),raycast:function(){},traverse:function(t){t(this);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)},toJSON:function(t){
//
function e(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}
// extract data from the cache hash
// remove metadata on each item
// and return as array
function i(t){var e=[];for(var i in t){var n=t[i];delete n.metadata,e.push(n)}return e}
// meta is a string when called from JSON.stringify
var n=void 0===t||"string"==typeof t,r={};
// meta is a hash used to collect geometries, materials.
// not providing it implies that this is the root object
// being serialized.
n&&(
// initialize meta obj
t={geometries:{},materials:{},textures:{},images:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});
// standard Object3D serialization
var a={};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),a.matrix=this.matrix.toArray(),void 0!==this.geometry&&(a.geometry=e(t.geometries,this.geometry)),void 0!==this.material)if(Array.isArray(this.material)){for(var o=[],s=0,c=this.material.length;s<c;s++)o.push(e(t.materials,this.material[s]));a.material=o}else a.material=e(t.materials,this.material);
//
if(this.children.length>0){a.children=[];for(s=0;s<this.children.length;s++)a.children.push(this.children[s].toJSON(t).object)}if(n){var h=i(t.geometries),l=i(t.materials),u=i(t.textures),d=i(t.images);h.length>0&&(r.geometries=h),l.length>0&&(r.materials=l),u.length>0&&(r.textures=u),d.length>0&&(r.images=d)}return r.object=a,r},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(var i=0;i<t.children.length;i++){var n=t.children[i];this.add(n.clone())}return this}}),st.prototype=Object.assign(Object.create(ot.prototype),{constructor:st,isCamera:!0,copy:function(t,e){return ot.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this},getWorldDirection:function(){var t=new n;return function(e){var i=e||new r;return this.getWorldQuaternion(t),i.set(0,0,-1).applyQuaternion(t)}}(),updateMatrixWorld:function(t){ot.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),ct.prototype=Object.assign(Object.create(st.prototype),{constructor:ct,isOrthographicCamera:!0,copy:function(t,e){return st.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,i,n,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2,r=i-t,a=i+t,o=n+e,s=n-e;if(null!==this.view&&this.view.enabled){var c=this.zoom/(this.view.width/this.view.fullWidth),h=this.zoom/(this.view.height/this.view.fullHeight),l=(this.right-this.left)/this.view.width,u=(this.top-this.bottom)/this.view.height;a=(r+=l*(this.view.offsetX/c))+l*(this.view.width/c),s=(o-=u*(this.view.offsetY/h))-u*(this.view.height/h)}this.projectionMatrix.makeOrthographic(r,a,o,s,this.near,this.far)},toJSON:function(t){var e=ot.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),Object.assign(ht.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,i=t.vertexNormals.length;e<i;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(var e=0,i=t.vertexColors.length;e<i;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author kile / http://kile.stravaganza.org/
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author bhouston / http://clara.io
 */
var wu=0;Object.assign(lt.prototype,t.prototype,{isGeometry:!0,applyMatrix:function(t){for(var e=(new a).getNormalMatrix(t),i=0,n=this.vertices.length;i<n;i++){this.vertices[i].applyMatrix4(t)}for(var i=0,n=this.faces.length;i<n;i++){var r=this.faces[i];r.normal.applyMatrix3(e).normalize();for(var o=0,s=r.vertexNormals.length;o<s;o++)r.vertexNormals[o].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){
// rotate geometry around world x-axis
var t=new i;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){
// rotate geometry around world y-axis
var t=new i;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){
// rotate geometry around world z-axis
var t=new i;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){
// translate geometry
var t=new i;return function(e,i,n){return t.makeTranslation(e,i,n),this.applyMatrix(t),this}}(),scale:function(){
// scale geometry
var t=new i;return function(e,i,n){return t.makeScale(e,i,n),this.applyMatrix(t),this}}(),lookAt:function(){var t=new ot;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),fromBufferGeometry:function(t){function i(t,e,i,r){var a=new ht(t,e,i,void 0!==c?[d[t].clone(),d[e].clone(),d[i].clone()]:[],void 0!==h?[n.colors[t].clone(),n.colors[e].clone(),n.colors[i].clone()]:[],r);n.faces.push(a),void 0!==l&&n.faceVertexUvs[0].push([p[t].clone(),p[e].clone(),p[i].clone()]),void 0!==u&&n.faceVertexUvs[1].push([f[t].clone(),f[e].clone(),f[i].clone()])}var n=this,a=null!==t.index?t.index.array:void 0,o=t.attributes,s=o.position.array,c=void 0!==o.normal?o.normal.array:void 0,h=void 0!==o.color?o.color.array:void 0,l=void 0!==o.uv?o.uv.array:void 0,u=void 0!==o.uv2?o.uv2.array:void 0;void 0!==u&&(this.faceVertexUvs[1]=[]);for(var d=[],p=[],f=[],m=0,g=0;m<s.length;m+=3,g+=2)n.vertices.push(new r(s[m],s[m+1],s[m+2])),void 0!==c&&d.push(new r(c[m],c[m+1],c[m+2])),void 0!==h&&n.colors.push(new j(h[m],h[m+1],h[m+2])),void 0!==l&&p.push(new e(l[g],l[g+1])),void 0!==u&&f.push(new e(u[g],u[g+1]));var v=t.groups;if(v.length>0)for(m=0;m<v.length;m++)for(var y=v[m],x=y.start,g=x,b=x+y.count;g<b;g+=3)void 0!==a?i(a[g],a[g+1],a[g+2],y.materialIndex):i(g,g+1,g+2,y.materialIndex);else if(void 0!==a)for(m=0;m<a.length;m+=3)i(a[m],a[m+1],a[m+2]);else for(m=0;m<s.length/3;m+=3)i(m,m+1,m+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,n=0===e?1:1/e,r=new i;return r.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix(r),this},computeFaceNormals:function(){for(var t=new r,e=new r,i=0,n=this.faces.length;i<n;i++){var a=this.faces[i],o=this.vertices[a.a],s=this.vertices[a.b],c=this.vertices[a.c];t.subVectors(c,s),e.subVectors(o,s),t.cross(e),t.normalize(),a.normal.copy(t)}},computeVertexNormals:function(t){void 0===t&&(t=!0);var e,i,n,a,o,s;for(s=new Array(this.vertices.length),e=0,i=this.vertices.length;e<i;e++)s[e]=new r;if(t){
// vertex normals weighted by triangle areas
// http://www.iquilezles.org/www/articles/normals/normals.htm
var c,h,l,u=new r,d=new r;for(n=0,a=this.faces.length;n<a;n++)o=this.faces[n],c=this.vertices[o.a],h=this.vertices[o.b],l=this.vertices[o.c],u.subVectors(l,h),d.subVectors(c,h),u.cross(d),s[o.a].add(u),s[o.b].add(u),s[o.c].add(u)}else for(this.computeFaceNormals(),n=0,a=this.faces.length;n<a;n++)s[(o=this.faces[n]).a].add(o.normal),s[o.b].add(o.normal),s[o.c].add(o.normal);for(e=0,i=this.vertices.length;e<i;e++)s[e].normalize();for(n=0,a=this.faces.length;n<a;n++){var p=(o=this.faces[n]).vertexNormals;3===p.length?(p[0].copy(s[o.a]),p[1].copy(s[o.b]),p[2].copy(s[o.c])):(p[0]=s[o.a].clone(),p[1]=s[o.b].clone(),p[2]=s[o.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,i;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){var n=(i=this.faces[t]).vertexNormals;3===n.length?(n[0].copy(i.normal),n[1].copy(i.normal),n[2].copy(i.normal)):(n[0]=i.normal.clone(),n[1]=i.normal.clone(),n[2]=i.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,i,n,a;
// save original normals
// - create temp variables on first access
//   otherwise just copy (for faster repeated calls)
for(i=0,n=this.faces.length;i<n;i++)for((a=this.faces[i]).__originalFaceNormal?a.__originalFaceNormal.copy(a.normal):a.__originalFaceNormal=a.normal.clone(),a.__originalVertexNormals||(a.__originalVertexNormals=[]),t=0,e=a.vertexNormals.length;t<e;t++)a.__originalVertexNormals[t]?a.__originalVertexNormals[t].copy(a.vertexNormals[t]):a.__originalVertexNormals[t]=a.vertexNormals[t].clone();
// use temp geometry to compute face and vertex normals for each morph
var o=new lt;for(o.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){
// create on first access
if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var s=this.morphNormals[t].faceNormals,c=this.morphNormals[t].vertexNormals;for(i=0,n=this.faces.length;i<n;i++)l=new r,u={a:new r,b:new r,c:new r},s.push(l),c.push(u)}var h=this.morphNormals[t];
// set vertices to morph target
o.vertices=this.morphTargets[t].vertices,
// compute morph normals
o.computeFaceNormals(),o.computeVertexNormals();
// store morph normals
var l,u;for(i=0,n=this.faces.length;i<n;i++)a=this.faces[i],l=h.faceNormals[i],u=h.vertexNormals[i],l.copy(a.normal),u.a.copy(a.vertexNormals[0]),u.b.copy(a.vertexNormals[1]),u.c.copy(a.vertexNormals[2])}
// restore original normals
for(i=0,n=this.faces.length;i<n;i++)(a=this.faces[i]).normal=a.__originalFaceNormal,a.vertexNormals=a.__originalVertexNormals},computeLineDistances:function(){for(var t=0,e=this.vertices,i=0,n=e.length;i<n;i++)i>0&&(t+=e[i].distanceTo(e[i-1])),this.lineDistances[i]=t},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new K),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new $),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,i){if(t&&t.isGeometry){var n,r=this.vertices.length,o=this.vertices,s=t.vertices,c=this.faces,h=t.faces,l=this.faceVertexUvs[0],u=t.faceVertexUvs[0],d=this.colors,p=t.colors;void 0===i&&(i=0),void 0!==e&&(n=(new a).getNormalMatrix(e));
// vertices
for(var f=0,m=s.length;f<m;f++){var g=s[f].clone();void 0!==e&&g.applyMatrix4(e),o.push(g)}
// colors
for(var f=0,m=p.length;f<m;f++)d.push(p[f].clone());
// faces
for(f=0,m=h.length;f<m;f++){var v,y,x,b=h[f],_=b.vertexNormals,w=b.vertexColors;(v=new ht(b.a+r,b.b+r,b.c+r)).normal.copy(b.normal),void 0!==n&&v.normal.applyMatrix3(n).normalize();for(var M=0,E=_.length;M<E;M++)y=_[M].clone(),void 0!==n&&y.applyMatrix3(n).normalize(),v.vertexNormals.push(y);v.color.copy(b.color);for(var M=0,E=w.length;M<E;M++)x=w[M],v.vertexColors.push(x.clone());v.materialIndex=b.materialIndex+i,c.push(v)}
// uvs
for(f=0,m=u.length;f<m;f++){var T=u[f],S=[];if(void 0!==T){for(var M=0,E=T.length;M<E;M++)S.push(T[M].clone());l.push(S)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t)},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},/*
	 * Checks for duplicate vertices with hashmap.
	 * Duplicated vertices are removed
	 * and faces' vertices are updated.
	 */
mergeVertices:function(){var t,e,i,n,r,a,o,s,c={},h=[],l=[],u=Math.pow(10,4);for(i=0,n=this.vertices.length;i<n;i++)t=this.vertices[i],void 0===c[e=Math.round(t.x*u)+"_"+Math.round(t.y*u)+"_"+Math.round(t.z*u)]?(c[e]=i,h.push(this.vertices[i]),l[i]=h.length-1):
//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);
l[i]=l[c[e]];
// if faces are completely degenerate after merging vertices, we
// have to remove them from the geometry.
var d=[];for(i=0,n=this.faces.length;i<n;i++){(r=this.faces[i]).a=l[r.a],r.b=l[r.b],r.c=l[r.c],a=[r.a,r.b,r.c];
// if any duplicate vertices are found in a Face3
// we have to remove the face as nothing can be saved
for(var p=0;p<3;p++)if(a[p]===a[(p+1)%3]){d.push(i);break}}for(i=d.length-1;i>=0;i--){var f=d[i];for(this.faces.splice(f,1),o=0,s=this.faceVertexUvs.length;o<s;o++)this.faceVertexUvs[o].splice(f,1)}
// Use unique set of vertices
var m=this.vertices.length-h.length;return this.vertices=h,m},setFromPoints:function(t){this.vertices=[];for(var e=0,i=t.length;e<i;e++){var n=t[e];this.vertices.push(new r(n.x,n.y,n.z||0))}return this},sortFacesByMaterialIndex:function(){
// tag faces
for(var t=this.faces,e=t.length,i=0;i<e;i++)t[i]._id=i;t.sort(
// sort faces
function(t,e){return t.materialIndex-e.materialIndex});
// sort uvs
var n,r,a=this.faceVertexUvs[0],o=this.faceVertexUvs[1];a&&a.length===e&&(n=[]),o&&o.length===e&&(r=[]);for(i=0;i<e;i++){var s=t[i]._id;n&&n.push(a[s]),r&&r.push(o[s])}n&&(this.faceVertexUvs[0]=n),r&&(this.faceVertexUvs[1]=r)},toJSON:function(){function t(t,e,i){return i?t|1<<e:t&~(1<<e)}function e(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==d[e]?d[e]:(d[e]=u.length/3,u.push(t.x,t.y,t.z),d[e])}function i(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==f[e]?f[e]:(f[e]=p.length,p.push(t.getHex()),f[e])}function n(t){var e=t.x.toString()+t.y.toString();return void 0!==g[e]?g[e]:(g[e]=m.length/2,m.push(t.x,t.y),g[e])}var r={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(
// standard Geometry serialization
r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),void 0!==this.parameters){var a=this.parameters;for(var o in a)void 0!==a[o]&&(r[o]=a[o]);return r}for(var s=[],c=0;c<this.vertices.length;c++){var h=this.vertices[c];s.push(h.x,h.y,h.z)}for(var l=[],u=[],d={},p=[],f={},m=[],g={},c=0;c<this.faces.length;c++){var v=this.faces[c],y=void 0!==this.faceVertexUvs[0][c],x=v.normal.length()>0,b=v.vertexNormals.length>0,_=1!==v.color.r||1!==v.color.g||1!==v.color.b,w=v.vertexColors.length>0,M=0;if(M=t(M,0,0),// isQuad
M=t(M,1,!0),M=t(M,2,!1),M=t(M,3,y),M=t(M,4,x),M=t(M,5,b),M=t(M,6,_),M=t(M,7,w),l.push(M),l.push(v.a,v.b,v.c),l.push(v.materialIndex),y){var E=this.faceVertexUvs[0][c];l.push(n(E[0]),n(E[1]),n(E[2]))}if(x&&l.push(e(v.normal)),b){var T=v.vertexNormals;l.push(e(T[0]),e(T[1]),e(T[2]))}if(_&&l.push(i(v.color)),w){var S=v.vertexColors;l.push(i(S[0]),i(S[1]),i(S[2]))}}// temporal backward compatibility
return r.data={},r.data.vertices=s,r.data.normals=u,p.length>0&&(r.data.colors=p),m.length>0&&(r.data.uvs=[m]),r.data.faces=l,r},clone:function(){/*
		 // Handle primitives

		 var parameters = this.parameters;

		 if ( parameters !== undefined ) {

		 var values = [];

		 for ( var key in parameters ) {

		 values.push( parameters[ key ] );

		 }

		 var geometry = Object.create( this.constructor.prototype );
		 this.constructor.apply( geometry, values );
		 return geometry;

		 }

		 return new this.constructor().copy( this );
		 */
return(new lt).copy(this)},copy:function(t){var e,i,n,r,a,o;
// reset
this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,
// name
this.name=t.name;
// vertices
var s=t.vertices;for(e=0,i=s.length;e<i;e++)this.vertices.push(s[e].clone());
// colors
var c=t.colors;for(e=0,i=c.length;e<i;e++)this.colors.push(c[e].clone());
// faces
var h=t.faces;for(e=0,i=h.length;e<i;e++)this.faces.push(h[e].clone());
// face vertex uvs
for(e=0,i=t.faceVertexUvs.length;e<i;e++){var l=t.faceVertexUvs[e];for(void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]),n=0,r=l.length;n<r;n++){var u=l[n],d=[];for(a=0,o=u.length;a<o;a++){var p=u[a];d.push(p.clone())}this.faceVertexUvs[e].push(d)}}
// morph targets
var f=t.morphTargets;for(e=0,i=f.length;e<i;e++){var m={};
// vertices
if(m.name=f[e].name,void 0!==f[e].vertices)for(m.vertices=[],n=0,r=f[e].vertices.length;n<r;n++)m.vertices.push(f[e].vertices[n].clone());
// normals
if(void 0!==f[e].normals)for(m.normals=[],n=0,r=f[e].normals.length;n<r;n++)m.normals.push(f[e].normals[n].clone());this.morphTargets.push(m)}
// morph normals
var g=t.morphNormals;for(e=0,i=g.length;e<i;e++){var v={};
// vertex normals
if(void 0!==g[e].vertexNormals)for(v.vertexNormals=[],n=0,r=g[e].vertexNormals.length;n<r;n++){var y=g[e].vertexNormals[n],x={};x.a=y.a.clone(),x.b=y.b.clone(),x.c=y.c.clone(),v.vertexNormals.push(x)}
// face normals
if(void 0!==g[e].faceNormals)for(v.faceNormals=[],n=0,r=g[e].faceNormals.length;n<r;n++)v.faceNormals.push(g[e].faceNormals[n].clone());this.morphNormals.push(v)}
// skin weights
var b=t.skinWeights;for(e=0,i=b.length;e<i;e++)this.skinWeights.push(b[e].clone());
// skin indices
var _=t.skinIndices;for(e=0,i=_.length;e<i;e++)this.skinIndices.push(_[e].clone());
// line distances
var w=t.lineDistances;for(e=0,i=w.length;e<i;e++)this.lineDistances.push(w[e]);
// bounding box
var M=t.boundingBox;null!==M&&(this.boundingBox=M.clone());
// bounding sphere
var E=t.boundingSphere;
// update flags
return null!==E&&(this.boundingSphere=E.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(ut.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(ut.prototype,{isBufferAttribute:!0,setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==t?t.length/this.itemSize:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.dynamic=t.dynamic,this},copyAt:function(t,e,i){t*=this.itemSize,i*=e.itemSize;for(var n=0,r=this.itemSize;n<r;n++)this.array[t+n]=e.array[i+n];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),a=new j),e[i++]=a.r,e[i++]=a.g,e[i++]=a.b}return this},copyIndicesArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];e[i++]=a.a,e[i++]=a.b,e[i++]=a.c}return this},copyVector2sArray:function(t){for(var i=this.array,n=0,r=0,a=t.length;r<a;r++){var o=t[r];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),o=new e),i[n++]=o.x,i[n++]=o.y}return this},copyVector3sArray:function(t){for(var e=this.array,i=0,n=0,a=t.length;n<a;n++){var o=t[n];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),o=new r),e[i++]=o.x,e[i++]=o.y,e[i++]=o.z}return this},copyVector4sArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),a=new s),e[i++]=a.x,e[i++]=a.y,e[i++]=a.z,e[i++]=a.w}return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),(dt.prototype=Object.create(ut.prototype)).constructor=dt,(pt.prototype=Object.create(ut.prototype)).constructor=pt,(ft.prototype=Object.create(ut.prototype)).constructor=ft,(mt.prototype=Object.create(ut.prototype)).constructor=mt,(gt.prototype=Object.create(ut.prototype)).constructor=gt,(vt.prototype=Object.create(ut.prototype)).constructor=vt,(yt.prototype=Object.create(ut.prototype)).constructor=yt,(xt.prototype=Object.create(ut.prototype)).constructor=xt,(bt.prototype=Object.create(ut.prototype)).constructor=bt,Object.assign(_t.prototype,{computeGroups:function(t){for(var e,i=[],n=void 0,r=t.faces,a=0;a<r.length;a++){var o=r[a];
// materials
o.materialIndex!==n&&(n=o.materialIndex,void 0!==e&&(e.count=3*a-e.start,i.push(e)),e={start:3*a,materialIndex:n})}void 0!==e&&(e.count=3*a-e.start,i.push(e)),this.groups=i},fromGeometry:function(t){var i,n=t.faces,r=t.vertices,a=t.faceVertexUvs,o=a[0]&&a[0].length>0,s=a[1]&&a[1].length>0,c=t.morphTargets,h=c.length;if(h>0){i=[];for(v=0;v<h;v++)i[v]=[];this.morphTargets.position=i}var l,u=t.morphNormals,d=u.length;if(d>0){l=[];for(v=0;v<d;v++)l[v]=[];this.morphTargets.normal=l}
//
for(var p=t.skinIndices,f=t.skinWeights,m=p.length===r.length,g=f.length===r.length,v=0;v<n.length;v++){var y=n[v];this.vertices.push(r[y.a],r[y.b],r[y.c]);var x=y.vertexNormals;if(3===x.length)this.normals.push(x[0],x[1],x[2]);else{var b=y.normal;this.normals.push(b,b,b)}var _=y.vertexColors;if(3===_.length)this.colors.push(_[0],_[1],_[2]);else{var w=y.color;this.colors.push(w,w,w)}if(!0===o){void 0!==(M=a[0][v])?this.uvs.push(M[0],M[1],M[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",v),this.uvs.push(new e,new e,new e))}if(!0===s){var M=a[1][v];void 0!==M?this.uvs2.push(M[0],M[1],M[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",v),this.uvs2.push(new e,new e,new e))}
// morphs
for(T=0;T<h;T++){var E=c[T].vertices;i[T].push(E[y.a],E[y.b],E[y.c])}for(var T=0;T<d;T++){var S=u[T].vertexNormals[v];l[T].push(S.a,S.b,S.c)}
// skins
m&&this.skinIndices.push(p[y.a],p[y.b],p[y.c]),g&&this.skinWeights.push(f[y.a],f[y.b],f[y.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this}});/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 */
var Mu=1;Object.assign(Mt.prototype,t.prototype,{isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(wt(t)>65535?yt:gt)(t,1):this.index=t},addAttribute:function(t,e){return e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),void this.setIndex(e)):(this.attributes[t]=e,this):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void this.addAttribute(t,new ut(arguments[1],arguments[2])))},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,i){this.groups.push({start:t,count:e,materialIndex:void 0!==i?i:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToBufferAttribute(e),e.needsUpdate=!0);var i=this.attributes.normal;if(void 0!==i){(new a).getNormalMatrix(t).applyToBufferAttribute(i),i.needsUpdate=!0}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){
// rotate geometry around world x-axis
var t=new i;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){
// rotate geometry around world y-axis
var t=new i;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){
// rotate geometry around world z-axis
var t=new i;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){
// translate geometry
var t=new i;return function(e,i,n){return t.makeTranslation(e,i,n),this.applyMatrix(t),this}}(),scale:function(){
// scale geometry
var t=new i;return function(e,i,n){return t.makeScale(e,i,n),this.applyMatrix(t),this}}(),lookAt:function(){var t=new ot;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},setFromObject:function(t){
// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );
var e=t.geometry;if(t.isPoints||t.isLine){var i=new xt(3*e.vertices.length,3),n=new xt(3*e.colors.length,3);if(this.addAttribute("position",i.copyVector3sArray(e.vertices)),this.addAttribute("color",n.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var r=new xt(e.lineDistances.length,1);this.addAttribute("lineDistance",r.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){for(var e=[],i=0,n=t.length;i<n;i++){var r=t[i];e.push(r.x,r.y,r.z||0)}return this.addAttribute("position",new xt(e,3)),this},updateFromObject:function(t){var e=t.geometry;if(t.isMesh){var i=e.__directGeometry;if(!0===e.elementsNeedUpdate&&(i=void 0,e.elementsNeedUpdate=!1),void 0===i)return this.fromGeometry(e);i.verticesNeedUpdate=e.verticesNeedUpdate,i.normalsNeedUpdate=e.normalsNeedUpdate,i.colorsNeedUpdate=e.colorsNeedUpdate,i.uvsNeedUpdate=e.uvsNeedUpdate,i.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=i}var n;return!0===e.verticesNeedUpdate&&(void 0!==(n=this.attributes.position)&&(n.copyVector3sArray(e.vertices),n.needsUpdate=!0),e.verticesNeedUpdate=!1),!0===e.normalsNeedUpdate&&(void 0!==(n=this.attributes.normal)&&(n.copyVector3sArray(e.normals),n.needsUpdate=!0),e.normalsNeedUpdate=!1),!0===e.colorsNeedUpdate&&(void 0!==(n=this.attributes.color)&&(n.copyColorsArray(e.colors),n.needsUpdate=!0),e.colorsNeedUpdate=!1),e.uvsNeedUpdate&&(void 0!==(n=this.attributes.uv)&&(n.copyVector2sArray(e.uvs),n.needsUpdate=!0),e.uvsNeedUpdate=!1),e.lineDistancesNeedUpdate&&(void 0!==(n=this.attributes.lineDistance)&&(n.copyArray(e.lineDistances),n.needsUpdate=!0),e.lineDistancesNeedUpdate=!1),e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new _t).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(3*t.vertices.length);if(this.addAttribute("position",new ut(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var i=new Float32Array(3*t.normals.length);this.addAttribute("normal",new ut(i,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var n=new Float32Array(3*t.colors.length);this.addAttribute("color",new ut(n,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var r=new Float32Array(2*t.uvs.length);this.addAttribute("uv",new ut(r,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var a=new Float32Array(2*t.uvs2.length);this.addAttribute("uv2",new ut(a,2).copyVector2sArray(t.uvs2))}if(t.indices.length>0){var o=new(wt(t.indices)>65535?Uint32Array:Uint16Array)(3*t.indices.length);this.setIndex(new ut(o,1).copyIndicesArray(t.indices))}
// groups
this.groups=t.groups;
// morphs
for(var s in t.morphTargets){for(var c=[],h=t.morphTargets[s],l=0,u=h.length;l<u;l++){var d=h[l],p=new xt(3*d.length,3);c.push(p.copyVector3sArray(d))}this.morphAttributes[s]=c}
// skinning
if(t.skinIndices.length>0){var f=new xt(4*t.skinIndices.length,4);this.addAttribute("skinIndex",f.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var m=new xt(4*t.skinWeights.length,4);this.addAttribute("skinWeight",m.copyVector4sArray(t.skinWeights))}
//
return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new K);var t=this.attributes.position;void 0!==t?this.boundingBox.setFromBufferAttribute(t):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var t=new K,e=new r;return function(){null===this.boundingSphere&&(this.boundingSphere=new $);var i=this.attributes.position;if(i){var n=this.boundingSphere.center;t.setFromBufferAttribute(i),t.getCenter(n);for(var r=0,a=0,o=i.count;a<o;a++)e.x=i.getX(a),e.y=i.getY(a),e.z=i.getZ(a),r=Math.max(r,n.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes,i=this.groups;if(e.position){var n=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new ut(new Float32Array(n.length),3));else for(var a=e.normal.array,o=0,s=a.length;o<s;o++)a[o]=0;var c,h,l,u=e.normal.array,d=new r,p=new r,f=new r,m=new r,g=new r;
// indexed elements
if(t){var v=t.array;0===i.length&&this.addGroup(0,v.length);for(var y=0,x=i.length;y<x;++y)for(var b=i[y],_=b.start,o=_,s=_+b.count;o<s;o+=3)c=3*v[o+0],h=3*v[o+1],l=3*v[o+2],d.fromArray(n,c),p.fromArray(n,h),f.fromArray(n,l),m.subVectors(f,p),g.subVectors(d,p),m.cross(g),u[c]+=m.x,u[c+1]+=m.y,u[c+2]+=m.z,u[h]+=m.x,u[h+1]+=m.y,u[h+2]+=m.z,u[l]+=m.x,u[l+1]+=m.y,u[l+2]+=m.z}else
// non-indexed elements (unconnected triangle soup)
for(var o=0,s=n.length;o<s;o+=9)d.fromArray(n,o),p.fromArray(n,o+3),f.fromArray(n,o+6),m.subVectors(f,p),g.subVectors(d,p),m.cross(g),u[o]=m.x,u[o+1]=m.y,u[o+2]=m.z,u[o+3]=m.x,u[o+4]=m.y,u[o+5]=m.z,u[o+6]=m.x,u[o+7]=m.y,u[o+8]=m.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(t&&t.isBufferGeometry){void 0===e&&(e=0);var i=this.attributes;for(var n in i)if(void 0!==t.attributes[n])for(var r=i[n].array,a=t.attributes[n],o=a.array,s=0,c=a.itemSize*e;s<o.length;s++,c++)r[c]=o[s];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t)},normalizeNormals:function(){var t=new r;return function(){for(var e=this.attributes.normal,i=0,n=e.count;i<n;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.normalize(),e.setXYZ(i,t.x,t.y,t.z)}}(),toNonIndexed:function(){if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t=new Mt,e=this.index.array,i=this.attributes;for(var n in i){for(var r=i[n],a=r.array,o=r.itemSize,s=new a.constructor(e.length*o),c=0,h=0,l=0,u=e.length;l<u;l++){c=e[l]*o;for(var d=0;d<o;d++)s[h++]=a[c++]}t.addAttribute(n,new ut(s,o))}return t},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(
// standard BufferGeometry serialization
t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};var n=this.index;if(null!==n){o=Array.prototype.slice.call(n.array);t.data.index={type:n.array.constructor.name,array:o}}var r=this.attributes;for(var i in r){var a=r[i],o=Array.prototype.slice.call(a.array);t.data.attributes[i]={itemSize:a.itemSize,type:a.array.constructor.name,array:o,normalized:a.normalized}}var s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));var c=this.boundingSphere;return null!==c&&(t.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),t},clone:function(){/*
		 // Handle primitives

		 var parameters = this.parameters;

		 if ( parameters !== undefined ) {

		 var values = [];

		 for ( var key in parameters ) {

		 values.push( parameters[ key ] );

		 }

		 var geometry = Object.create( this.constructor.prototype );
		 this.constructor.apply( geometry, values );
		 return geometry;

		 }

		 return new this.constructor().copy( this );
		 */
return(new Mt).copy(this)},copy:function(t){var e,i,n;
// reset
this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,
// name
this.name=t.name;
// index
var r=t.index;null!==r&&this.setIndex(r.clone());
// attributes
var a=t.attributes;for(e in a){var o=a[e];this.addAttribute(e,o.clone())}
// morph attributes
var s=t.morphAttributes;for(e in s){var c=[],h=s[e];// morphAttribute: array of Float32BufferAttributes
for(i=0,n=h.length;i<n;i++)c.push(h[i].clone());this.morphAttributes[e]=c}
// groups
var l=t.groups;for(i=0,n=l.length;i<n;i++){var u=l[i];this.addGroup(u.start,u.count,u.materialIndex)}
// bounding box
var d=t.boundingBox;null!==d&&(this.boundingBox=d.clone());
// bounding sphere
var p=t.boundingSphere;
// draw range
return null!==p&&(this.boundingSphere=p.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),(Et.prototype=Object.create(lt.prototype)).constructor=Et,(Tt.prototype=Object.create(Mt.prototype)).constructor=Tt,(St.prototype=Object.create(lt.prototype)).constructor=St,(At.prototype=Object.create(Mt.prototype)).constructor=At,(Lt.prototype=Object.create(Z.prototype)).constructor=Lt,Lt.prototype.isMeshBasicMaterial=!0,Lt.prototype.copy=function(t){return Z.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this},(Rt.prototype=Object.create(Z.prototype)).constructor=Rt,Rt.prototype.isShaderMaterial=!0,Rt.prototype.copy=function(t){return Z.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=vu.clone(t.uniforms),this.defines=t.defines,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this},Rt.prototype.toJSON=function(t){var e=Z.prototype.toJSON.call(this,t);return e.uniforms=this.uniforms,e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e},Object.assign(Pt.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return(e||new r).copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(){var t=new r;return function(e){return this.origin.copy(this.at(e,t)),this}}(),closestPointToPoint:function(t,e){var i=e||new r;i.subVectors(t,this.origin);var n=i.dot(this.direction);return n<0?i.copy(this.origin):i.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(){var t=new r;return function(e){var i=t.subVectors(e,this.origin).dot(this.direction);
// point behind the ray
// point behind the ray
return i<0?this.origin.distanceToSquared(e):(t.copy(this.direction).multiplyScalar(i).add(this.origin),t.distanceToSquared(e))}}(),distanceSqToSegment:function(){var t=new r,e=new r,i=new r;return function(n,r,a,o){
// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h
// It returns the min distance between the ray and the segment
// defined by v0 and v1
// It can also set two optional targets :
// - The closest point on the ray
// - The closest point on the segment
t.copy(n).add(r).multiplyScalar(.5),e.copy(r).sub(n).normalize(),i.copy(this.origin).sub(t);var s,c,h,l,u=.5*n.distanceTo(r),d=-this.direction.dot(e),p=i.dot(this.direction),f=-i.dot(e),m=i.lengthSq(),g=Math.abs(1-d*d);if(g>0)if(
// The ray and segment are not parallel.
s=d*f-p,c=d*p-f,l=u*g,s>=0)if(c>=-l)if(c<=l){
// region 0
// Minimum at interior points of ray and segment.
var v=1/g;h=(s*=v)*(s+d*(c*=v)+2*p)+c*(d*s+c+2*f)+m}else
// region 1
c=u,h=-(s=Math.max(0,-(d*c+p)))*s+c*(c+2*f)+m;else
// region 5
c=-u,h=-(s=Math.max(0,-(d*c+p)))*s+c*(c+2*f)+m;else c<=-l?h=-(
// region 4
s=Math.max(0,-(-d*u+p)))*s+(c=s>0?-u:Math.min(Math.max(-u,-f),u))*(c+2*f)+m:c<=l?(
// region 3
s=0,h=(c=Math.min(Math.max(-u,-f),u))*(c+2*f)+m):h=-(
// region 2
s=Math.max(0,-(d*u+p)))*s+(c=s>0?u:Math.min(Math.max(-u,-f),u))*(c+2*f)+m;else
// Ray and segment are parallel.
c=d>0?-u:u,h=-(s=Math.max(0,-(d*c+p)))*s+c*(c+2*f)+m;return a&&a.copy(this.direction).multiplyScalar(s).add(this.origin),o&&o.copy(e).multiplyScalar(c).add(t),h}}(),intersectSphere:function(){var t=new r;return function(e,i){t.subVectors(e.center,this.origin);var n=t.dot(this.direction),r=t.dot(t)-n*n,a=e.radius*e.radius;if(r>a)return null;var o=Math.sqrt(a-r),s=n-o,c=n+o;
// test to see if both t0 and t1 are behind the ray - if so, return null
// test to see if both t0 and t1 are behind the ray - if so, return null
// test to see if t0 is behind the ray:
// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,
// in order to always return an intersect point that is in front of the ray.
return s<0&&c<0?null:s<0?this.at(c,i):this.at(s,i)}}(),intersectsSphere:function(t){return this.distanceToPoint(t.center)<=t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0===e)
// line is coplanar, return origin
// line is coplanar, return origin
return 0===t.distanceToPoint(this.origin)?0:null;var i=-(this.origin.dot(t.normal)+t.constant)/e;
// Return if the ray never intersects the plane
return i>=0?i:null},intersectPlane:function(t,e){var i=this.distanceToPlane(t);return null===i?null:this.at(i,e)},intersectsPlane:function(t){
// check if the ray lies on the plane first
var e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0},intersectBox:function(t,e){var i,n,r,a,o,s,c=1/this.direction.x,h=1/this.direction.y,l=1/this.direction.z,u=this.origin;
// These lines also handle the case where tmin or tmax is NaN
// (result of 0 * Infinity). x !== x returns true if x is NaN
//return point closest to the ray (positive side)
return c>=0?(i=(t.min.x-u.x)*c,n=(t.max.x-u.x)*c):(i=(t.max.x-u.x)*c,n=(t.min.x-u.x)*c),h>=0?(r=(t.min.y-u.y)*h,a=(t.max.y-u.y)*h):(r=(t.max.y-u.y)*h,a=(t.min.y-u.y)*h),i>a||r>n?null:((r>i||i!=i)&&(i=r),(a<n||n!=n)&&(n=a),l>=0?(o=(t.min.z-u.z)*l,s=(t.max.z-u.z)*l):(o=(t.max.z-u.z)*l,s=(t.min.z-u.z)*l),i>s||o>n?null:((o>i||i!=i)&&(i=o),(s<n||n!=n)&&(n=s),n<0?null:this.at(i>=0?i:n,e)))},intersectsBox:function(){var t=new r;return function(e){return null!==this.intersectBox(e,t)}}(),intersectTriangle:function(){
// Compute the offset origin, edges, and normal.
var t=new r,e=new r,i=new r,n=new r;return function(r,a,o,s,c){
// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h
e.subVectors(a,r),i.subVectors(o,r),n.crossVectors(e,i);
// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,
// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by
//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))
//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))
//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)
var h,l=this.direction.dot(n);if(l>0){if(s)return null;h=1}else{if(!(l<0))return null;h=-1,l=-l}t.subVectors(this.origin,r);var u=h*this.direction.dot(i.crossVectors(t,i));
// b1 < 0, no intersection
if(u<0)return null;var d=h*this.direction.dot(e.cross(t));
// b2 < 0, no intersection
if(d<0)return null;
// b1+b2 > 1, no intersection
if(u+d>l)return null;
// Line intersects triangle, check if ray does.
var p=-h*t.dot(n);
// t < 0, no intersection
// t < 0, no intersection
return p<0?null:this.at(p/l,c)}}(),applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}),Object.assign(Ct.prototype,{set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){return(t||new r).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return(t||new r).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){var i=e||new r;return this.delta(i).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var t=new r,e=new r;return function(i,n){t.subVectors(i,this.start),e.subVectors(this.end,this.start);var r=e.dot(e),a=e.dot(t)/r;return n&&(a=ou.clamp(a,0,1)),a}}(),closestPointToPoint:function(t,e,i){var n=this.closestPointToPointParameter(t,e),a=i||new r;return this.delta(a).multiplyScalar(n).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}),Object.assign(It,{normal:function(){var t=new r;return function(e,i,n,a){var o=a||new r;o.subVectors(n,i),t.subVectors(e,i),o.cross(t);var s=o.lengthSq();return s>0?o.multiplyScalar(1/Math.sqrt(s)):o.set(0,0,0)}}(),
// static/instance method to calculate barycentric coordinates
// based on: http://www.blackpawn.com/texts/pointinpoly/default.html
barycoordFromPoint:function(){var t=new r,e=new r,i=new r;return function(n,a,o,s,c){t.subVectors(s,a),e.subVectors(o,a),i.subVectors(n,a);var h=t.dot(t),l=t.dot(e),u=t.dot(i),d=e.dot(e),p=e.dot(i),f=h*d-l*l,m=c||new r;
// collinear or singular triangle
if(0===f)
// arbitrary location outside of triangle?
// not sure if this is the best idea, maybe should be returning undefined
return m.set(-2,-1,-1);var g=1/f,v=(d*u-l*p)*g,y=(h*p-l*u)*g;
// barycentric coordinates must always sum to 1
return m.set(1-v-y,y,v)}}(),containsPoint:function(){var t=new r;return function(e,i,n,r){var a=It.barycoordFromPoint(e,i,n,r,t);return a.x>=0&&a.y>=0&&a.x+a.y<=1}}()}),Object.assign(It.prototype,{set:function(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this},setFromPointsAndIndices:function(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},area:function(){var t=new r,e=new r;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),.5*t.cross(e).length()}}(),midpoint:function(t){return(t||new r).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(t){return It.normal(this.a,this.b,this.c,t)},plane:function(t){return(t||new tt).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(t,e){return It.barycoordFromPoint(t,this.a,this.b,this.c,e)},containsPoint:function(t){return It.containsPoint(t,this.a,this.b,this.c)},closestPointToPoint:function(){var t=new tt,e=[new Ct,new Ct,new Ct],i=new r,n=new r;return function(a,o){var s=o||new r,c=1/0;
// check if the projection lies within the triangle
if(
// project the point onto the plane of the triangle
t.setFromCoplanarPoints(this.a,this.b,this.c),t.projectPoint(a,i),!0===this.containsPoint(i))
// if so, this is the closest point
s.copy(i);else{
// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices
e[0].set(this.a,this.b),e[1].set(this.b,this.c),e[2].set(this.c,this.a);for(var h=0;h<e.length;h++){e[h].closestPointToPoint(i,!0,n);var l=i.distanceToSquared(n);l<c&&(c=l,s.copy(n))}}return s}}(),equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}),Ut.prototype=Object.assign(Object.create(ot.prototype),{constructor:Ut,isMesh:!0,setDrawMode:function(t){this.drawMode=t},copy:function(t){return ot.prototype.copy.call(this,t),this.drawMode=t.drawMode,void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this},updateMorphTargets:function(){var t,e,i,n=this.geometry;if(n.isBufferGeometry){var r=n.morphAttributes,a=Object.keys(r);if(a.length>0){var o=r[a[0]];if(void 0!==o)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=o.length;t<e;t++)i=o[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}else{var s=n.morphTargets;if(void 0!==s&&s.length>0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=s.length;t<e;t++)i=s[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}},raycast:function(){function t(t,e,i,n,r,a,o){return It.barycoordFromPoint(t,e,i,n,y),r.multiplyScalar(y.x),a.multiplyScalar(y.y),o.multiplyScalar(y.z),r.add(a).add(o),r.clone()}function n(t,e,i,n,r,a,o,s){if(null===(e.side===ph?n.intersectTriangle(o,a,r,!0,s):n.intersectTriangle(r,a,o,e.side!==fh,s)))return null;b.copy(s),b.applyMatrix4(t.matrixWorld);var c=i.ray.origin.distanceTo(b);return c<i.near||c>i.far?null:{distance:c,point:b.clone(),object:t}}function a(e,i,r,a,o,s,c,d){h.fromBufferAttribute(a,s),l.fromBufferAttribute(a,c),u.fromBufferAttribute(a,d);var p=n(e,e.material,i,r,h,l,u,x);return p&&(o&&(m.fromBufferAttribute(o,s),g.fromBufferAttribute(o,c),v.fromBufferAttribute(o,d),p.uv=t(x,h,l,u,m,g,v)),p.face=new ht(s,c,d,It.normal(h,l,u)),p.faceIndex=s),p}var o=new i,s=new Pt,c=new $,h=new r,l=new r,u=new r,d=new r,p=new r,f=new r,m=new e,g=new e,v=new e,y=new r,x=new r,b=new r;return function(e,i){var r=this.geometry,y=this.material,b=this.matrixWorld;if(void 0!==y&&(
// Checking boundingSphere distance to ray
null===r.boundingSphere&&r.computeBoundingSphere(),c.copy(r.boundingSphere),c.applyMatrix4(b),!1!==e.ray.intersectsSphere(c)&&(
//
o.getInverse(b),s.copy(e.ray).applyMatrix4(o),null===r.boundingBox||!1!==s.intersectsBox(r.boundingBox))))
// Check boundingBox before continuing
{var _;if(r.isBufferGeometry){var w,M,E,T,S,A=r.index,L=r.attributes.position,R=r.attributes.uv;if(null!==A)
// indexed buffer geometry
for(T=0,S=A.count;T<S;T+=3)w=A.getX(T),M=A.getX(T+1),E=A.getX(T+2),(_=a(this,e,s,L,R,w,M,E))&&(_.faceIndex=Math.floor(T/3),// triangle number in indices buffer semantics
i.push(_));else if(void 0!==L)
// non-indexed buffer geometry
for(T=0,S=L.count;T<S;T+=3)(_=a(this,e,s,L,R,w=T,M=T+1,E=T+2))&&(_.index=w,// triangle number in positions buffer semantics
i.push(_))}else if(r.isGeometry){var P,C,I,U,N=Array.isArray(y),O=r.vertices,D=r.faces,F=r.faceVertexUvs[0];F.length>0&&(U=F);for(var B=0,z=D.length;B<z;B++){var G=D[B],H=N?y[G.materialIndex]:y;if(void 0!==H){if(P=O[G.a],C=O[G.b],I=O[G.c],!0===H.morphTargets){var V=r.morphTargets,k=this.morphTargetInfluences;h.set(0,0,0),l.set(0,0,0),u.set(0,0,0);for(var j=0,W=V.length;j<W;j++){var X=k[j];if(0!==X){var q=V[j].vertices;h.addScaledVector(d.subVectors(q[G.a],P),X),l.addScaledVector(p.subVectors(q[G.b],C),X),u.addScaledVector(f.subVectors(q[G.c],I),X)}}h.add(P),l.add(C),u.add(I),P=h,C=l,I=u}if(_=n(this,H,e,s,P,C,I,x)){if(U&&U[B]){var Y=U[B];m.copy(Y[0]),g.copy(Y[1]),v.copy(Y[2]),_.uv=t(x,P,C,I,m,g,v)}_.face=G,_.faceIndex=B,i.push(_)}}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});/**
 * @author mrdoob / http://mrdoob.com/
 */
var Eu=0;Zt.prototype=Object.assign(Object.create(st.prototype),{constructor:Zt,isPerspectiveCamera:!0,copy:function(t,e){return st.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},/**
	 * Sets the FOV by focal length in respect to the current .filmGauge.
	 *
	 * The default film gauge is 35, so that the focal length can be specified for
	 * a 35mm (full frame) camera.
	 *
	 * Values for focal length and film gauge must have the same unit.
	 */
setFocalLength:function(t){
// see http://www.bobatkins.com/photography/technical/field_of_view.html
var e=.5*this.getFilmHeight()/t;this.fov=2*ou.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},/**
	 * Calculates the focal length from the current .fov and .filmGauge.
	 */
getFocalLength:function(){var t=Math.tan(.5*ou.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*ou.RAD2DEG*Math.atan(Math.tan(.5*ou.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){
// film not completely covered in portrait format (aspect < 1)
return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){
// film not completely covered in landscape format (aspect > 1)
return this.filmGauge/Math.max(this.aspect,1)},/**
	 * Sets an offset in a larger frustum. This is useful for multi-window or
	 * multi-monitor/multi-machine setups.
	 *
	 * For example, if you have 3x2 monitors and each monitor is 1920x1080 and
	 * the monitors are in grid like this
	 *
	 *   +---+---+---+
	 *   | A | B | C |
	 *   +---+---+---+
	 *   | D | E | F |
	 *   +---+---+---+
	 *
	 * then for each monitor you would call it like this
	 *
	 *   var w = 1920;
	 *   var h = 1080;
	 *   var fullWidth = w * 3;
	 *   var fullHeight = h * 2;
	 *
	 *   --A--
	 *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );
	 *   --B--
	 *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );
	 *   --C--
	 *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );
	 *   --D--
	 *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );
	 *   --E--
	 *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );
	 *   --F--
	 *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );
	 *
	 *   Note there is no reason monitors have to be the same size or in a grid.
	 */
setViewOffset:function(t,e,i,n,r,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Math.tan(.5*ou.DEG2RAD*this.fov)/this.zoom,i=2*e,n=this.aspect*i,r=-.5*n,a=this.view;if(null!==this.view&&this.view.enabled){var o=a.fullWidth,s=a.fullHeight;r+=a.offsetX*n/o,e-=a.offsetY*i/s,n*=a.width/o,i*=a.height/s}var c=this.filmOffset;0!==c&&(r+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,e,e-i,t,this.far)},toJSON:function(t){var e=ot.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}),Jt.prototype=Object.assign(Object.create(Zt.prototype),{constructor:Jt,isArrayCamera:!0}),Kt.prototype.isFogExp2=!0,Kt.prototype.clone=function(){return new Kt(this.color.getHex(),this.density)},Kt.prototype.toJSON=function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}},$t.prototype.isFog=!0,$t.prototype.clone=function(){return new $t(this.color.getHex(),this.near,this.far)},$t.prototype.toJSON=function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}},te.prototype=Object.assign(Object.create(ot.prototype),{constructor:te,copy:function(t,e){return ot.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=ot.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}),ee.prototype=Object.assign(Object.create(ot.prototype),{constructor:ee,isLensFlare:!0,copy:function(t){ot.prototype.copy.call(this,t),this.positionScreen.copy(t.positionScreen),this.customUpdateCallback=t.customUpdateCallback;for(var e=0,i=t.lensFlares.length;e<i;e++)this.lensFlares.push(t.lensFlares[e]);return this},add:function(t,e,i,n,r,a){void 0===e&&(e=-1),void 0===i&&(i=0),void 0===a&&(a=1),void 0===r&&(r=new j(16777215)),void 0===n&&(n=xh),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:t,// THREE.Texture
size:e,// size in pixels (-1 = use texture.width)
distance:i,// distance (0-1) from light source (0=at light source)
x:0,y:0,z:0,// screen position (-1 => 1) z = 0 is in front z = 1 is back
scale:1,// scale
rotation:0,// rotation
opacity:a,// opacity
color:r,// color
blending:n})},/*
	 * Update lens flares update positions on all flares based on the screen position
	 * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.
	 */
updateLensFlares:function(){var t,e,i=this.lensFlares.length,n=2*-this.positionScreen.x,r=2*-this.positionScreen.y;for(t=0;t<i;t++)(e=this.lensFlares[t]).x=this.positionScreen.x+n*e.distance,e.y=this.positionScreen.y+r*e.distance,e.wantedRotation=e.x*Math.PI*.25,e.rotation+=.25*(e.wantedRotation-e.rotation)}}),(ie.prototype=Object.create(Z.prototype)).constructor=ie,ie.prototype.isSpriteMaterial=!0,ie.prototype.copy=function(t){return Z.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.rotation=t.rotation,this},ne.prototype=Object.assign(Object.create(ot.prototype),{constructor:ne,isSprite:!0,raycast:function(){var t=new r,e=new r,i=new r;return function(n,r){e.setFromMatrixPosition(this.matrixWorld),n.ray.closestPointToPoint(e,t),i.setFromMatrixScale(this.matrixWorld);var a=i.x*i.y/4;if(!(e.distanceToSquared(t)>a)){var o=n.ray.origin.distanceTo(t);o<n.near||o>n.far||r.push({distance:o,point:t.clone(),face:null,object:this})}}}(),clone:function(){return new this.constructor(this.material).copy(this)}}),re.prototype=Object.assign(Object.create(ot.prototype),{constructor:re,copy:function(t){ot.prototype.copy.call(this,t,!1);for(var e=t.levels,i=0,n=e.length;i<n;i++){var r=e[i];this.addLevel(r.object.clone(),r.distance)}return this},addLevel:function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var i=this.levels,n=0;n<i.length&&!(e<i[n].distance);n++);i.splice(n,0,{distance:e,object:t}),this.add(t)},getObjectForDistance:function(t){for(var e=this.levels,i=1,n=e.length;i<n&&!(t<e[i].distance);i++);return e[i-1].object},raycast:function(){var t=new r;return function(e,i){t.setFromMatrixPosition(this.matrixWorld);var n=e.ray.origin.distanceTo(t);this.getObjectForDistance(n).raycast(e,i)}}(),update:function(){var t=new r,e=new r;return function(i){var n=this.levels;if(n.length>1){t.setFromMatrixPosition(i.matrixWorld),e.setFromMatrixPosition(this.matrixWorld);var r=t.distanceTo(e);n[0].object.visible=!0;for(var a=1,o=n.length;a<o&&r>=n[a].distance;a++)n[a-1].object.visible=!1,n[a].object.visible=!0;for(;a<o;a++)n[a].object.visible=!1}}}(),toJSON:function(t){var e=ot.prototype.toJSON.call(this,t);e.object.levels=[];for(var i=this.levels,n=0,r=i.length;n<r;n++){var a=i[n];e.object.levels.push({object:a.object.uuid,distance:a.distance})}return e}}),Object.assign(ae.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var n=new i;this.bones[t]&&n.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(n)}},pose:function(){var t,e,i;
// recover the bind-time world matrices
for(e=0,i=this.bones.length;e<i;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);
// compute the local matrices, positions, rotations and scales
for(e=0,i=this.bones.length;e<i;e++)(t=this.bones[e])&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},update:function(){var t=new i,e=new i;return function(){
// flatten bone matrices to array
for(var i=this.bones,n=this.boneInverses,r=this.boneMatrices,a=this.boneTexture,o=0,s=i.length;o<s;o++){
// compute the offset between the current and the original transform
var c=i[o]?i[o].matrixWorld:e;t.multiplyMatrices(c,n[o]),t.toArray(r,16*o)}void 0!==a&&(a.needsUpdate=!0)}}(),clone:function(){return new ae(this.bones,this.boneInverses)}}),oe.prototype=Object.assign(Object.create(ot.prototype),{constructor:oe,isBone:!0}),se.prototype=Object.assign(Object.create(Ut.prototype),{constructor:se,isSkinnedMesh:!0,initBones:function(){var t,e,i,n,r=[];if(this.geometry&&void 0!==this.geometry.bones){
// first, create array of 'Bone' objects from geometry data
for(i=0,n=this.geometry.bones.length;i<n;i++)e=this.geometry.bones[i],
// create new 'Bone' object
t=new oe,r.push(t),
// apply values
t.name=e.name,t.position.fromArray(e.pos),t.quaternion.fromArray(e.rotq),void 0!==e.scl&&t.scale.fromArray(e.scl);
// second, create bone hierarchy
for(i=0,n=this.geometry.bones.length;i<n;i++)-1!==(e=this.geometry.bones[i]).parent&&null!==e.parent&&void 0!==r[e.parent]?
// subsequent bones in the hierarchy
r[e.parent].add(r[i]):
// topmost bone, immediate child of the skinned mesh
this.add(r[i])}
// now the bones are part of the scene graph and children of the skinned mesh.
// let's update the corresponding matrices
return this.updateMatrixWorld(!0),r},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var t,e;if(this.geometry&&this.geometry.isGeometry)for(e=0;e<this.geometry.skinWeights.length;e++){var i=this.geometry.skinWeights[e];(t=1/i.manhattanLength())!==1/0?i.multiplyScalar(t):i.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry){var n=new s,r=this.geometry.attributes.skinWeight;for(e=0;e<r.count;e++)n.x=r.getX(e),n.y=r.getY(e),n.z=r.getZ(e),n.w=r.getW(e),(t=1/n.manhattanLength())!==1/0?n.multiplyScalar(t):n.set(1,0,0,0),r.setXYZW(e,n.x,n.y,n.z,n.w)}},updateMatrixWorld:function(t){Ut.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),(ce.prototype=Object.create(Z.prototype)).constructor=ce,ce.prototype.isLineBasicMaterial=!0,ce.prototype.copy=function(t){return Z.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this},he.prototype=Object.assign(Object.create(ot.prototype),{constructor:he,isLine:!0,raycast:function(){var t=new i,e=new Pt,n=new $;return function(i,a){var o=i.linePrecision,s=o*o,c=this.geometry,h=this.matrixWorld;if(
// Checking boundingSphere distance to ray
null===c.boundingSphere&&c.computeBoundingSphere(),n.copy(c.boundingSphere),n.applyMatrix4(h),!1!==i.ray.intersectsSphere(n)){
//
t.getInverse(h),e.copy(i.ray).applyMatrix4(t);var l=new r,u=new r,d=new r,p=new r,f=this&&this.isLineSegments?2:1;if(c.isBufferGeometry){var m=c.index,g=c.attributes.position.array;if(null!==m)for(var v=m.array,y=0,x=v.length-1;y<x;y+=f){var b=v[y],_=v[y+1];l.fromArray(g,3*b),u.fromArray(g,3*_);if(!((E=e.distanceSqToSegment(l,u,p,d))>s)){p.applyMatrix4(this.matrixWorld);(T=i.ray.origin.distanceTo(p))<i.near||T>i.far||a.push({distance:T,
// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:d.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else for(var y=0,x=g.length/3-1;y<x;y+=f){l.fromArray(g,3*y),u.fromArray(g,3*y+3);if(!((E=e.distanceSqToSegment(l,u,p,d))>s)){p.applyMatrix4(this.matrixWorld);(T=i.ray.origin.distanceTo(p))<i.near||T>i.far||a.push({distance:T,
// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:d.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}else if(c.isGeometry)for(var w=c.vertices,M=w.length,y=0;y<M-1;y+=f){var E=e.distanceSqToSegment(w[y],w[y+1],p,d);if(!(E>s)){p.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation
var T=i.ray.origin.distanceTo(p);T<i.near||T>i.far||a.push({distance:T,
// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:d.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),le.prototype=Object.assign(Object.create(he.prototype),{constructor:le,isLineSegments:!0}),ue.prototype=Object.assign(Object.create(he.prototype),{constructor:ue,isLineLoop:!0}),(de.prototype=Object.create(Z.prototype)).constructor=de,de.prototype.isPointsMaterial=!0,de.prototype.copy=function(t){return Z.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this},pe.prototype=Object.assign(Object.create(ot.prototype),{constructor:pe,isPoints:!0,raycast:function(){var t=new i,e=new Pt,n=new $;return function(i,a){function o(t,n){var r=e.distanceSqToPoint(t);if(r<d){var o=e.closestPointToPoint(t);o.applyMatrix4(h);var c=i.ray.origin.distanceTo(o);if(c<i.near||c>i.far)return;a.push({distance:c,distanceToRay:Math.sqrt(r),point:o.clone(),index:n,face:null,object:s})}}var s=this,c=this.geometry,h=this.matrixWorld,l=i.params.Points.threshold;if(
// Checking boundingSphere distance to ray
null===c.boundingSphere&&c.computeBoundingSphere(),n.copy(c.boundingSphere),n.applyMatrix4(h),n.radius+=l,!1!==i.ray.intersectsSphere(n)){
//
t.getInverse(h),e.copy(i.ray).applyMatrix4(t);var u=l/((this.scale.x+this.scale.y+this.scale.z)/3),d=u*u,p=new r;if(c.isBufferGeometry){var f=c.index,m=c.attributes.position.array;if(null!==f)for(var g=f.array,v=0,y=g.length;v<y;v++){var x=g[v];p.fromArray(m,3*x),o(p,x)}else for(var v=0,b=m.length/3;v<b;v++)p.fromArray(m,3*v),o(p,v)}else for(var _=c.vertices,v=0,b=_.length;v<b;v++)o(_[v],v)}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),fe.prototype=Object.assign(Object.create(ot.prototype),{constructor:fe}),(me.prototype=Object.create(o.prototype)).constructor=me,(ge.prototype=Object.create(o.prototype)).constructor=ge,ge.prototype.isCompressedTexture=!0,(ve.prototype=Object.create(o.prototype)).constructor=ve,ve.prototype.isDepthTexture=!0,(ye.prototype=Object.create(Mt.prototype)).constructor=ye,(xe.prototype=Object.create(lt.prototype)).constructor=xe,(be.prototype=Object.create(Mt.prototype)).constructor=be,(_e.prototype=Object.create(lt.prototype)).constructor=_e,(we.prototype=Object.create(Mt.prototype)).constructor=we,(Me.prototype=Object.create(lt.prototype)).constructor=Me,(Ee.prototype=Object.create(we.prototype)).constructor=Ee,(Te.prototype=Object.create(lt.prototype)).constructor=Te,(Se.prototype=Object.create(we.prototype)).constructor=Se,(Ae.prototype=Object.create(lt.prototype)).constructor=Ae,(Le.prototype=Object.create(we.prototype)).constructor=Le,(Re.prototype=Object.create(lt.prototype)).constructor=Re,(Pe.prototype=Object.create(we.prototype)).constructor=Pe,(Ce.prototype=Object.create(lt.prototype)).constructor=Ce,(Ie.prototype=Object.create(Mt.prototype)).constructor=Ie,(Ue.prototype=Object.create(lt.prototype)).constructor=Ue,(Ne.prototype=Object.create(Mt.prototype)).constructor=Ne,(Oe.prototype=Object.create(lt.prototype)).constructor=Oe,(De.prototype=Object.create(Mt.prototype)).constructor=De;/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 */
var Tu={
// calculate area of the contour polygon
area:function(t){for(var e=t.length,i=0,n=e-1,r=0;r<e;n=r++)i+=t[n].x*t[r].y-t[r].x*t[n].y;return.5*i},triangulate:function(){/**
		 * This code is a quick port of code written in C++ which was submitted to
		 * flipcode.com by John W. Ratcliff  // July 22, 2000
		 * See original code and more information here:
		 * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml
		 *
		 * ported to actionscript by Zevan Rosser
		 * www.actionsnippet.com
		 *
		 * ported to javascript by Joshua Koo
		 * http://www.lab4games.net/zz85/blog
		 *
		 */
function t(t,e,i,n,r,a){var o,s,c,h,l,u,d,p,f;if(s=t[a[e]].x,c=t[a[e]].y,h=t[a[i]].x,l=t[a[i]].y,u=t[a[n]].x,d=t[a[n]].y,(h-s)*(d-c)-(l-c)*(u-s)<=0)return!1;var m,g,v,y,x,b,_,w,M,E,T,S,A,L,R;for(m=u-h,g=d-l,v=s-u,y=c-d,x=h-s,b=l-c,o=0;o<r;o++)if(p=t[a[o]].x,f=t[a[o]].y,!(p===s&&f===c||p===h&&f===l||p===u&&f===d)&&(_=p-s,w=f-c,M=p-h,E=f-l,T=p-u,S=f-d,
// see if p is inside triangle abc
R=m*E-g*M,A=x*w-b*_,L=v*S-y*T,R>=-Number.EPSILON&&L>=-Number.EPSILON&&A>=-Number.EPSILON))return!1;return!0}
// takes in an contour array and returns
return function(e,i){var n=e.length;if(n<3)return null;var r,a,o,s=[],c=[],h=[];if(Tu.area(e)>0)for(a=0;a<n;a++)c[a]=a;else for(a=0;a<n;a++)c[a]=n-1-a;var l=n,u=2*l;/* error detection */
for(a=l-1;l>2;){/* if we loop, it is probably a non-simple polygon */
if(u--<=0)
//** Triangulate: ERROR - probable bad polygon!
//throw ( "Warning, unable to triangulate polygon!" );
//return null;
// Sometimes warning is fine, especially polygons are triangulated in reverse.
return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),i?h:s;/* next     */
if(/* three consecutive vertices in current polygon, <u,v,w> */
r=a,l<=r&&(r=0),/* previous */
a=r+1,l<=a&&(a=0),/* new v    */
o=a+1,l<=o&&(o=0),t(e,r,a,o,l,c)){var d,p,f,m,g;/* remove v from the remaining polygon */
for(/* true names of the vertices */
d=c[r],p=c[a],f=c[o],/* output Triangle */
s.push([e[d],e[p],e[f]]),h.push([c[r],c[a],c[o]]),m=a,g=a+1;g<l;m++,g++)c[m]=c[g];/* reset error detection counter */
u=2*--l}}return i?h:s}}(),triangulateShape:function(t,e){function i(t){var e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function n(t,e,i){
// inOtherPt needs to be collinear to the inSegment
// inOtherPt needs to be collinear to the inSegment
return t.x!==e.x?t.x<e.x?t.x<=i.x&&i.x<=e.x:e.x<=i.x&&i.x<=t.x:t.y<e.y?t.y<=i.y&&i.y<=e.y:e.y<=i.y&&i.y<=t.y}function r(t,e,i,r,a){var o=e.x-t.x,s=e.y-t.y,c=r.x-i.x,h=r.y-i.y,l=t.x-i.x,u=t.y-i.y,d=s*c-o*h,p=s*l-o*u;if(Math.abs(d)>Number.EPSILON){
// not parallel
var f;if(d>0){if(p<0||p>d)return[];if((f=h*l-c*u)<0||f>d)return[]}else{if(p>0||p<d)return[];if((f=h*l-c*u)>0||f<d)return[]}
// i.e. to reduce rounding errors
// intersection at endpoint of segment#1?
if(0===f)return!a||0!==p&&p!==d?[t]:[];if(f===d)return!a||0!==p&&p!==d?[e]:[];
// intersection at endpoint of segment#2?
if(0===p)return[i];if(p===d)return[r];
// return real intersection point
var m=f/d;return[{x:t.x+m*o,y:t.y+m*s}]}
// parallel or collinear
if(0!==p||h*l!=c*u)return[];
// they are collinear or degenerate
var g=0===o&&0===s,v=0===c&&0===h;// segment2 is just a point?
// both segments are points
if(g&&v)return t.x!==i.x||t.y!==i.y?[]:[t];
// segment#1  is a single point
if(g)return n(i,r,t)?[t]:[];
// segment#2  is a single point
if(v)return n(t,e,i)?[i]:[];
// they are collinear segments, which might overlap
var y,x,b,_,w,M,E,T;
// the segments are NOT on a vertical line
// the segments are on a vertical line
return 0!==o?(t.x<e.x?(y=t,b=t.x,x=e,_=e.x):(y=e,b=e.x,x=t,_=t.x),i.x<r.x?(w=i,E=i.x,M=r,T=r.x):(w=r,E=r.x,M=i,T=i.x)):(t.y<e.y?(y=t,b=t.y,x=e,_=e.y):(y=e,b=e.y,x=t,_=t.y),i.y<r.y?(w=i,E=i.y,M=r,T=r.y):(w=r,E=r.y,M=i,T=i.y)),b<=E?_<E?[]:_===E?a?[]:[w]:_<=T?[w,x]:[w,M]:b>T?[]:b===T?a?[]:[y]:_<=T?[y,x]:[y,M]}function a(t,e,i,n){
// The order of legs is important
// translation of all points, so that Vertex is at (0,0)
var r=e.x-t.x,a=e.y-t.y,o=i.x-t.x,s=i.y-t.y,c=n.x-t.x,h=n.y-t.y,l=r*s-a*o,u=r*h-a*c;if(Math.abs(l)>Number.EPSILON){
// angle != 180 deg.
var d=c*s-h*o;
// console.log( "from2to: " + from2toAngle + ", from2other: " + from2otherAngle + ", other2to: " + other2toAngle );
// console.log( "from2to: " + from2toAngle + ", from2other: " + from2otherAngle + ", other2to: " + other2toAngle );
return l>0?u>=0&&d>=0:u>=0||d>=0}
// angle == 180 deg.
// console.log( "from2to: 180 deg., from2other: " + from2otherAngle  );
return u>0}i(t),e.forEach(i);for(var o,s,c,h,l,u,d={},p=t.concat(),f=0,m=e.length;f<m;f++)Array.prototype.push.apply(p,e[f]);
//console.log( "allpoints",allpoints, allpoints.length );
// prepare all points map
for(o=0,s=p.length;o<s;o++)void 0!==d[l=p[o].x+":"+p[o].y]&&console.warn("THREE.ShapeUtils: Duplicate point",l,o),d[l]=o;
// remove holes by cutting paths to holes and adding them to the shape
var g=function(t,e){function i(t,e){
// Check if hole point lies within angle around shape point
var i=y.length-1,n=t-1;n<0&&(n=i);var r=t+1;r>i&&(r=0);var o=a(y[t],y[n],y[r],s[e]);if(!o)
// console.log( "Vertex (Shape): " + inShapeIdx + ", Point: " + hole[inHoleIdx].x + "/" + hole[inHoleIdx].y );
return!1;
// Check if shape point lies within angle around hole point
var c=s.length-1,h=e-1;h<0&&(h=c);var l=e+1;return l>c&&(l=0),!!(o=a(s[e],s[h],s[l],y[t]))}function n(t,e){
// checks for intersections with shape edges
var i,n;for(i=0;i<y.length;i++)if(n=i+1,n%=y.length,r(t,e,y[i],y[n],!0).length>0)return!0;return!1}function o(t,i){
// checks for intersections with hole edges
var n,a,o,s;for(n=0;n<x.length;n++)for(a=e[x[n]],o=0;o<a.length;o++)if(s=o+1,s%=a.length,r(t,i,a[o],a[s],!0).length>0)return!0;return!1}for(var s,c,h,l,u,d,p,f,m,g,v,y=t.concat(),x=[],b=[],_=0,w=e.length;_<w;_++)x.push(_);for(var M=0,E=2*x.length;x.length>0;){if(--E<0){console.log('THREE.ShapeUtils: Infinite Loop! Holes left:" + indepHoles.length + ", Probably Hole outside Shape!');break}
// search for shape-vertex and hole-vertex,
// which can be connected without intersections
for(h=M;h<y.length;h++){
// search for hole which can be reached without intersections
for(l=y[h],c=-1,_=0;_<x.length;_++)if(d=x[_],
// prevent multiple checks
p=l.x+":"+l.y+":"+d,void 0===b[p]){s=e[d];for(var T=0;T<s.length;T++)if(u=s[T],i(h,T)&&!n(l,u)&&!o(l,u)){c=T,x.splice(_,1),f=y.slice(0,h+1),m=y.slice(h),g=s.slice(c),v=s.slice(0,c+1),y=f.concat(g).concat(v).concat(m),M=h;
// Debug only, to show the selected cuts
// glob_CutLines.push( [ shapePt, holePt ] );
break}if(c>=0)break;// hole-vertex found
b[p]=!0}if(c>=0)break}}return y}(t,e),v=Tu.triangulate(g,!1);// True returns indices for points of spooled shape
//console.log( "triangles",triangles, triangles.length );
// check all face vertices against all points map
for(o=0,s=v.length;o<s;o++)for(h=v[o],c=0;c<3;c++)void 0!==(u=d[l=h[c].x+":"+h[c].y])&&(h[c]=u);return v.concat()},isClockWise:function(t){return Tu.area(t)<0}};(Fe.prototype=Object.create(lt.prototype)).constructor=Fe,(Be.prototype=Object.create(Mt.prototype)).constructor=Be,Be.prototype.getArrays=function(){var t=this.getAttribute("position"),e=t?Array.prototype.slice.call(t.array):[],i=this.getAttribute("uv"),n=i?Array.prototype.slice.call(i.array):[],r=this.index;return{position:e,uv:n,index:r?Array.prototype.slice.call(r.array):[]}},Be.prototype.addShapeList=function(t,e){var i=t.length;e.arrays=this.getArrays();for(var n=0;n<i;n++){var r=t[n];this.addShape(r,e)}this.setIndex(e.arrays.index),this.addAttribute("position",new xt(e.arrays.position,3)),this.addAttribute("uv",new xt(e.arrays.uv,2))},Be.prototype.addShape=function(t,i){function n(t,e,i){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(i).add(t)}
// Find directions for point movement
function a(t,i,n){
// computes for inPt the corresponding point inPt' on a new contour
//   shifted by 1 unit (length of normalized vector) to the left
// if we walk along contour clockwise, this new contour is outside the old one
//
// inPt' is the intersection of the two lines parallel to the two
//  adjacent edges of inPt at a distance of 1 unit on the left side.
var r,a,o,s=t.x-i.x,c=t.y-i.y,h=n.x-t.x,l=n.y-t.y,u=s*s+c*c,d=s*l-c*h;if(Math.abs(d)>Number.EPSILON){
// not collinear
// length of vectors for normalizing
var p=Math.sqrt(u),f=Math.sqrt(h*h+l*l),m=i.x-c/p,g=i.y+s/p,v=((n.x-l/f-m)*l-(n.y+h/f-g)*h)/(s*l-c*h),y=(
// vector from inPt to intersection point
r=m+s*v-t.x)*r+(a=g+c*v-t.y)*a;if(y<=2)return new e(r,a);o=Math.sqrt(y/2)}else{
// handle special case of collinear edges
var x=!1;// assumes: opposite
s>Number.EPSILON?h>Number.EPSILON&&(x=!0):s<-Number.EPSILON?h<-Number.EPSILON&&(x=!0):Math.sign(c)===Math.sign(l)&&(x=!0),x?(
// console.log("Warning: lines are a straight sequence");
r=-c,a=s,o=Math.sqrt(u)):(
// console.log("Warning: lines are a straight spike");
r=s,a=c,o=Math.sqrt(u/2))}return new e(r/o,a/o)}function o(t,e){var i,n;for(Z=t.length;--Z>=0;){i=Z,(n=Z-1)<0&&(n=t.length-1);
//console.log('b', i,j, i-1, k,vertices.length);
var r=0,a=A+2*E;for(r=0;r<a;r++){var o=X*r,s=X*(r+1);!function(t,e,i,n){h(t),h(e),h(n),h(e),h(i),h(n);var r=v.length/3,a=P.generateSideWallUV(N,v,r-6,r-3,r-2,r-1);l(a[0]),l(a[1]),l(a[3]),l(a[1]),l(a[2]),l(a[3])}(e+i+o,e+n+o,e+n+s,e+i+s)}}}function s(t,e,i){b.push(t),b.push(e),b.push(i)}function c(t,e,i){h(t),h(e),h(i);var n=v.length/3,r=P.generateTopUV(N,v,n-3,n-2,n-1);l(r[0]),l(r[1]),l(r[2])}function h(t){y.push(v.length/3),v.push(b[3*t+0]),v.push(b[3*t+1]),v.push(b[3*t+2])}function l(t){x.push(t.x),x.push(t.y)}var u,d,p,f,m,g=i.arrays?i.arrays:this.getArrays(),v=g.position,y=g.index,x=g.uv,b=[],_=void 0!==i.amount?i.amount:100,w=void 0!==i.bevelThickness?i.bevelThickness:6,M=void 0!==i.bevelSize?i.bevelSize:w-2,E=void 0!==i.bevelSegments?i.bevelSegments:3,T=void 0===i.bevelEnabled||i.bevelEnabled,S=void 0!==i.curveSegments?i.curveSegments:12,A=void 0!==i.steps?i.steps:1,L=i.extrudePath,R=!1,P=void 0!==i.UVGenerator?i.UVGenerator:Fe.WorldUVGenerator;L&&(u=L.getSpacedPoints(A),R=!0,T=!1,// bevels not supported for path extrusion
// SETUP TNB variables
// TODO1 - have a .isClosed in spline?
d=void 0!==i.frames?i.frames:L.computeFrenetFrames(A,!1),
// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);
p=new r,f=new r,m=new r),
// Safeguards if bevels are not enabled
T||(E=0,w=0,M=0);
// Variables initialization
var C,I,U,N=this,O=t.extractPoints(S),D=O.shape,F=O.holes;if(!Tu.isClockWise(D))
// Maybe we should also check if holes are in the opposite direction, just to be safe ...
for(D=D.reverse(),I=0,U=F.length;I<U;I++)C=F[I],Tu.isClockWise(C)&&(F[I]=C.reverse());var B=Tu.triangulateShape(D,F),z=D;// vertices has all points but contour has only points of circumference
for(I=0,U=F.length;I<U;I++)C=F[I],D=D.concat(C);for(var G,H,V,k,j,W,X=D.length,q=B.length,Y=[],Z=0,J=z.length,Q=J-1,K=Z+1;Z<J;Z++,Q++,K++)Q===J&&(Q=0),K===J&&(K=0),
//  (j)---(i)---(k)
// console.log('i,j,k', i, j , k)
Y[Z]=a(z[Z],z[Q],z[K]);var $,tt=[],et=Y.concat();for(I=0,U=F.length;I<U;I++){for(C=F[I],$=[],Z=0,Q=(J=C.length)-1,K=Z+1;Z<J;Z++,Q++,K++)Q===J&&(Q=0),K===J&&(K=0),
//  (j)---(i)---(k)
$[Z]=a(C[Z],C[Q],C[K]);tt.push($),et=et.concat($)}
// Loop bevelSegments, 1 for the front, 1 for the back
for(G=0;G<E;G++){
// contract shape
for(
//for ( b = bevelSegments; b > 0; b -- ) {
V=G/E,k=w*Math.cos(V*Math.PI/2),H=M*Math.sin(V*Math.PI/2),Z=0,J=z.length;Z<J;Z++)s((j=n(z[Z],Y[Z],H)).x,j.y,-k);
// expand holes
for(I=0,U=F.length;I<U;I++)for(C=F[I],$=tt[I],Z=0,J=C.length;Z<J;Z++)s((j=n(C[Z],$[Z],H)).x,j.y,-k)}
// Back facing vertices
for(H=M,Z=0;Z<X;Z++)j=T?n(D[Z],et[Z],H):D[Z],R?(
// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );
f.copy(d.normals[0]).multiplyScalar(j.x),p.copy(d.binormals[0]).multiplyScalar(j.y),m.copy(u[0]).add(f).add(p),s(m.x,m.y,m.z)):s(j.x,j.y,0);
// Add stepped vertices...
// Including front facing vertices
var it;for(it=1;it<=A;it++)for(Z=0;Z<X;Z++)j=T?n(D[Z],et[Z],H):D[Z],R?(
// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );
f.copy(d.normals[it]).multiplyScalar(j.x),p.copy(d.binormals[it]).multiplyScalar(j.y),m.copy(u[it]).add(f).add(p),s(m.x,m.y,m.z)):s(j.x,j.y,_/A*it);
// Add bevel segments planes
//for ( b = 1; b <= bevelSegments; b ++ ) {
for(G=E-1;G>=0;G--){
// contract shape
for(V=G/E,k=w*Math.cos(V*Math.PI/2),H=M*Math.sin(V*Math.PI/2),Z=0,J=z.length;Z<J;Z++)s((j=n(z[Z],Y[Z],H)).x,j.y,_+k);
// expand holes
for(I=0,U=F.length;I<U;I++)for(C=F[I],$=tt[I],Z=0,J=C.length;Z<J;Z++)j=n(C[Z],$[Z],H),R?s(j.x,j.y+u[A-1].y,u[A-1].x+k):s(j.x,j.y,_+k)}/* Faces */
// Top and bottom faces
!
/////  Internal functions
function(){var t=v.length/3;if(T){var e=0,n=X*e;
// Bottom faces
for(Z=0;Z<q;Z++)c((W=B[Z])[2]+n,W[1]+n,W[0]+n);
// Top faces
for(n=X*(e=A+2*E),Z=0;Z<q;Z++)c((W=B[Z])[0]+n,W[1]+n,W[2]+n)}else{
// Bottom faces
for(Z=0;Z<q;Z++)c((W=B[Z])[2],W[1],W[0]);
// Top faces
for(Z=0;Z<q;Z++)c((W=B[Z])[0]+X*A,W[1]+X*A,W[2]+X*A)}N.addGroup(t,v.length/3-t,void 0!==i.material?i.material:0)}(),
// Sides faces
// Create faces for the z-sides of the shape
function(){var t=v.length/3,e=0;for(o(z,e),e+=z.length,I=0,U=F.length;I<U;I++)o(C=F[I],e),
//, true
e+=C.length;N.addGroup(t,v.length/3-t,void 0!==i.extrudeMaterial?i.extrudeMaterial:1)}(),i.arrays||(this.setIndex(y),this.addAttribute("position",new xt(v,3)),this.addAttribute("uv",new xt(i.arrays.uv,2)))},Fe.WorldUVGenerator={generateTopUV:function(t,i,n,r,a){var o=i[3*n],s=i[3*n+1],c=i[3*r],h=i[3*r+1],l=i[3*a],u=i[3*a+1];return[new e(o,s),new e(c,h),new e(l,u)]},generateSideWallUV:function(t,i,n,r,a,o){var s=i[3*n],c=i[3*n+1],h=i[3*n+2],l=i[3*r],u=i[3*r+1],d=i[3*r+2],p=i[3*a],f=i[3*a+1],m=i[3*a+2],g=i[3*o],v=i[3*o+1],y=i[3*o+2];return Math.abs(c-u)<.01?[new e(s,1-h),new e(l,1-d),new e(p,1-m),new e(g,1-y)]:[new e(c,1-h),new e(u,1-d),new e(f,1-m),new e(v,1-y)]}},(ze.prototype=Object.create(lt.prototype)).constructor=ze,(Ge.prototype=Object.create(Be.prototype)).constructor=Ge,(He.prototype=Object.create(lt.prototype)).constructor=He,(Ve.prototype=Object.create(Mt.prototype)).constructor=Ve,(ke.prototype=Object.create(lt.prototype)).constructor=ke,(je.prototype=Object.create(Mt.prototype)).constructor=je,(We.prototype=Object.create(lt.prototype)).constructor=We,(Xe.prototype=Object.create(Mt.prototype)).constructor=Xe,(qe.prototype=Object.create(lt.prototype)).constructor=qe,(Ye.prototype=Object.create(Mt.prototype)).constructor=Ye,(Ze.prototype=Object.create(Mt.prototype)).constructor=Ze,(Je.prototype=Object.create(lt.prototype)).constructor=Je,(Qe.prototype=Object.create(Mt.prototype)).constructor=Qe,(Ke.prototype=Object.create(Je.prototype)).constructor=Ke,($e.prototype=Object.create(Qe.prototype)).constructor=$e,(ti.prototype=Object.create(lt.prototype)).constructor=ti,(ei.prototype=Object.create(Mt.prototype)).constructor=ei;var Su=Object.freeze({WireframeGeometry:ye,ParametricGeometry:xe,ParametricBufferGeometry:be,TetrahedronGeometry:Me,TetrahedronBufferGeometry:Ee,OctahedronGeometry:Te,OctahedronBufferGeometry:Se,IcosahedronGeometry:Ae,IcosahedronBufferGeometry:Le,DodecahedronGeometry:Re,DodecahedronBufferGeometry:Pe,PolyhedronGeometry:_e,PolyhedronBufferGeometry:we,TubeGeometry:Ce,TubeBufferGeometry:Ie,TorusKnotGeometry:Ue,TorusKnotBufferGeometry:Ne,TorusGeometry:Oe,TorusBufferGeometry:De,TextGeometry:ze,TextBufferGeometry:Ge,SphereGeometry:He,SphereBufferGeometry:Ve,RingGeometry:ke,RingBufferGeometry:je,PlaneGeometry:St,PlaneBufferGeometry:At,LatheGeometry:We,LatheBufferGeometry:Xe,ShapeGeometry:qe,ShapeBufferGeometry:Ye,ExtrudeGeometry:Fe,ExtrudeBufferGeometry:Be,EdgesGeometry:Ze,ConeGeometry:Ke,ConeBufferGeometry:$e,CylinderGeometry:Je,CylinderBufferGeometry:Qe,CircleGeometry:ti,CircleBufferGeometry:ei,BoxGeometry:Et,BoxBufferGeometry:Tt});(ii.prototype=Object.create(Z.prototype)).constructor=ii,ii.prototype.isShadowMaterial=!0,(ni.prototype=Object.create(Rt.prototype)).constructor=ni,ni.prototype.isRawShaderMaterial=!0,(ri.prototype=Object.create(Z.prototype)).constructor=ri,ri.prototype.isMeshStandardMaterial=!0,ri.prototype.copy=function(t){return Z.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},(ai.prototype=Object.create(ri.prototype)).constructor=ai,ai.prototype.isMeshPhysicalMaterial=!0,ai.prototype.copy=function(t){return ri.prototype.copy.call(this,t),this.defines={PHYSICAL:""},this.reflectivity=t.reflectivity,this.clearCoat=t.clearCoat,this.clearCoatRoughness=t.clearCoatRoughness,this},(oi.prototype=Object.create(Z.prototype)).constructor=oi,oi.prototype.isMeshPhongMaterial=!0,oi.prototype.copy=function(t){return Z.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},(si.prototype=Object.create(oi.prototype)).constructor=si,si.prototype.isMeshToonMaterial=!0,si.prototype.copy=function(t){return oi.prototype.copy.call(this,t),this.gradientMap=t.gradientMap,this},(ci.prototype=Object.create(Z.prototype)).constructor=ci,ci.prototype.isMeshNormalMaterial=!0,ci.prototype.copy=function(t){return Z.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},(hi.prototype=Object.create(Z.prototype)).constructor=hi,hi.prototype.isMeshLambertMaterial=!0,hi.prototype.copy=function(t){return Z.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},(li.prototype=Object.create(ce.prototype)).constructor=li,li.prototype.isLineDashedMaterial=!0,li.prototype.copy=function(t){return ce.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Au=Object.freeze({ShadowMaterial:ii,SpriteMaterial:ie,RawShaderMaterial:ni,ShaderMaterial:Rt,PointsMaterial:de,MeshPhysicalMaterial:ai,MeshStandardMaterial:ri,MeshPhongMaterial:oi,MeshToonMaterial:si,MeshNormalMaterial:ci,MeshLambertMaterial:hi,MeshDepthMaterial:J,MeshDistanceMaterial:Q,MeshBasicMaterial:Lt,LineDashedMaterial:li,LineBasicMaterial:ce,Material:Z}),Lu={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(
// console.log( 'THREE.Cache', 'Adding key:', key );
this.files[t]=e)},get:function(t){if(!1!==this.enabled)
// console.log( 'THREE.Cache', 'Checking key:', key );
return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}},Ru=new ui,Pu={};Object.assign(di.prototype,{load:function(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,a=Lu.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;
// Check if request is duplicate
if(void 0===Pu[t]){
// Check for data: URI
var o=t.match(/^data:(.*?)(;base64)?,(.*)$/);
// Safari can not handle Data URIs through XMLHttpRequest so process manually
if(o){var s=o[1],c=!!o[2],h=o[3];h=window.decodeURIComponent(h),c&&(h=window.atob(h));try{var l,u=(this.responseType||"").toLowerCase();switch(u){case"arraybuffer":case"blob":for(var d=new Uint8Array(h.length),p=0;p<h.length;p++)d[p]=h.charCodeAt(p);l="blob"===u?new Blob([d.buffer],{type:s}):d.buffer;break;case"document":var f=new DOMParser;l=f.parseFromString(h,s);break;case"json":l=JSON.parse(h);break;default:// 'text' or other
l=h}
// Wait for next browser tick like standard XMLHttpRequest event dispatching does
window.setTimeout(function(){e&&e(l),r.manager.itemEnd(t)},0)}catch(e){
// Wait for next browser tick like standard XMLHttpRequest event dispatching does
window.setTimeout(function(){n&&n(e),r.manager.itemEnd(t),r.manager.itemError(t)},0)}}else{
// Initialise array for duplicate requests
Pu[t]=[],Pu[t].push({onLoad:e,onProgress:i,onError:n});var m=new XMLHttpRequest;m.open("GET",t,!0),m.addEventListener("load",function(e){var i=e.target.response;Lu.add(t,i);var n=Pu[t];if(delete Pu[t],200===this.status){for(var a=0,o=n.length;a<o;a++){(s=n[a]).onLoad&&s.onLoad(i)}r.manager.itemEnd(t)}else if(0===this.status){
// Some browsers return HTTP Status 0 when using non-http protocol
// e.g. 'file://' or 'data://'. Handle as success.
console.warn("THREE.FileLoader: HTTP Status 0 received.");for(var a=0,o=n.length;a<o;a++){(s=n[a]).onLoad&&s.onLoad(i)}r.manager.itemEnd(t)}else{for(var a=0,o=n.length;a<o;a++){var s=n[a];s.onError&&s.onError(e)}r.manager.itemEnd(t),r.manager.itemError(t)}},!1),m.addEventListener("progress",function(e){for(var i=Pu[t],n=0,r=i.length;n<r;n++){var a=i[n];a.onProgress&&a.onProgress(e)}},!1),m.addEventListener("error",function(e){var i=Pu[t];delete Pu[t];for(var n=0,a=i.length;n<a;n++){var o=i[n];o.onError&&o.onError(e)}r.manager.itemEnd(t),r.manager.itemError(t)},!1),void 0!==this.responseType&&(m.responseType=this.responseType),void 0!==this.withCredentials&&(m.withCredentials=this.withCredentials),m.overrideMimeType&&m.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(var g in this.requestHeader)m.setRequestHeader(g,this.requestHeader[g]);m.send(null)}return r.manager.itemStart(t),m}Pu[t].push({onLoad:e,onProgress:i,onError:n})},setPath:function(t){return this.path=t,this},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}}),Object.assign(/**
 * @author mrdoob / http://mrdoob.com/
 *
 * Abstract Base class to block based textures loader (dds, pvr, ...)
 */
function(t){this.manager=void 0!==t?t:Ru,
// override in sub classes
this._parser=null}.prototype,{load:function(t,e,i,n){function r(r){c.load(t[r],function(t){var i=a._parser(t,!0);o[r]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},6===(h+=1)&&(1===i.mipmapCount&&(s.minFilter=ml),s.format=i.format,s.needsUpdate=!0,e&&e(s))},i,n)}var a=this,o=[],s=new ge;s.image=o;var c=new di(this.manager);if(c.setPath(this.path),c.setResponseType("arraybuffer"),Array.isArray(t))for(var h=0,l=0,u=t.length;l<u;++l)r(l);else
// compressed cubemap texture stored in a single DDS file
c.load(t,function(t){var i=a._parser(t,!0);if(i.isCubemap)for(var n=i.mipmaps.length/i.mipmapCount,r=0;r<n;r++){o[r]={mipmaps:[]};for(var c=0;c<i.mipmapCount;c++)o[r].mipmaps.push(i.mipmaps[r*i.mipmapCount+c]),o[r].format=i.format,o[r].width=i.width,o[r].height=i.height}else s.image.width=i.width,s.image.height=i.height,s.mipmaps=i.mipmaps;1===i.mipmapCount&&(s.minFilter=ml),s.format=i.format,s.needsUpdate=!0,e&&e(s)},i,n);return s},setPath:function(t){return this.path=t,this}}),Object.assign(/**
 * @author Nikos M. / https://github.com/foo123/
 *
 * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)
 */
function(t){this.manager=void 0!==t?t:Ru,
// override in sub classes
this._parser=null}.prototype,{load:function(t,e,i,n){var r=this,a=new l,o=new di(this.manager);return o.setResponseType("arraybuffer"),o.load(t,function(t){var i=r._parser(t);i&&(void 0!==i.image?a.image=i.image:void 0!==i.data&&(a.image.width=i.width,a.image.height=i.height,a.image.data=i.data),a.wrapS=void 0!==i.wrapS?i.wrapS:ll,a.wrapT=void 0!==i.wrapT?i.wrapT:ll,a.magFilter=void 0!==i.magFilter?i.magFilter:ml,a.minFilter=void 0!==i.minFilter?i.minFilter:vl,a.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.format&&(a.format=i.format),void 0!==i.type&&(a.type=i.type),void 0!==i.mipmaps&&(a.mipmaps=i.mipmaps),1===i.mipmapCount&&(a.minFilter=ml),a.needsUpdate=!0,e&&e(a,i))},i,n),a}}),Object.assign(pi.prototype,{crossOrigin:"Anonymous",load:function(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,a=Lu.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;var o=document.createElementNS("http://www.w3.org/1999/xhtml","img");/*
		image.addEventListener( 'progress', function ( event ) {

			if ( onProgress ) onProgress( event );

		}, false );
		*/
return o.addEventListener("load",function(){Lu.add(t,this),e&&e(this),r.manager.itemEnd(t)},!1),o.addEventListener("error",function(e){n&&n(e),r.manager.itemEnd(t),r.manager.itemError(t)},!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(t),o.src=t,o},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t){this.manager=void 0!==t?t:Ru}.prototype,{crossOrigin:"Anonymous",load:function(t,e,i,n){function r(i){o.load(t[i],function(t){a.images[i]=t,6===++s&&(a.needsUpdate=!0,e&&e(a))},void 0,n)}var a=new u,o=new pi(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);for(var s=0,c=0;c<t.length;++c)r(c);return a},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(fi.prototype,{crossOrigin:"Anonymous",load:function(t,e,i,n){var r=new pi(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);var a=new o;return a.image=r.load(t,function(){
// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.
var i=t.search(/\.(jpg|jpeg)$/)>0||0===t.search(/^data\:image\/jpeg/);a.format=i?Cl:Il,a.needsUpdate=!0,void 0!==e&&e(a)},i,n),a},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),mi.prototype=Object.assign(Object.create(ot.prototype),{constructor:mi,isLight:!0,copy:function(t){return ot.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){var e=ot.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),gi.prototype=Object.assign(Object.create(mi.prototype),{constructor:gi,isHemisphereLight:!0,copy:function(t){return mi.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(vi.prototype,{copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t={};return 0!==this.bias&&(t.bias=this.bias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),yi.prototype=Object.assign(Object.create(vi.prototype),{constructor:yi,isSpotLightShadow:!0,update:function(t){var e=this.camera,i=2*ou.RAD2DEG*t.angle,n=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;i===e.fov&&n===e.aspect&&r===e.far||(e.fov=i,e.aspect=n,e.far=r,e.updateProjectionMatrix())}}),xi.prototype=Object.assign(Object.create(mi.prototype),{constructor:xi,isSpotLight:!0,copy:function(t){return mi.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),bi.prototype=Object.assign(Object.create(mi.prototype),{constructor:bi,isPointLight:!0,copy:function(t){return mi.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),_i.prototype=Object.assign(Object.create(vi.prototype),{constructor:_i}),wi.prototype=Object.assign(Object.create(mi.prototype),{constructor:wi,isDirectionalLight:!0,copy:function(t){return mi.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Mi.prototype=Object.assign(Object.create(mi.prototype),{constructor:Mi,isAmbientLight:!0}),
// TODO (abelnation): RectAreaLight update when light shape is changed
Ei.prototype=Object.assign(Object.create(mi.prototype),{constructor:Ei,isRectAreaLight:!0,copy:function(t){return mi.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){var e=mi.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});/**
 * @author tschw
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 */
var Cu={
// same as Array.prototype.slice, but also works on typed arrays
arraySlice:function(t,e,i){return Cu.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==i?i:t.length)):t.slice(e,i)},
// converts an array to a specific type
convertArray:function(t,e,i){// let 'undefined' and 'null' pass
return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},
// returns an array by which times and values can be sorted
getKeyframeOrder:function(t){for(var e=t.length,i=new Array(e),n=0;n!==e;++n)i[n]=n;return i.sort(function(e,i){return t[e]-t[i]}),i},
// uses the array previously returned by 'getKeyframeOrder' to sort data
sortedArray:function(t,e,i){for(var n=t.length,r=new t.constructor(n),a=0,o=0;o!==n;++a)for(var s=i[a]*e,c=0;c!==e;++c)r[o++]=t[s+c];return r},
// function for parsing AOS keyframe formats
flattenJSON:function(t,e,i,n){for(var r=1,a=t[0];void 0!==a&&void 0===a[n];)a=t[r++];if(void 0!==a){// no data
var o=a[n];if(void 0!==o)// no data
if(Array.isArray(o))do{void 0!==(o=a[n])&&(e.push(a.time),i.push.apply(i,o)),a=t[r++]}while(void 0!==a);else if(void 0!==o.toArray)
// ...assume THREE.Math-ish
do{void 0!==(o=a[n])&&(e.push(a.time),o.toArray(i,i.length)),a=t[r++]}while(void 0!==a);else
// otherwise push as-is
do{void 0!==(o=a[n])&&(e.push(a.time),i.push(o)),a=t[r++]}while(void 0!==a)}}};Object.assign(Ti.prototype,{evaluate:function(t){var e=this.parameterPositions,i=this._cachedIndex,n=e[i],r=e[i-1];t:{e:{var a;i:{
//- See http://jsperf.com/comparison-to-undefined/3
//- slower code:
//-
//- 				if ( t >= t1 || t1 === undefined ) {
n:if(!(t<n)){for(s=i+2;;){if(void 0===n){if(t<r)break n;
// after end
return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,t,r)}if(i===s)break;if(// this loop
r=n,n=e[++i],t<n)
// we have arrived at the sought interval
break e}
// prepare binary search on the right side of the index
a=e.length;break i}
//- slower code:
//-					if ( t < t0 || t0 === undefined ) {
{if(t>=r)
// the interval is valid
break t;
// looping?
var o=e[1];t<o&&(i=2,// + 1, using the scan for the details
r=o);
// linear reverse scan
for(var s=i-2;;){if(void 0===r)
// before start
return this._cachedIndex=0,this.beforeStart_(0,t,n);if(i===s)break;if(// this loop
n=r,r=e[--i-1],t>=r)
// we have arrived at the sought interval
break e}
// prepare binary search on the left side of the index
a=i,i=0}}// linear scan
// binary search
for(;i<a;){var c=i+a>>>1;t<e[c]?a=c:i=c+1}
// check boundary cases, again
if(n=e[i],void 0===(r=e[i-1]))return this._cachedIndex=0,this.beforeStart_(0,t,n);if(void 0===n)return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,r,t)}// seek
this._cachedIndex=i,this.intervalChanged_(i,r,n)}// validate_interval
return this.interpolate_(i,r,t,n)},settings:null,// optional, subclass-specific settings structure
// Note: The indirection allows central control of many interpolants.
// --- Protected interface
DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=t*n,a=0;a!==n;++a)e[a]=i[r+a];return e},
// Template methods for derived classes:
interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),
//!\ DECLARE ALIAS AFTER assign prototype !
Object.assign(Ti.prototype,{
//( 0, t, t0 ), returns this.resultBuffer
beforeStart_:Ti.prototype.copySampleValue_,
//( N-1, tN-1, t ), returns this.resultBuffer
afterEnd_:Ti.prototype.copySampleValue_}),Si.prototype=Object.assign(Object.create(Ti.prototype),{constructor:Si,DefaultSettings_:{endingStart:ql,endingEnd:ql},intervalChanged_:function(t,e,i){var n=this.parameterPositions,r=t-2,a=t+1,o=n[r],s=n[a];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:
// f'(t0) = 0
r=t,o=2*e-i;break;case 2402:o=e+n[
// use the other end of the curve
r=n.length-2]-n[r+1];break;default:// ZeroCurvatureEnding
// f''(t0) = 0 a.k.a. Natural Spline
r=t,o=i}if(void 0===s)switch(this.getSettings_().endingEnd){case 2401:
// f'(tN) = 0
a=t,s=2*i-e;break;case 2402:
// use the other end of the curve
a=1,s=i+n[1]-n[0];break;default:// ZeroCurvatureEnding
// f''(tN) = 0, a.k.a. Natural Spline
a=t-1,s=e}var c=.5*(i-e),h=this.valueSize;this._weightPrev=c/(e-o),this._weightNext=c/(s-i),this._offsetPrev=r*h,this._offsetNext=a*h},interpolate_:function(t,e,i,n){
// combine data linearly
for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=s-o,h=this._offsetPrev,l=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(i-e)/(n-e),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f,b=0;b!==o;++b)r[b]=g*a[h+b]+v*a[c+b]+y*a[s+b]+x*a[l+b];return r}}),Ai.prototype=Object.assign(Object.create(Ti.prototype),{constructor:Ai,interpolate_:function(t,e,i,n){for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=s-o,h=(i-e)/(n-e),l=1-h,u=0;u!==o;++u)r[u]=a[c+u]*l+a[s+u]*h;return r}}),Li.prototype=Object.assign(Object.create(Ti.prototype),{constructor:Li,interpolate_:function(t){return this.copySampleValue_(t-1)}});var Iu;Iu={TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(t){return new Li(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new Ai(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new Si(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0!==e)this.createInterpolant=e;else{var i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){
// fall back to default, unless the default itself is messed up
if(t===this.DefaultInterpolation)throw new Error(i);this.setInterpolation(this.DefaultInterpolation)}console.warn("THREE.KeyframeTrackPrototype:",i)}},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},
// move all keyframes either forwards or backwards in time
shift:function(t){if(0!==t)for(var e=this.times,i=0,n=e.length;i!==n;++i)e[i]+=t;return this},
// scale all keyframe times by a factor (useful for frame <-> seconds conversions)
scale:function(t){if(1!==t)for(var e=this.times,i=0,n=e.length;i!==n;++i)e[i]*=t;return this},
// removes keyframes before and after animation without changing any values within the range [startTime, endTime].
// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values
trim:function(t,e){for(var i=this.times,n=i.length,r=0,a=n-1;r!==n&&i[r]<t;)++r;for(;-1!==a&&i[a]>e;)--a;// inclusive -> exclusive bound
if(++a,0!==r||a!==n){
// empty tracks are forbidden, so keep at least one keyframe
r>=a&&(a=Math.max(a,1),r=a-1);var o=this.getValueSize();this.times=Cu.arraySlice(i,r,a),this.values=Cu.arraySlice(this.values,r*o,a*o)}return this},
// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable
validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrackPrototype: Invalid value size in track.",this),t=!1);var i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrackPrototype: Track is empty.",this),t=!1);for(var a=null,o=0;o!==r;o++){var s=i[o];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrackPrototype: Time is not a valid number.",this,o,s),t=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrackPrototype: Out of order keys.",this,o,s,a),t=!1;break}a=s}if(void 0!==n&&Cu.isTypedArray(n))for(var o=0,c=n.length;o!==c;++o){var h=n[o];if(isNaN(h)){console.error("THREE.KeyframeTrackPrototype: Value is not a valid number.",this,o,h),t=!1;break}}return t},
// removes equivalent sequential keys as common in morph target sequences
// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)
optimize:function(){for(var t=this.times,e=this.values,i=this.getValueSize(),n=2302===this.getInterpolation(),r=1,a=t.length-1,o=1;o<a;++o){var s=!1,c=t[o];
// remove adjacent keyframes scheduled at the same time
if(c!==t[o+1]&&(1!==o||c!==c[0]))if(n)s=!0;else for(var h=o*i,l=h-i,u=h+i,d=0;d!==i;++d){var p=e[h+d];if(p!==e[l+d]||p!==e[u+d]){s=!0;break}}
// in-place compaction
if(s){if(o!==r){t[r]=t[o];for(var f=o*i,m=r*i,d=0;d!==i;++d)e[m+d]=e[f+d]}++r}}
// flush last keyframe (compaction looks ahead)
if(a>0){t[r]=t[a];for(var f=a*i,m=r*i,d=0;d!==i;++d)e[m+d]=e[f+d];++r}return r!==t.length&&(this.times=Cu.arraySlice(t,0,r),this.values=Cu.arraySlice(e,0,r*i)),this}},Pi.prototype=Object.assign(Object.create(Iu),{constructor:Pi,ValueTypeName:"vector"}),Ci.prototype=Object.assign(Object.create(Ti.prototype),{constructor:Ci,interpolate_:function(t,e,i,r){for(var a=this.resultBuffer,o=this.sampleValues,s=this.valueSize,c=t*s,h=(i-e)/(r-e),l=c+s;c!==l;c+=4)n.slerpFlat(a,0,o,c-s,o,c,h);return a}}),Ii.prototype=Object.assign(Object.create(Iu),{constructor:Ii,ValueTypeName:"quaternion",
// ValueBufferType is inherited
DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(t){return new Ci(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),Ui.prototype=Object.assign(Object.create(Iu),{constructor:Ui,ValueTypeName:"number"}),Ni.prototype=Object.assign(Object.create(Iu),{constructor:Ni,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Oi.prototype=Object.assign(Object.create(Iu),{constructor:Oi,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Di.prototype=Object.assign(Object.create(Iu),{constructor:Di,ValueTypeName:"color"}),Fi.prototype=Iu,Iu.constructor=Fi,
// Static methods:
Object.assign(Fi,{
// Serialization (in static context, because of constructor invocation
// and automatic invocation of .toJSON):
parse:function(t){if(void 0===t.type)throw new Error("track type undefined, can not parse");var e=Fi._getTrackTypeForValueTypeName(t.type);if(void 0===t.times){var i=[],n=[];Cu.flattenJSON(t.keys,i,n,"value"),t.times=i,t.values=n}
// derived classes can define a static parse method
// derived classes can define a static parse method
return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)},toJSON:function(t){var e,i=t.constructor;
// derived classes can define a static toJSON method
if(void 0!==i.toJSON)e=i.toJSON(t);else{
// by default, we assume the data can be serialized as-is
e={name:t.name,times:Cu.convertArray(t.times,Array),values:Cu.convertArray(t.values,Array)};var n=t.getInterpolation();n!==t.DefaultInterpolation&&(e.interpolation=n)}// mandatory
return e.type=t.ValueTypeName,e},_getTrackTypeForValueTypeName:function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ui;case"vector":case"vector2":case"vector3":case"vector4":return Pi;case"color":return Di;case"quaternion":return Ii;case"bool":case"boolean":return Oi;case"string":return Ni}throw new Error("Unsupported typeName: "+t)}}),Object.assign(Bi,{parse:function(t){for(var e=[],i=t.tracks,n=1/(t.fps||1),r=0,a=i.length;r!==a;++r)e.push(Fi.parse(i[r]).scale(n));return new Bi(t.name,t.duration,e)},toJSON:function(t){for(var e=[],i=t.tracks,n={name:t.name,duration:t.duration,tracks:e},r=0,a=i.length;r!==a;++r)e.push(Fi.toJSON(i[r]));return n},CreateFromMorphTargetSequence:function(t,e,i,n){for(var r=e.length,a=[],o=0;o<r;o++){var s=[],c=[];s.push((o+r-1)%r,o,(o+1)%r),c.push(0,1,0);var h=Cu.getKeyframeOrder(s);s=Cu.sortedArray(s,1,h),c=Cu.sortedArray(c,1,h),
// if there is a key at the first frame, duplicate it as the
// last frame as well for perfect loop.
n||0!==s[0]||(s.push(r),c.push(c[0])),a.push(new Ui(".morphTargetInfluences["+e[o].name+"]",s,c).scale(1/i))}return new Bi(t,-1,a)},findByName:function(t,e){var i=t;if(!Array.isArray(t)){var n=t;i=n.geometry&&n.geometry.animations||n.animations}for(var r=0;r<i.length;r++)if(i[r].name===e)return i[r];return null},CreateClipsFromMorphTargetSequences:function(t,e,i){
// sort morph target names into animation groups based
// patterns like Walk_001, Walk_002, Run_001, Run_002
for(var n={},r=/^([\w-]*?)([\d]+)$/,a=0,o=t.length;a<o;a++){var s=t[a],c=s.name.match(r);if(c&&c.length>1){var h=n[u=c[1]];h||(n[u]=h=[]),h.push(s)}}var l=[];for(var u in n)l.push(Bi.CreateFromMorphTargetSequence(u,n[u],e,i));return l},
// parse the animation.hierarchy format
parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var i=function(t,e,i,n,r){
// only return track if there are actually keys.
if(0!==i.length){var a=[],o=[];Cu.flattenJSON(i,a,o,n),
// empty keys are filtered out, so check again
0!==a.length&&r.push(new t(e,a,o))}},n=[],r=t.name||"default",a=t.length||-1,o=t.fps||30,s=t.hierarchy||[],c=0;c<s.length;c++){var h=s[c].keys;
// skip empty tracks
if(h&&0!==h.length)
// process morph targets
if(h[0].morphTargets){for(var l={},u=0;u<h.length;u++)if(h[u].morphTargets)for(m=0;m<h[u].morphTargets.length;m++)l[h[u].morphTargets[m]]=-1;
// create a track for each morph target with all zero
// morphTargetInfluences except for the keys in which
// the morphTarget is named.
for(var d in l){for(var p=[],f=[],m=0;m!==h[u].morphTargets.length;++m){var g=h[u];p.push(g.time),f.push(g.morphTarget===d?1:0)}n.push(new Ui(".morphTargetInfluence["+d+"]",p,f))}a=l.length*(o||1)}else{
// ...assume skeletal animation
var v=".bones["+e[c].name+"]";i(Pi,v+".position",h,"pos",n),i(Ii,v+".quaternion",h,"rot",n),i(Pi,v+".scale",h,"scl",n)}}if(0===n.length)return null;return new Bi(r,a,n)}}),Object.assign(Bi.prototype,{resetDuration:function(){for(var t=0,e=0,i=this.tracks.length;e!==i;++e){var n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}this.duration=t},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}}),Object.assign(zi.prototype,{load:function(t,e,i,n){var r=this;new di(r.manager).load(t,function(t){e(r.parse(JSON.parse(t)))},i,n)},setTextures:function(t){this.textures=t},parse:function(t){function i(t){return void 0===n[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),n[t]}var n=this.textures,r=new Au[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&r.specular.setHex(t.specular),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearCoat&&(r.clearCoat=t.clearCoat),void 0!==t.clearCoatRoughness&&(r.clearCoatRoughness=t.clearCoatRoughness),void 0!==t.uniforms&&(r.uniforms=t.uniforms),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.vertexColors&&(r.vertexColors=t.vertexColors),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.side&&(r.side=t.side),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),1!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.skinning&&(r.skinning=t.skinning),void 0!==t.morphTargets&&(r.morphTargets=t.morphTargets),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.userData&&(r.userData=t.userData),
// Deprecated
void 0!==t.shading&&(r.flatShading=1===t.shading),// THREE.FlatShading
// for PointsMaterial
void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),
// maps
void 0!==t.map&&(r.map=i(t.map)),void 0!==t.alphaMap&&(r.alphaMap=i(t.alphaMap),r.transparent=!0),void 0!==t.bumpMap&&(r.bumpMap=i(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=i(t.normalMap)),void 0!==t.normalScale){var a=t.normalScale;!1===Array.isArray(a)&&(
// Blender exporter used to export a scalar. See #7459
a=[a,a]),r.normalScale=(new e).fromArray(a)}return void 0!==t.displacementMap&&(r.displacementMap=i(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=i(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=i(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=i(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=i(t.specularMap)),void 0!==t.envMap&&(r.envMap=i(t.envMap)),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.lightMap&&(r.lightMap=i(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=i(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=i(t.gradientMap)),r}}),Object.assign(Gi.prototype,{load:function(t,e,i,n){var r=this;new di(r.manager).load(t,function(t){e(r.parse(JSON.parse(t)))},i,n)},parse:function(t){var e=new Mt,i=t.data.index;if(void 0!==i){s=new Uu[i.type](i.array);e.setIndex(new ut(s,1))}var n=t.data.attributes;for(var a in n){var o=n[a],s=new Uu[o.type](o.array);e.addAttribute(a,new ut(s,o.itemSize,o.normalized))}var c=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==c)for(var h=0,l=c.length;h!==l;++h){var u=c[h];e.addGroup(u.start,u.count,u.materialIndex)}var d=t.data.boundingSphere;if(void 0!==d){var p=new r;void 0!==d.center&&p.fromArray(d.center),e.boundingSphere=new $(p,d.radius)}return e}});var Uu={Int8Array:Int8Array,Uint8Array:Uint8Array,
// Workaround for IE11 pre KB2929437. See #11440
Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};Hi.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=this.handlers,i=0,n=e.length;i<n;i+=2){var r=e[i],a=e[i+1];if(r.test(t))return a}return null}},Object.assign(Hi.prototype,{crossOrigin:void 0,extractUrlBase:function(t){var e=t.split("/");return 1===e.length?"./":(e.pop(),e.join("/")+"/")},initMaterials:function(t,e,i){for(var n=[],r=0;r<t.length;++r)n[r]=this.createMaterial(t[r],e,i);return n},createMaterial:function(){var t={NoBlending:yh,NormalBlending:xh,AdditiveBlending:bh,SubtractiveBlending:_h,MultiplyBlending:wh,CustomBlending:Mh},e=new j,i=new fi,n=new zi;return function(r,a,o){function s(t,e,n,r,s){var h,l=a+t,u=Hi.Handlers.get(l);null!==u?h=u.load(l):(i.setCrossOrigin(o),h=i.load(l)),void 0!==e&&(h.repeat.fromArray(e),1!==e[0]&&(h.wrapS=hl),1!==e[1]&&(h.wrapT=hl)),void 0!==n&&h.offset.fromArray(n),void 0!==r&&("repeat"===r[0]&&(h.wrapS=hl),"mirror"===r[0]&&(h.wrapS=ul),"repeat"===r[1]&&(h.wrapT=hl),"mirror"===r[1]&&(h.wrapT=ul)),void 0!==s&&(h.anisotropy=s);var d=ou.generateUUID();return c[d]=h,d}
// convert from old material format
var c={},h={uuid:ou.generateUUID(),type:"MeshLambertMaterial"};for(var l in r){var u=r[l];switch(l){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":h.name=u;break;case"blending":h.blending=t[u];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",l,"is no longer supported.");break;case"colorDiffuse":h.color=e.fromArray(u).getHex();break;case"colorSpecular":h.specular=e.fromArray(u).getHex();break;case"colorEmissive":h.emissive=e.fromArray(u).getHex();break;case"specularCoef":h.shininess=u;break;case"shading":"basic"===u.toLowerCase()&&(h.type="MeshBasicMaterial"),"phong"===u.toLowerCase()&&(h.type="MeshPhongMaterial"),"standard"===u.toLowerCase()&&(h.type="MeshStandardMaterial");break;case"mapDiffuse":h.map=s(u,r.mapDiffuseRepeat,r.mapDiffuseOffset,r.mapDiffuseWrap,r.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapEmissive":h.emissiveMap=s(u,r.mapEmissiveRepeat,r.mapEmissiveOffset,r.mapEmissiveWrap,r.mapEmissiveAnisotropy);break;case"mapEmissiveRepeat":case"mapEmissiveOffset":case"mapEmissiveWrap":case"mapEmissiveAnisotropy":break;case"mapLight":h.lightMap=s(u,r.mapLightRepeat,r.mapLightOffset,r.mapLightWrap,r.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":h.aoMap=s(u,r.mapAORepeat,r.mapAOOffset,r.mapAOWrap,r.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":h.bumpMap=s(u,r.mapBumpRepeat,r.mapBumpOffset,r.mapBumpWrap,r.mapBumpAnisotropy);break;case"mapBumpScale":h.bumpScale=u;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":h.normalMap=s(u,r.mapNormalRepeat,r.mapNormalOffset,r.mapNormalWrap,r.mapNormalAnisotropy);break;case"mapNormalFactor":h.normalScale=[u,u];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":h.specularMap=s(u,r.mapSpecularRepeat,r.mapSpecularOffset,r.mapSpecularWrap,r.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapMetalness":h.metalnessMap=s(u,r.mapMetalnessRepeat,r.mapMetalnessOffset,r.mapMetalnessWrap,r.mapMetalnessAnisotropy);break;case"mapMetalnessRepeat":case"mapMetalnessOffset":case"mapMetalnessWrap":case"mapMetalnessAnisotropy":break;case"mapRoughness":h.roughnessMap=s(u,r.mapRoughnessRepeat,r.mapRoughnessOffset,r.mapRoughnessWrap,r.mapRoughnessAnisotropy);break;case"mapRoughnessRepeat":case"mapRoughnessOffset":case"mapRoughnessWrap":case"mapRoughnessAnisotropy":break;case"mapAlpha":h.alphaMap=s(u,r.mapAlphaRepeat,r.mapAlphaOffset,r.mapAlphaWrap,r.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":h.side=ph;break;case"doubleSided":h.side=fh;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),h.opacity=u;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":h[l]=u;break;case"vertexColors":!0===u&&(h.vertexColors=vh),"face"===u&&(h.vertexColors=gh);break;default:console.error("THREE.Loader.createMaterial: Unsupported",l,u)}}return"MeshBasicMaterial"===h.type&&delete h.emissive,"MeshPhongMaterial"!==h.type&&delete h.specular,h.opacity<1&&(h.transparent=!0),n.setTextures(c),n.parse(h)}}()}),Object.assign(Vi.prototype,{load:function(t,e,i,n){var r=this,a=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:Hi.prototype.extractUrlBase(t),o=new di(this.manager);o.setWithCredentials(this.withCredentials),o.load(t,function(i){var n=JSON.parse(i),o=n.metadata;if(void 0!==o){var s=o.type;if(void 0!==s){if("object"===s.toLowerCase())return void console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.ObjectLoader instead.");if("scene"===s.toLowerCase())return void console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.SceneLoader instead.")}}var c=r.parse(n,a);e(c.geometry,c.materials)},i,n)},setTexturePath:function(t){this.texturePath=t},parse:function(){return function(t,i){void 0!==t.data&&(
// Geometry 4.0 spec
t=t.data),void 0!==t.scale?t.scale=1/t.scale:t.scale=1;var n=new lt;if(function(t,i){function n(t,e){return t&1<<e}var a,o,s,c,h,l,u,d,p,f,m,g,v,y,x,b,_,w,M,E,T,S,A,L,R,P=t.faces,C=t.vertices,I=t.normals,U=t.colors,N=t.scale,O=0;if(void 0!==t.uvs){
// disregard empty arrays
for(a=0;a<t.uvs.length;a++)t.uvs[a].length&&O++;for(a=0;a<O;a++)i.faceVertexUvs[a]=[]}for(c=0,h=C.length;c<h;)(w=new r).x=C[c++]*N,w.y=C[c++]*N,w.z=C[c++]*N,i.vertices.push(w);for(c=0,h=P.length;c<h;)
// console.log("type", type, "bits", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);
if(f=P[c++],m=n(f,0),g=n(f,1),v=n(f,3),y=n(f,4),x=n(f,5),b=n(f,6),_=n(f,7),m){if(E=new ht,E.a=P[c],E.b=P[c+1],E.c=P[c+3],T=new ht,T.a=P[c+1],T.b=P[c+2],T.c=P[c+3],c+=4,g&&(p=P[c++],E.materialIndex=p,T.materialIndex=p),
// to get face <=> uv index correspondence
s=i.faces.length,v)for(a=0;a<O;a++)for(L=t.uvs[a],i.faceVertexUvs[a][s]=[],i.faceVertexUvs[a][s+1]=[],o=0;o<4;o++)R=new e(L[2*(d=P[c++])],L[2*d+1]),2!==o&&i.faceVertexUvs[a][s].push(R),0!==o&&i.faceVertexUvs[a][s+1].push(R);if(y&&(u=3*P[c++],E.normal.set(I[u++],I[u++],I[u]),T.normal.copy(E.normal)),x)for(a=0;a<4;a++)u=3*P[c++],A=new r(I[u++],I[u++],I[u]),2!==a&&E.vertexNormals.push(A),0!==a&&T.vertexNormals.push(A);if(b&&(S=U[l=P[c++]],E.color.setHex(S),T.color.setHex(S)),_)for(a=0;a<4;a++)S=U[l=P[c++]],2!==a&&E.vertexColors.push(new j(S)),0!==a&&T.vertexColors.push(new j(S));i.faces.push(E),i.faces.push(T)}else{if(M=new ht,M.a=P[c++],M.b=P[c++],M.c=P[c++],g&&(p=P[c++],M.materialIndex=p),
// to get face <=> uv index correspondence
s=i.faces.length,v)for(a=0;a<O;a++)for(L=t.uvs[a],i.faceVertexUvs[a][s]=[],o=0;o<3;o++)R=new e(L[2*(d=P[c++])],L[2*d+1]),i.faceVertexUvs[a][s].push(R);if(y&&(u=3*P[c++],M.normal.set(I[u++],I[u++],I[u])),x)for(a=0;a<3;a++)u=3*P[c++],A=new r(I[u++],I[u++],I[u]),M.vertexNormals.push(A);if(b&&(l=P[c++],M.color.setHex(U[l])),_)for(a=0;a<3;a++)l=P[c++],M.vertexColors.push(new j(U[l]));i.faces.push(M)}}(t,n),function(t,e){var i=void 0!==t.influencesPerVertex?t.influencesPerVertex:2;if(t.skinWeights)for(var n=0,r=t.skinWeights.length;n<r;n+=i){var a=t.skinWeights[n],o=i>1?t.skinWeights[n+1]:0,c=i>2?t.skinWeights[n+2]:0,h=i>3?t.skinWeights[n+3]:0;e.skinWeights.push(new s(a,o,c,h))}if(t.skinIndices)for(var n=0,r=t.skinIndices.length;n<r;n+=i){var l=t.skinIndices[n],u=i>1?t.skinIndices[n+1]:0,d=i>2?t.skinIndices[n+2]:0,p=i>3?t.skinIndices[n+3]:0;e.skinIndices.push(new s(l,u,d,p))}e.bones=t.bones,e.bones&&e.bones.length>0&&(e.skinWeights.length!==e.skinIndices.length||e.skinIndices.length!==e.vertices.length)&&console.warn("When skinning, number of vertices ("+e.vertices.length+"), skinIndices ("+e.skinIndices.length+"), and skinWeights ("+e.skinWeights.length+") should match.")}(t,n),function(t,e){var i=t.scale;if(void 0!==t.morphTargets)for(var n=0,a=t.morphTargets.length;n<a;n++){e.morphTargets[n]={},e.morphTargets[n].name=t.morphTargets[n].name,e.morphTargets[n].vertices=[];for(var o=e.morphTargets[n].vertices,s=t.morphTargets[n].vertices,c=0,h=s.length;c<h;c+=3){var l=new r;l.x=s[c]*i,l.y=s[c+1]*i,l.z=s[c+2]*i,o.push(l)}}if(void 0!==t.morphColors&&t.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');for(var u=e.faces,d=t.morphColors[0].colors,n=0,a=u.length;n<a;n++)u[n].color.fromArray(d,3*n)}}(t,n),function(t,e){var i=[],n=[];void 0!==t.animation&&n.push(t.animation),void 0!==t.animations&&(t.animations.length?n=n.concat(t.animations):n.push(t.animations));for(var r=0;r<n.length;r++){var a=Bi.parseAnimation(n[r],e.bones);a&&i.push(a)}
// parse implicit morph animations
if(e.morphTargets){
// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.
var o=Bi.CreateClipsFromMorphTargetSequences(e.morphTargets,10);i=i.concat(o)}i.length>0&&(e.animations=i)}(t,n),n.computeFaceNormals(),n.computeBoundingSphere(),void 0===t.materials||0===t.materials.length)return{geometry:n};return{geometry:n,materials:Hi.prototype.initMaterials(t.materials,i,this.crossOrigin)}}}()}),Object.assign(/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t){this.manager=void 0!==t?t:Ru,this.texturePath=""}.prototype,{load:function(t,e,i,n){""===this.texturePath&&(this.texturePath=t.substring(0,t.lastIndexOf("/")+1));var r=this;new di(r.manager).load(t,function(i){var a=null;try{a=JSON.parse(i)}catch(e){return void 0!==n&&n(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}var o=a.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?r.parse(a,e):console.error("THREE.ObjectLoader: Can't load "+t+". Use THREE.JSONLoader instead.")},i,n)},setTexturePath:function(t){this.texturePath=t},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t,e){var i=this.parseGeometries(t.geometries),n=this.parseImages(t.images,function(){void 0!==e&&e(o)}),r=this.parseTextures(t.textures,n),a=this.parseMaterials(t.materials,r),o=this.parseObject(t.object,i,a);return t.animations&&(o.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(o),o},parseGeometries:function(t){var e={};if(void 0!==t)for(var i=new Vi,n=new Gi,r=0,a=t.length;r<a;r++){var o,s=t[r];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new Su[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":// backwards compatible
o=new Su[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new Su[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new Su[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new Su[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new Su[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":o=new Su[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new Su[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new Su[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new Su[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"LatheGeometry":case"LatheBufferGeometry":o=new Su[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":o=new Su[s.type](s.vertices,s.indices,s.radius,s.details);break;case"BufferGeometry":o=n.parse(s);break;case"Geometry":o=i.parse(s,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),e[s.uuid]=o}return e},parseMaterials:function(t,e){var i={};if(void 0!==t){var n=new zi;n.setTextures(e);for(var r=0,a=t.length;r<a;r++){var o=t[r];if("MultiMaterial"===o.type){for(var s=[],c=0;c<o.materials.length;c++)s.push(n.parse(o.materials[c]));i[o.uuid]=s}else i[o.uuid]=n.parse(o)}}return i},parseAnimations:function(t){for(var e=[],i=0;i<t.length;i++){var n=Bi.parse(t[i]);e.push(n)}return e},parseImages:function(t,e){function i(t){return n.manager.itemStart(t),a.load(t,function(){n.manager.itemEnd(t)},void 0,function(){n.manager.itemEnd(t),n.manager.itemError(t)})}var n=this,r={};if(void 0!==t&&t.length>0){var a=new pi(new ui(e));a.setCrossOrigin(this.crossOrigin);for(var o=0,s=t.length;o<s;o++){var c=t[o],h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)?c.url:n.texturePath+c.url;r[c.uuid]=i(h)}}return r},parseTextures:function(t,e){function i(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}var n={};if(void 0!==t)for(var r=0,a=t.length;r<a;r++){var s=t[r];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===e[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);var c=new o(e[s.image]);c.needsUpdate=!0,c.uuid=s.uuid,void 0!==s.name&&(c.name=s.name),void 0!==s.mapping&&(c.mapping=i(s.mapping,Nu)),void 0!==s.offset&&c.offset.fromArray(s.offset),void 0!==s.repeat&&c.repeat.fromArray(s.repeat),void 0!==s.center&&c.center.fromArray(s.center),void 0!==s.rotation&&(c.rotation=s.rotation),void 0!==s.wrap&&(c.wrapS=i(s.wrap[0],Ou),c.wrapT=i(s.wrap[1],Ou)),void 0!==s.minFilter&&(c.minFilter=i(s.minFilter,Du)),void 0!==s.magFilter&&(c.magFilter=i(s.magFilter,Du)),void 0!==s.anisotropy&&(c.anisotropy=s.anisotropy),void 0!==s.flipY&&(c.flipY=s.flipY),n[s.uuid]=c}return n},parseObject:function(){var t=new i;return function(e,i,n){function r(t){return void 0===i[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),i[t]}function a(t){if(void 0!==t){if(Array.isArray(t)){for(var e=[],i=0,r=t.length;i<r;i++){var a=t[i];void 0===n[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),e.push(n[a])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}var o;switch(e.type){case"Scene":o=new te,void 0!==e.background&&Number.isInteger(e.background)&&(o.background=new j(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?o.fog=new $t(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(o.fog=new Kt(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":o=new Zt(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(o.focus=e.focus),void 0!==e.zoom&&(o.zoom=e.zoom),void 0!==e.filmGauge&&(o.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(o.filmOffset=e.filmOffset),void 0!==e.view&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new ct(e.left,e.right,e.top,e.bottom,e.near,e.far);break;case"AmbientLight":o=new Mi(e.color,e.intensity);break;case"DirectionalLight":o=new wi(e.color,e.intensity);break;case"PointLight":o=new bi(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new Ei(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new xi(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new gi(e.color,e.groundColor,e.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var s=r(e.geometry),c=a(e.material);o=s.bones&&s.bones.length>0?new se(s,c):new Ut(s,c);break;case"LOD":o=new re;break;case"Line":o=new he(r(e.geometry),a(e.material),e.mode);break;case"LineLoop":o=new ue(r(e.geometry),a(e.material));break;case"LineSegments":o=new le(r(e.geometry),a(e.material));break;case"PointCloud":case"Points":o=new pe(r(e.geometry),a(e.material));break;case"Sprite":o=new ne(a(e.material));break;case"Group":o=new fe;break;default:o=new ot}if(o.uuid=e.uuid,void 0!==e.name&&(o.name=e.name),void 0!==e.matrix?(t.fromArray(e.matrix),t.decompose(o.position,o.quaternion,o.scale)):(void 0!==e.position&&o.position.fromArray(e.position),void 0!==e.rotation&&o.rotation.fromArray(e.rotation),void 0!==e.quaternion&&o.quaternion.fromArray(e.quaternion),void 0!==e.scale&&o.scale.fromArray(e.scale)),void 0!==e.castShadow&&(o.castShadow=e.castShadow),void 0!==e.receiveShadow&&(o.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(o.shadow.bias=e.shadow.bias),void 0!==e.shadow.radius&&(o.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&o.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(o.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(o.visible=e.visible),void 0!==e.userData&&(o.userData=e.userData),void 0!==e.children)for(var h=e.children,l=0;l<h.length;l++)o.add(this.parseObject(h[l],i,n));if("LOD"===e.type)for(var u=e.levels,d=0;d<u.length;d++){var p=u[d],f=o.getObjectByProperty("uuid",p.object);void 0!==f&&o.addLevel(f,p.distance)}return o}}()});var Nu={UVMapping:300,CubeReflectionMapping:il,CubeRefractionMapping:nl,EquirectangularReflectionMapping:rl,EquirectangularRefractionMapping:al,SphericalReflectionMapping:ol,CubeUVReflectionMapping:sl,CubeUVRefractionMapping:cl},Ou={RepeatWrapping:hl,ClampToEdgeWrapping:ll,MirroredRepeatWrapping:ul},Du={NearestFilter:dl,NearestMipMapNearestFilter:pl,NearestMipMapLinearFilter:fl,LinearFilter:ml,LinearMipMapNearestFilter:gl,LinearMipMapLinearFilter:vl};Object.assign(Xi.prototype,{
// Virtual base class method to overwrite and implement in subclasses
//	- t [0 .. 1]
getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},
// Get point at relative position in curve according to arc length
// - u [0 .. 1]
getPointAt:function(t,e){var i=this.getUtoTmapping(t);return this.getPoint(i,e)},
// Get sequence of points using getPoint( t )
getPoints:function(t){void 0===t&&(t=5);for(var e=[],i=0;i<=t;i++)e.push(this.getPoint(i/t));return e},
// Get sequence of points using getPointAt( u )
getSpacedPoints:function(t){void 0===t&&(t=5);for(var e=[],i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e},
// Get total curve arc length
getLength:function(){var t=this.getLengths();return t[t.length-1]},
// Get list of cumulative segment lengths
getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,i,n=[],r=this.getPoint(0),a=0;for(n.push(0),i=1;i<=t;i++)a+=(e=this.getPoint(i/t)).distanceTo(r),n.push(a),r=e;return this.cacheArcLengths=n,n},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},
// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant
getUtoTmapping:function(t,e){var i,n=this.getLengths(),r=0,a=n.length;// The targeted u distance value to get
i=e||t*n[a-1];for(
// binary search for the index with largest value smaller than target u distance
var o,s=0,c=a-1;s<=c;)if(r=Math.floor(s+(c-s)/2),(// less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats
o=n[r]-i)<0)s=r+1;else{if(!(o>0)){c=r;break}c=r-1}if(r=c,n[r]===i)return r/(a-1);
// we could get finer grain at lengths, or use simple interpolation between two points
var h=n[r];return(r+(i-h)/(n[r+1]-h))/(a-1)},
// Returns a unit vector tangent at t
// In case any sub curve does not implement its tangent derivation,
// 2 points a small delta apart will be used to find its gradient
// which seems to give a reasonable approximation
getTangent:function(t){var e=t-1e-4,i=t+1e-4;
// Capping in case of danger
e<0&&(e=0),i>1&&(i=1);var n=this.getPoint(e);return this.getPoint(i).clone().sub(n).normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},computeFrenetFrames:function(t,e){
// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf
var n,a,o,s=new r,c=[],h=[],l=[],u=new r,d=new i;
// compute the tangent vectors for each segment on the curve
for(n=0;n<=t;n++)a=n/t,c[n]=this.getTangentAt(a),c[n].normalize();
// select an initial normal vector perpendicular to the first tangent vector,
// and in the direction of the minimum tangent xyz component
h[0]=new r,l[0]=new r;var p=Number.MAX_VALUE,f=Math.abs(c[0].x),m=Math.abs(c[0].y),g=Math.abs(c[0].z);
// compute the slowly-varying normal and binormal vectors for each segment on the curve
for(f<=p&&(p=f,s.set(1,0,0)),m<=p&&(p=m,s.set(0,1,0)),g<=p&&s.set(0,0,1),u.crossVectors(c[0],s).normalize(),h[0].crossVectors(c[0],u),l[0].crossVectors(c[0],h[0]),n=1;n<=t;n++)h[n]=h[n-1].clone(),l[n]=l[n-1].clone(),u.crossVectors(c[n-1],c[n]),u.length()>Number.EPSILON&&(u.normalize(),o=Math.acos(ou.clamp(c[n-1].dot(c[n]),-1,1)),// clamp for floating pt errors
h[n].applyMatrix4(d.makeRotationAxis(u,o))),l[n].crossVectors(c[n],h[n]);
// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same
if(!0===e)for(o=Math.acos(ou.clamp(h[0].dot(h[t]),-1,1)),o/=t,c[0].dot(u.crossVectors(h[0],h[t]))>0&&(o=-o),n=1;n<=t;n++)
// twist a little...
h[n].applyMatrix4(d.makeRotationAxis(c[n],o*n)),l[n].crossVectors(c[n],h[n]);return{tangents:c,normals:h,binormals:l}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),(qi.prototype=Object.create(Xi.prototype)).constructor=qi,qi.prototype.isLineCurve=!0,qi.prototype.getPoint=function(t,i){var n=i||new e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},
// Line curve is linear, so we can overwrite default getPointAt
qi.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},qi.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},qi.prototype.copy=function(t){return Xi.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Yi.prototype=Object.assign(Object.create(Xi.prototype),{constructor:Yi,add:function(t){this.curves.push(t)},closePath:function(){
// Add a line curve if start and end of lines are not connected
var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new qi(e,t))},
// To get accurate point with reference to
// entire path distance at time t,
// following has to be done:
// 1. Length of each sub path have to be known
// 2. Locate and identify type of curve
// 3. Get t for the curve
// 4. Return curve.getPointAt(t')
getPoint:function(t){
// To think about boundaries points.
for(var e=t*this.getLength(),i=this.getCurveLengths(),n=0;n<i.length;){if(i[n]>=e){var r=i[n]-e,a=this.curves[n],o=a.getLength(),s=0===o?0:1-r/o;return a.getPointAt(s)}n++}return null},
// We cannot use the default THREE.Curve getPoint() with getLength() because in
// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath
// getPoint() depends on getLength
getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},
// cacheLengths must be recalculated.
updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},
// Compute lengths and cache them
// We cannot overwrite getLengths() because UtoT mapping uses it.
getCurveLengths:function(){
// We use cache values if curves and cache array are same length
if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){void 0===t&&(t=40);for(var e=[],i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;for(var e,i=[],n=0,r=this.curves;n<r.length;n++)for(var a=r[n],o=a&&a.isEllipseCurve?2*t:a&&a.isLineCurve?1:a&&a.isSplineCurve?t*a.points.length:t,s=a.getPoints(o),c=0;c<s.length;c++){var h=s[c];e&&e.equals(h)||(// ensures no consecutive points are duplicates
i.push(h),e=h)}return this.autoClose&&i.length>1&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i},copy:function(t){Xi.prototype.copy.call(this,t),this.curves=[];for(var e=0,i=t.curves.length;e<i;e++){var n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}}),(Zi.prototype=Object.create(Xi.prototype)).constructor=Zi,Zi.prototype.isEllipseCurve=!0,Zi.prototype.getPoint=function(t,i){
// ensures that deltaAngle is 0 .. 2 PI
for(var n=i||new e,r=2*Math.PI,a=this.aEndAngle-this.aStartAngle,o=Math.abs(a)<Number.EPSILON;a<0;)a+=r;for(;a>r;)a-=r;a<Number.EPSILON&&(a=o?0:r),!0!==this.aClockwise||o||(a===r?a=-r:a-=r);var s=this.aStartAngle+t*a,c=this.aX+this.xRadius*Math.cos(s),h=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){var l=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=c-this.aX,p=h-this.aY;
// Rotate the point about the center of the ellipse.
c=d*l-p*u+this.aX,h=d*u+p*l+this.aY}return n.set(c,h)},Zi.prototype.copy=function(t){return Xi.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},(Ji.prototype=Object.create(Xi.prototype)).constructor=Ji,Ji.prototype.isSplineCurve=!0,Ji.prototype.getPoint=function(t,i){var n=i||new e,r=this.points,a=(r.length-1)*t,o=Math.floor(a),s=a-o,c=r[0===o?o:o-1],h=r[o],l=r[o>r.length-2?r.length-1:o+1],u=r[o>r.length-3?r.length-1:o+2];return n.set(ki(s,c.x,h.x,l.x,u.x),ki(s,c.y,h.y,l.y,u.y)),n},Ji.prototype.copy=function(t){Xi.prototype.copy.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var n=t.points[e];this.points.push(n.clone())}return this},(Qi.prototype=Object.create(Xi.prototype)).constructor=Qi,Qi.prototype.isCubicBezierCurve=!0,Qi.prototype.getPoint=function(t,i){var n=i||new e,r=this.v0,a=this.v1,o=this.v2,s=this.v3;return n.set(Wi(t,r.x,a.x,o.x,s.x),Wi(t,r.y,a.y,o.y,s.y)),n},Qi.prototype.copy=function(t){return Xi.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},(Ki.prototype=Object.create(Xi.prototype)).constructor=Ki,Ki.prototype.isQuadraticBezierCurve=!0,Ki.prototype.getPoint=function(t,i){var n=i||new e,r=this.v0,a=this.v1,o=this.v2;return n.set(ji(t,r.x,a.x,o.x),ji(t,r.y,a.y,o.y)),n},Ki.prototype.copy=function(t){return Xi.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this};var Fu=Object.assign(Object.create(Yi.prototype),{setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y)},moveTo:function(t,e){this.currentPoint.set(t,e)},lineTo:function(t,i){var n=new qi(this.currentPoint.clone(),new e(t,i));this.curves.push(n),this.currentPoint.set(t,i)},quadraticCurveTo:function(t,i,n,r){var a=new Ki(this.currentPoint.clone(),new e(t,i),new e(n,r));this.curves.push(a),this.currentPoint.set(n,r)},bezierCurveTo:function(t,i,n,r,a,o){var s=new Qi(this.currentPoint.clone(),new e(t,i),new e(n,r),new e(a,o));this.curves.push(s),this.currentPoint.set(a,o)},splineThru:function(t){var e=new Ji([this.currentPoint.clone()].concat(t));this.curves.push(e),this.currentPoint.copy(t[t.length-1])},arc:function(t,e,i,n,r,a){var o=this.currentPoint.x,s=this.currentPoint.y;this.absarc(t+o,e+s,i,n,r,a)},absarc:function(t,e,i,n,r,a){this.absellipse(t,e,i,i,n,r,a)},ellipse:function(t,e,i,n,r,a,o,s){var c=this.currentPoint.x,h=this.currentPoint.y;this.absellipse(t+c,e+h,i,n,r,a,o,s)},absellipse:function(t,e,i,n,r,a,o,s){var c=new Zi(t,e,i,n,r,a,o,s);if(this.curves.length>0){
// if a previous curve is present, attempt to join
var h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);var l=c.getPoint(1);this.currentPoint.copy(l)},copy:function(t){return Yi.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this}});$i.prototype=Fu,Fu.constructor=$i,tn.prototype=Object.assign(Object.create(Fu),{constructor:tn,getPointsHoles:function(t){for(var e=[],i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e},
// get points of shape and holes (keypoints based on segments parameter)
extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){$i.prototype.copy.call(this,t),this.holes=[];for(var e=0,i=t.holes.length;e<i;e++){var n=t.holes[e];this.holes.push(n.clone())}return this}}),Object.assign(en.prototype,{moveTo:function(t,e){this.currentPath=new $i,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e)},lineTo:function(t,e){this.currentPath.lineTo(t,e)},quadraticCurveTo:function(t,e,i,n){this.currentPath.quadraticCurveTo(t,e,i,n)},bezierCurveTo:function(t,e,i,n,r,a){this.currentPath.bezierCurveTo(t,e,i,n,r,a)},splineThru:function(t){this.currentPath.splineThru(t)},toShapes:function(t,e){function i(t){for(var e=[],i=0,n=t.length;i<n;i++){var r=t[i],a=new tn;a.curves=r.curves,e.push(a)}return e}function n(t,e){for(var i=e.length,n=!1,r=i-1,a=0;a<i;r=a++){var o=e[r],s=e[a],c=s.x-o.x,h=s.y-o.y;if(Math.abs(h)>Number.EPSILON){if(
// not parallel
h<0&&(o=e[a],c=-c,s=e[r],h=-h),t.y<o.y||t.y>s.y)continue;if(t.y===o.y){if(t.x===o.x)return!0}else{var l=h*(t.x-o.x)-c*(t.y-o.y);if(0===l)return!0;// inPt is on contour ?
if(l<0)continue;n=!n}}else{
// parallel or collinear
if(t.y!==o.y)continue;// parallel
// edge lies on the same horizontal line as inPt
if(s.x<=t.x&&t.x<=o.x||o.x<=t.x&&t.x<=s.x)return!0}}return n}var r=Tu.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===e)return i(a);var o,s,c,h=[];if(1===a.length)return s=a[0],c=new tn,c.curves=s.curves,h.push(c),h;var l=!r(a[0].getPoints());l=t?!l:l;
// console.log("Holes first", holesFirst);
var u,d=[],p=[],f=[],m=0;p[m]=void 0,f[m]=[];for(var g=0,v=a.length;g<v;g++)o=r(u=(s=a[g]).getPoints()),(o=t?!o:o)?(!l&&p[m]&&m++,p[m]={s:new tn,p:u},p[m].s.curves=s.curves,l&&m++,f[m]=[]):f[m].push({h:s,p:u[0]});
// only Holes? -> probably all Shapes with wrong orientation
if(!p[0])return i(a);if(p.length>1){for(var y=!1,x=[],b=0,_=p.length;b<_;b++)d[b]=[];for(var b=0,_=p.length;b<_;b++)for(var w=f[b],M=0;M<w.length;M++){for(var E=w[M],T=!0,S=0;S<p.length;S++)n(E.p,p[S].p)&&(b!==S&&x.push({froms:b,tos:S,hole:M}),T?(T=!1,d[S].push(E)):y=!0);T&&d[b].push(E)}
// console.log("ambiguous: ", ambiguous);
x.length>0&&(
// console.log("to change: ", toChange);
y||(f=d))}for(var A,g=0,L=p.length;g<L;g++){c=p[g].s,h.push(c);for(var R=0,P=(A=f[g]).length;R<P;R++)c.holes.push(A[R].h)}
//console.log("shape", shapes);
return h}}),Object.assign(nn.prototype,{isFont:!0,generateShapes:function(t,e,i){
//
void 0===e&&(e=100),void 0===i&&(i=4);for(var n=this.data,r=function(t){for(var i=String(t).split(""),r=e/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,o=0,s=0,c=[],h=0;h<i.length;h++){var l=i[h];if("\n"===l)o=0,s-=a;else{var u=function(t,e,i,r){var a=n.glyphs[t]||n.glyphs["?"];if(a){var o,s,c,h,l,u,d,p,f,m=new en,g=[];if(a.o)for(var v=a._cachedOutline||(a._cachedOutline=a.o.split(" ")),y=0,x=v.length;y<x;)switch(v[y++]){case"m":// moveTo
o=v[y++]*e+i,s=v[y++]*e+r,m.moveTo(o,s);break;case"l":// lineTo
o=v[y++]*e+i,s=v[y++]*e+r,m.lineTo(o,s);break;case"q":// quadraticCurveTo
c=v[y++]*e+i,h=v[y++]*e+r,l=v[y++]*e+i,u=v[y++]*e+r,m.quadraticCurveTo(l,u,c,h),(f=g[g.length-1])&&(f.x,f.y);break;case"b":// bezierCurveTo
c=v[y++]*e+i,h=v[y++]*e+r,l=v[y++]*e+i,u=v[y++]*e+r,d=v[y++]*e+i,p=v[y++]*e+r,m.bezierCurveTo(l,u,d,p,c,h),(f=g[g.length-1])&&(f.x,f.y)}return{offsetX:a.ha*e,path:m}}}(l,r,o,s);o+=u.offsetX,c.push(u.path)}}return c}(t),a=[],o=0,s=r.length;o<s;o++)Array.prototype.push.apply(a,r[o].toShapes());return a}}),Object.assign(/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t){this.manager=void 0!==t?t:Ru}.prototype,{load:function(t,e,i,n){var r=this,a=new di(this.manager);a.setPath(this.path),a.load(t,function(t){var i;try{i=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),i=JSON.parse(t.substring(65,t.length-2))}var n=r.parse(i);e&&e(n)},i,n)},parse:function(t){return new nn(t)},setPath:function(t){return this.path=t,this}});var Bu,zu={getContext:function(){return void 0===Bu&&(Bu=new(window.AudioContext||window.webkitAudioContext)),Bu},setContext:function(t){Bu=t}};Object.assign(rn.prototype,{load:function(t,e,i,n){var r=new di(this.manager);r.setResponseType("arraybuffer"),r.load(t,function(t){zu.getContext().decodeAudioData(t,function(t){e(t)})},i,n)}}),Object.assign(/**
 * @author mrdoob / http://mrdoob.com/
 */
function(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Zt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Zt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}.prototype,{update:function(){var t,e,n,r,a,o,s,c,h=new i,l=new i;return function(i){if(t!==this||e!==i.focus||n!==i.fov||r!==i.aspect*this.aspect||a!==i.near||o!==i.far||s!==i.zoom||c!==this.eyeSep){t=this,e=i.focus,n=i.fov,r=i.aspect*this.aspect,a=i.near,o=i.far,s=i.zoom;
// Off-axis stereoscopic effect based on
// http://paulbourke.net/stereographics/stereorender/
var u,d,p=i.projectionMatrix.clone(),f=(c=this.eyeSep/2)*a/e,m=a*Math.tan(ou.DEG2RAD*n*.5)/s;
// translate xOffset
l.elements[12]=-c,h.elements[12]=c,
// for left eye
u=-m*r+f,d=m*r+f,p.elements[0]=2*a/(d-u),p.elements[8]=(d+u)/(d-u),this.cameraL.projectionMatrix.copy(p),
// for right eye
u=-m*r-f,d=m*r-f,p.elements[0]=2*a/(d-u),p.elements[8]=(d+u)/(d-u),this.cameraR.projectionMatrix.copy(p)}this.cameraL.matrixWorld.copy(i.matrixWorld).multiply(l),this.cameraR.matrixWorld.copy(i.matrixWorld).multiply(h)}}()}),(an.prototype=Object.create(ot.prototype)).constructor=an,on.prototype=Object.assign(Object.create(ot.prototype),{constructor:on,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(t){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){this.gain.gain.value=t},updateMatrixWorld:function(){var t=new r,e=new n,i=new r,a=new r;return function(n){ot.prototype.updateMatrixWorld.call(this,n);var r=this.context.listener,o=this.up;this.matrixWorld.decompose(t,e,i),a.set(0,0,-1).applyQuaternion(e),r.positionX?(r.positionX.setValueAtTime(t.x,this.context.currentTime),r.positionY.setValueAtTime(t.y,this.context.currentTime),r.positionZ.setValueAtTime(t.z,this.context.currentTime),r.forwardX.setValueAtTime(a.x,this.context.currentTime),r.forwardY.setValueAtTime(a.y,this.context.currentTime),r.forwardZ.setValueAtTime(a.z,this.context.currentTime),r.upX.setValueAtTime(o.x,this.context.currentTime),r.upY.setValueAtTime(o.y,this.context.currentTime),r.upZ.setValueAtTime(o.z,this.context.currentTime)):(r.setPosition(t.x,t.y,t.z),r.setOrientation(a.x,a.y,a.z,o.x,o.y,o.z))}}()}),sn.prototype=Object.assign(Object.create(ot.prototype),{constructor:sn,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.onended=this.onEnded.bind(this),t.playbackRate.setValueAtTime(this.playbackRate,this.startTime),this.startTime=this.context.currentTime,t.start(this.startTime,this.offset),this.isPlaying=!0,this.source=t,this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this.source.stop(),this.offset+=(this.context.currentTime-this.startTime)*this.playbackRate,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")},stop:function(){if(!1!==this.hasPlaybackControl)return this.source.stop(),this.offset=0,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),!0===this.isPlaying?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime),this;console.warn("THREE.Audio: this Audio has no playback control.")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.value=t,this}}),cn.prototype=Object.assign(Object.create(sn.prototype),{constructor:cn,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){this.panner.refDistance=t},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){this.panner.rolloffFactor=t},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){this.panner.distanceModel=t},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){this.panner.maxDistance=t},updateMatrixWorld:function(){var t=new r;return function(e){ot.prototype.updateMatrixWorld.call(this,e),t.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(t.x,t.y,t.z)}}()}),Object.assign(hn.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var t=0,e=this.getFrequencyData(),i=0;i<e.length;i++)t+=e[i];return t/e.length}}),Object.assign(ln.prototype,{
// accumulate data in the 'incoming' region into 'accu<i>'
accumulate:function(t,e){
// note: happily accumulating nothing when weight = 0, the caller knows
// the weight and shouldn't have made the call in the first place
var i=this.buffer,n=this.valueSize,r=t*n+n,a=this.cumulativeWeight;if(0===a){
// accuN := incoming * weight
for(var o=0;o!==n;++o)i[r+o]=i[o];a=e}else{var s=e/(
// accuN := accuN + incoming * weight
a+=e);this._mixBufferRegion(i,r,0,s,n)}this.cumulativeWeight=a},
// apply the state of 'accu<i>' to the binding when accus differ
apply:function(t){var e=this.valueSize,i=this.buffer,n=t*e+e,r=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,r<1){
// accuN := accuN + original * ( 1 - cumulativeWeight )
var o=3*e;this._mixBufferRegion(i,n,o,1-r,e)}for(var s=e,c=e+e;s!==c;++s)if(i[s]!==i[s+e]){
// value has changed -> update scene graph
a.setValue(i,n);break}},
// remember the state of the bound property and copy it to both accus
saveOriginalState:function(){var t=this.binding,e=this.buffer,i=this.valueSize,n=3*i;t.getValue(e,n);
// accu[0..1] := orig -- initially detect changes against the original
for(var r=i,a=n;r!==a;++r)e[r]=e[n+r%i];this.cumulativeWeight=0},
// apply the state previously taken via 'saveOriginalState' to the binding
restoreOriginalState:function(){var t=3*this.valueSize;this.binding.setValue(this.buffer,t)},
// mix functions
_select:function(t,e,i,n,r){if(n>=.5)for(var a=0;a!==r;++a)t[e+a]=t[i+a]},_slerp:function(t,e,i,r){n.slerpFlat(t,e,t,e,t,i,r)},_lerp:function(t,e,i,n,r){for(var a=1-n,o=0;o!==r;++o){var s=e+o;t[s]=t[s]*a+t[i+o]*n}}}),Object.assign(un.prototype,{getValue:function(t,e){this.bind();// bind all binding
var i=this._targetGroup.nCachedObjects_,n=this._bindings[i];
// and only call .getValue on the first
void 0!==n&&n.getValue(t,e)},setValue:function(t,e){for(var i=this._bindings,n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}}),Object.assign(dn,{Composite:un,create:function(t,e,i){return t&&t.isAnimationObjectGroup?new dn.Composite(t,e,i):new dn(t,e,i)},/**
	 * Replaces spaces with underscores and removes unsupported characters from
	 * node names, to ensure compatibility with parseTrackName().
	 *
	 * @param  {string} name Node name to be sanitized.
	 * @return {string}
	 */
sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(/[^\w-]/g,"")},parseTrackName:function(){
// Parent directories, delimited by '/' or ':'. Currently unused, but must
// be matched to parse the rest of the track name.
var t=new RegExp("^"+/((?:[\w-]+[\/:])*)/.source+/([\w-\.]+)?/.source+/(?:\.([\w-]+)(?:\[(.+)\])?)?/.source+/\.([\w-]+)(?:\[(.+)\])?/.source+"$"),e=["material","materials","bones"];return function(i){var n=t.exec(i);if(!n)throw new Error("PropertyBinding: Cannot parse trackName: "+i);var r={
// directoryName: matches[ 1 ], // (tschw) currently unused
nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],// required
propertyIndex:n[6]},a=r.nodeName&&r.nodeName.lastIndexOf(".");if(void 0!==a&&-1!==a){var o=r.nodeName.substring(a+1);
// Object names must be checked against a whitelist. Otherwise, there
// is no way to parse 'foo.bar.baz': 'baz' must be a property, but
// 'bar' could be the objectName, or part of a nodeName (which can
// include '.' characters).
-1!==e.indexOf(o)&&(r.nodeName=r.nodeName.substring(0,a),r.objectName=o)}if(null===r.propertyName||0===r.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+i);return r}}(),findNode:function(t,e){if(!e||""===e||"root"===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;
// search into skeleton bones.
if(t.skeleton){var i=function(t){for(var i=0;i<t.bones.length;i++){var n=t.bones[i];if(n.name===e)return n}return null}(t.skeleton);if(i)return i}
// search into node subtree.
if(t.children){var n=function(t){for(var i=0;i<t.length;i++){var r=t[i];if(r.name===e||r.uuid===e)return r;var a=n(r.children);if(a)return a}return null},r=n(t.children);if(r)return r}return null}}),Object.assign(dn.prototype,{// prototype, continued
// these are used to "bind" a nonexistent property
_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)t[e++]=i[n]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[
// Direct
function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[
// EntireArray
function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++]},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[
// ArrayElement
function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[
// HasToFromArray
function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},
// create getter / setter pair for a property in the scene graph
bind:function(){var t=this.node,e=this.parsedPath,i=e.objectName,n=e.propertyName,r=e.propertyIndex;
// ensure there is a value node
if(t||(t=dn.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),
// set fail state so we can just 'return' on error
this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(i){var a=e.objectIndex;
// special cases were we need to reach deeper into the hierarchy to get the face materials....
switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);
// potential future optimization: skip this if propertyIndex is already an integer
// and convert the integer string to a true integer.
t=t.skeleton.bones;
// support resolving morphTarget names into indices.
for(h=0;h<t.length;h++)if(t[h].name===a){a=h;break}break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==a){if(void 0===t[a])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[a]}}
// resolve property
var o=t[n];if(void 0!==o){
// determine versioning scheme
var s=this.Versioning.None;void 0!==t.needsUpdate?(// material
s=this.Versioning.NeedsUpdate,this.targetObject=t):void 0!==t.matrixWorldNeedsUpdate&&(// node transform
s=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=t);
// determine how the property gets bound
var c=this.BindingType.Direct;if(void 0!==r){
// access a sub element of the property array (only primitives are supported right now)
if("morphTargetInfluences"===n){
// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.
// support resolving morphTarget names into indices.
if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);for(h=0;h<this.node.geometry.morphAttributes.position.length;h++)if(t.geometry.morphAttributes.position[h].name===r){r=h;break}}else{if(!t.geometry.morphTargets)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);for(var h=0;h<this.node.geometry.morphTargets.length;h++)if(t.geometry.morphTargets[h].name===r){r=h;break}}}c=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else void 0!==o.fromArray&&void 0!==o.toArray?(
// must use copy for Object3D.Euler/Quaternion
c=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(c=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=n;
// select getter / setter
this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][s]}else{var l=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+n+" but it wasn't found.",t)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null,
// back to the prototype version of getValue / setValue
// note: avoiding to mutate the shape of 'this' via 'delete'
this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),
//!\ DECLARE ALIAS AFTER assign prototype !
Object.assign(dn.prototype,{
// initial state of these methods that calls 'bind'
_getValue_unbound:dn.prototype.getValue,_setValue_unbound:dn.prototype.setValue}),Object.assign(/**
 *
 * A group of objects that receives a shared animation state.
 *
 * Usage:
 *
 * 	-	Add objects you would otherwise pass as 'root' to the
 * 		constructor or the .clipAction method of AnimationMixer.
 *
 * 	-	Instead pass this object as 'root'.
 *
 * 	-	You can also add and remove objects later when the mixer
 * 		is running.
 *
 * Note:
 *
 *  	Objects of this class appear as one object to the mixer,
 *  	so cache control of the individual objects must be done
 *  	on the group.
 *
 * Limitation:
 *
 * 	- 	The animated properties must be compatible among the
 * 		all objects in the group.
 *
 *  -	A single property can either be controlled through a
 *  	target group or directly, but not both.
 *
 * @author tschw
 */
function(){this.uuid=ou.generateUUID(),
// cached objects followed by the active ones
this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;// threshold
// note: read by PropertyBinding.Composite
var t={};this._indicesByUUID=t;// for bookkeeping
for(var e=0,i=arguments.length;e!==i;++e)t[arguments[e].uuid]=e;this._paths=[],// inside: string
this._parsedPaths=[],// inside: { we don't care, here }
this._bindings=[],// inside: Array< PropertyBinding >
this._bindingsIndicesByPath={};// inside: indices in these arrays
var n=this;this.stats={objects:{get total(){return n._objects.length},get inUse(){return this.total-n.nCachedObjects_}},get bindingsPerObject(){return n._bindings.length}}}.prototype,{isAnimationObjectGroup:!0,add:function(){for(var t=this._objects,e=t.length,i=this.nCachedObjects_,n=this._indicesByUUID,r=this._paths,a=this._parsedPaths,o=this._bindings,s=o.length,c=0,h=arguments.length;c!==h;++c){var l=arguments[c],u=l.uuid,d=n[u],p=void 0;if(void 0===d){
// unknown object -> add it to the ACTIVE region
d=e++,n[u]=d,t.push(l);
// accounting is done, now do the same for all bindings
for(var f=0,m=s;f!==m;++f)o[f].push(new dn(l,r[f],a[f]))}else if(d<i){p=t[d];
// move existing object to the ACTIVE region
var g=--i,v=t[g];n[v.uuid]=d,t[d]=v,n[u]=g,t[g]=l;
// accounting is done, now do the same for all bindings
for(var f=0,m=s;f!==m;++f){var y=o[f],x=y[g],b=y[d];y[d]=x,void 0===b&&(
// since we do not bother to create new bindings
// for objects that are cached, the binding may
// or may not exist
b=new dn(l,r[f],a[f])),y[g]=b}}else t[d]!==p&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}// for arguments
this.nCachedObjects_=i},remove:function(){for(var t=this._objects,e=this.nCachedObjects_,i=this._indicesByUUID,n=this._bindings,r=n.length,a=0,o=arguments.length;a!==o;++a){var s=arguments[a],c=s.uuid,h=i[c];if(void 0!==h&&h>=e){
// move existing object into the CACHED region
var l=e++,u=t[l];i[u.uuid]=h,t[h]=u,i[c]=l,t[l]=s;
// accounting is done, now do the same for all bindings
for(var d=0,p=r;d!==p;++d){var f=n[d],m=f[l],g=f[h];f[h]=m,f[l]=g}}}// for arguments
this.nCachedObjects_=e},
// remove & forget
uncache:function(){for(var t=this._objects,e=t.length,i=this.nCachedObjects_,n=this._indicesByUUID,r=this._bindings,a=r.length,o=0,s=arguments.length;o!==s;++o){var c=arguments[o].uuid,h=n[c];if(void 0!==h)if(delete n[c],h<i){
// object is cached, shrink the CACHED region
var l=--i,u=t[l],d=t[v=--e];
// last cached object takes this object's place
n[u.uuid]=h,t[h]=u,
// last object goes to the activated slot and pop
n[d.uuid]=l,t[l]=d,t.pop();
// accounting is done, now do the same for all bindings
for(var p=0,f=a;p!==f;++p){var m=(y=r[p])[l],g=y[v];y[h]=m,y[l]=g,y.pop()}}else{
// object is active, just swap with the last and pop
var v=--e;n[(d=t[v]).uuid]=h,t[h]=d,t.pop();
// accounting is done, now do the same for all bindings
for(var p=0,f=a;p!==f;++p){var y=r[p];y[h]=y[v],y.pop()}}}// for arguments
this.nCachedObjects_=i},
// Internal interface used by befriended PropertyBinding.Composite:
subscribe_:function(t,e){
// returns an array of bindings for the given path that is changed
// according to the contained objects in the group
var i=this._bindingsIndicesByPath,n=i[t],r=this._bindings;if(void 0!==n)return r[n];var a=this._paths,o=this._parsedPaths,s=this._objects,c=s.length,h=this.nCachedObjects_,l=new Array(c);n=r.length,i[t]=n,a.push(t),o.push(e),r.push(l);for(var u=h,d=s.length;u!==d;++u){var p=s[u];l[u]=new dn(p,t,e)}return l},unsubscribe_:function(t){
// tells the group to forget about a property path and no longer
// update the array previously obtained with 'subscribe_'
var e=this._bindingsIndicesByPath,i=e[t];if(void 0!==i){var n=this._paths,r=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o];e[t[o]]=i,a[i]=s,a.pop(),r[i]=r[o],r.pop(),n[i]=n[o],n.pop()}}}),Object.assign(pn.prototype,{
// State & Scheduling
play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){// forget scheduling
// restart clip
// forget previous loops
return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},
// return true when play has been called
isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},
// Weight
// set the weight stopping any scheduled fading
// although .enabled = false yields an effective weight of zero, this
// method does *not* change .enabled, because it would be confusing
setEffectiveWeight:function(t){
// note: same logic as when updated at runtime
return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},
// return the weight considering fading and .enabled
getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,i){if(t.fadeOut(e),this.fadeIn(e),i){var n=this._clip.duration,r=t._clip.duration,a=r/n,o=n/r;t.warp(1,a,e),this.warp(o,1,e)}return this},crossFadeTo:function(t,e,i){return t.crossFadeFrom(this,e,i)},stopFading:function(){var t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},
// Time Scale Control
// set the time scale stopping any scheduled warping
// although .paused = true yields an effective time scale of zero, this
// method does *not* change .paused, because it would be confusing
setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},
// return the time scale considering warping and .paused
getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,i){var n=this._mixer,r=n.time,a=this._timeScaleInterpolant,o=this.timeScale;null===a&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);var s=a.parameterPositions,c=a.sampleValues;return s[0]=r,s[1]=r+i,c[0]=t/o,c[1]=e/o,this},stopWarping:function(){var t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},
// Object Accessors
getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},
// Interna
_update:function(t,e,i,n){
// called by the mixer
if(this.enabled){var r=this._startTime;if(null!==r){
// check for scheduled start of action
var a=(t-r)*i;if(a<0||0===i)return;
// start
this._startTime=null,// unschedule
e=i*a}
// apply time scale and advance time
e*=this._updateTimeScale(t);var o=this._updateTime(e),s=this._updateWeight(t);if(s>0)for(var c=this._interpolants,h=this._propertyBindings,l=0,u=c.length;l!==u;++l)c[l].evaluate(o),h[l].accumulate(n,s)}else
// call ._updateWeight() to update ._effectiveWeight
this._updateWeight(t)},_updateWeight:function(t){var e=0;if(this.enabled){e=this.weight;var i=this._weightInterpolant;if(null!==i){var n=i.evaluate(t)[0];e*=n,t>i.parameterPositions[1]&&(this.stopFading(),0===n&&(
// faded out, disable
this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){var e=0;if(!this.paused){e=this.timeScale;var i=this._timeScaleInterpolant;if(null!==i){e*=i.evaluate(t)[0],t>i.parameterPositions[1]&&(this.stopWarping(),0===e?
// motion has halted, pause
this.paused=!0:
// warp done - apply final time scale
this.timeScale=e)}}return this._effectiveTimeScale=e,e},_updateTime:function(t){var e=this.time+t;if(0===t)return e;var i=this._clip.duration,n=this.loop,r=this._loopCount;if(2200===n){-1===r&&(
// just started
this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(e>=i)e=i;else{if(!(e<0))break t;e=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{// repetitive Repeat or PingPong
var a=2202===n;if(-1===r&&(
// just started
t>=0?(r=0,this._setEndings(!0,0===this.repetitions,a)):
// when looping in reverse direction, the initial
// transition through zero counts as a repetition,
// so leave loopCount at -1
this._setEndings(0===this.repetitions,!0,a)),e>=i||e<0){
// wrap around
var o=Math.floor(e/i);// signed
e-=i*o,r+=Math.abs(o);var s=this.repetitions-r;if(s<0)
// have to stop (switch state, clamp time, fire event)
this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=t>0?i:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{
// keep running
if(0===s){
// entering the last round
var c=t<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}if(a&&1==(1&r))
// invert time for the "pong round"
return this.time=e,i-e}return this.time=e,e},_setEndings:function(t,e,i){var n=this._interpolantSettings;i?(n.endingStart=2401,n.endingEnd=2401):(
// assuming for LoopOnce atStart == atEnd == true
n.endingStart=t?this.zeroSlopeAtStart?2401:ql:2402,n.endingEnd=e?this.zeroSlopeAtEnd?2401:ql:2402)},_scheduleFading:function(t,e,i){var n=this._mixer,r=n.time,a=this._weightInterpolant;null===a&&(a=n._lendControlInterpolant(),this._weightInterpolant=a);var o=a.parameterPositions,s=a.sampleValues;return o[0]=r,s[0]=e,o[1]=r+t,s[1]=i,this}}),Object.assign(/**
 *
 * Player for AnimationClips.
 *
 *
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 * @author tschw
 */
function(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}.prototype,t.prototype,{_bindAction:function(t,e){var i=t._localRoot||this._root,n=t._clip.tracks,r=n.length,a=t._propertyBindings,o=t._interpolants,s=i.uuid,c=this._bindingsByRootAndName,h=c[s];void 0===h&&(h={},c[s]=h);for(var l=0;l!==r;++l){var u=n[l],d=u.name,p=h[d];if(void 0!==p)a[l]=p;else{if(void 0!==(p=a[l])){
// existing binding, make sure the cache knows
null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,s,d));continue}var f=e&&e._propertyBindings[l].binding.parsedPath;++(p=new ln(dn.create(i,d,f),u.ValueTypeName,u.getValueSize())).referenceCount,this._addInactiveBinding(p,s,d),a[l]=p}o[l].resultBuffer=p.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){
// this action has been forgotten by the cache, but the user
// appears to be still using it -> rebind
var e=(t._localRoot||this._root).uuid,i=t._clip.uuid,n=this._actionsByClip[i];this._bindAction(t,n&&n.knownActions[0]),this._addInactiveAction(t,i,e)}
// increment reference counts / sort out state
for(var r=t._propertyBindings,a=0,o=r.length;a!==o;++a){var s=r[a];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){
// decrement reference counts / sort out state
for(var e=t._propertyBindings,i=0,n=e.length;i!==n;++i){var r=e[i];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}},
// Memory manager
_initMemoryManager:function(){this._actions=[],// 'nActiveActions' followed by inactive ones
this._nActiveActions=0,this._actionsByClip={},
// inside:
// {
// 		knownActions: Array< AnimationAction >	- used as prototypes
// 		actionByRoot: AnimationAction			- lookup
// }
this._bindings=[],// 'nActiveBindings' followed by inactive ones
this._nActiveBindings=0,this._bindingsByRootAndName={},// inside: Map< name, PropertyMixer >
this._controlInterpolants=[],// same game as above
this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},
// Memory management for AnimationAction objects
_isActiveAction:function(t){var e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,i){var n=this._actions,r=this._actionsByClip,a=r[e];if(void 0===a)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=a;else{var o=a.knownActions;t._byClipCacheIndex=o.length,o.push(t)}t._cacheIndex=n.length,n.push(t),a.actionByRoot[i]=t},_removeInactiveAction:function(t){var e=this._actions,i=e[e.length-1],n=t._cacheIndex;i._cacheIndex=n,e[n]=i,e.pop(),t._cacheIndex=null;var r=t._clip.uuid,a=this._actionsByClip,o=a[r],s=o.knownActions,c=s[s.length-1],h=t._byClipCacheIndex;c._byClipCacheIndex=h,s[h]=c,s.pop(),t._byClipCacheIndex=null;delete o.actionByRoot[(t._localRoot||this._root).uuid],0===s.length&&delete a[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,i=0,n=e.length;i!==n;++i){var r=e[i];0==--r.referenceCount&&this._removeInactiveBinding(r)}},_lendAction:function(t){
// [ active actions |  inactive actions  ]
// [  active actions >| inactive actions ]
//                 s        a
//                  <-swap->
//                 a        s
var e=this._actions,i=t._cacheIndex,n=this._nActiveActions++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_takeBackAction:function(t){
// [  active actions  | inactive actions ]
// [ active actions |< inactive actions  ]
//        a        s
//         <-swap->
//        s        a
var e=this._actions,i=t._cacheIndex,n=--this._nActiveActions,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},
// Memory management for PropertyMixer objects
_addInactiveBinding:function(t,e,i){var n=this._bindingsByRootAndName,r=n[e],a=this._bindings;void 0===r&&(r={},n[e]=r),r[i]=t,t._cacheIndex=a.length,a.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,i=t.binding,n=i.rootNode.uuid,r=i.path,a=this._bindingsByRootAndName,o=a[n],s=e[e.length-1],c=t._cacheIndex;s._cacheIndex=c,e[c]=s,e.pop(),delete o[r];t:{for(var h in o)break t;// eslint-disable-line no-unused-vars
delete a[n]}},_lendBinding:function(t){var e=this._bindings,i=t._cacheIndex,n=this._nActiveBindings++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_takeBackBinding:function(t){var e=this._bindings,i=t._cacheIndex,n=--this._nActiveBindings,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},
// Memory management of Interpolants for weight and time scale
_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,i=t[e];return void 0===i&&((i=new Ai(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=e,t[e]=i),i},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,i=t.__cacheIndex,n=--this._nActiveControlInterpolants,r=e[n];t.__cacheIndex=n,e[n]=t,r.__cacheIndex=i,e[i]=r},_controlInterpolantsResultBuffer:new Float32Array(1),
// return an action for a clip optionally using a custom root target
// object (this method allocates a lot of dynamic memory in case a
// previously unknown clip/root combination is specified)
clipAction:function(t,e){var i=e||this._root,n=i.uuid,r="string"==typeof t?Bi.findByName(i,t):t,a=null!==r?r.uuid:t,o=this._actionsByClip[a],s=null;if(void 0!==o){var c=o.actionByRoot[n];if(void 0!==c)return c;
// we know the clip, so we don't have to parse all
// the bindings again but can just copy
s=o.knownActions[0],
// also, take the clip from the prototype action
null===r&&(r=s._clip)}
// clip must be known when specified via string
if(null===r)return null;
// allocate all resources required to run it
var h=new pn(this,r,e);
// and make the action known to the memory manager
return this._bindAction(h,s),this._addInactiveAction(h,a,n),h},
// get an existing action
existingAction:function(t,e){var i=e||this._root,n=i.uuid,r="string"==typeof t?Bi.findByName(i,t):t,a=r?r.uuid:t,o=this._actionsByClip[a];return void 0!==o?o.actionByRoot[n]||null:null},
// deactivates all previously scheduled actions
stopAllAction:function(){var t=this._actions,e=this._nActiveActions,i=this._bindings,n=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(r=0;r!==e;++r)t[r].reset();for(var r=0;r!==n;++r)i[r].useCount=0;return this},
// advance the time and update apply the animation
update:function(t){t*=this.timeScale;
// run active actions
for(var e=this._actions,i=this._nActiveActions,n=this.time+=t,r=Math.sign(t),a=this._accuIndex^=1,o=0;o!==i;++o){e[o]._update(n,t,r,a)}for(var s=this._bindings,c=this._nActiveBindings,o=0;o!==c;++o)s[o].apply(a);return this},
// return this mixer's root target object
getRoot:function(){return this._root},
// free all resources specific to a particular clip
uncacheClip:function(t){var e=this._actions,i=t.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){for(var a=r.knownActions,o=0,s=a.length;o!==s;++o){var c=a[o];this._deactivateAction(c);var h=c._cacheIndex,l=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,l._cacheIndex=h,e[h]=l,e.pop(),this._removeInactiveBindingsForAction(c)}delete n[i]}},
// free all resources specific to a particular root target object
uncacheRoot:function(t){var e=t.uuid,i=this._actionsByClip;for(var n in i){var r=i[n].actionByRoot[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}var a=this._bindingsByRootAndName[e];if(void 0!==a)for(var o in a){var s=a[o];s.restoreOriginalState(),this._removeInactiveBinding(s)}},
// remove a targeted clip from the cache
uncacheAction:function(t,e){var i=this.existingAction(t,e);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}),fn.prototype.clone=function(){return new fn(void 0===this.value.clone?this.value:this.value.clone())},mn.prototype=Object.assign(Object.create(Mt.prototype),{constructor:mn,isInstancedBufferGeometry:!0,copy:function(t){return Mt.prototype.copy.call(this,t),this.maxInstancedCount=t.maxInstancedCount,this},clone:function(){return(new this.constructor).copy(this)}}),Object.defineProperties(gn.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(gn.prototype,{isInterleavedBufferAttribute:!0,setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=r,this}}),Object.defineProperty(vn.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(vn.prototype,{isInterleavedBuffer:!0,setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==t?t.length/this.stride:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.dynamic=t.dynamic,this},copyAt:function(t,e,i){t*=this.stride,i*=e.stride;for(var n=0,r=this.stride;n<r;n++)this.array[t+n]=e.array[i+n];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}}),yn.prototype=Object.assign(Object.create(vn.prototype),{constructor:yn,isInstancedInterleavedBuffer:!0,copy:function(t){return vn.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),xn.prototype=Object.assign(Object.create(ut.prototype),{constructor:xn,isInstancedBufferAttribute:!0,copy:function(t){return ut.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),Object.assign(bn.prototype,{linePrecision:1,set:function(t,e){
// direction is assumed to be normalized (for accurate distance calculations)
this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize()):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),// set origin in plane of camera
this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e){var i=[];return wn(t,this,i,e),i.sort(_n),i},intersectObjects:function(t,e){var i=[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(var n=0,r=t.length;n<r;n++)wn(t[n],this,i,e);return i.sort(_n),i}}),Object.assign(/**
 * @author alteredq / http://alteredqualia.com/
 */
function(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),// see #10732
this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var e=("undefined"==typeof performance?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}),Object.assign(/**
 * @author bhouston / http://clara.io
 * @author WestLangley / http://github.com/WestLangley
 *
 * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system
 *
 * The poles (phi) are at the positive and negative y axis.
 * The equator starts at positive z.
 */
function(t,e,i){// around the equator of the sphere
// up / down towards top and bottom pole
return this.radius=void 0!==t?t:1,this.phi=void 0!==e?e:0,this.theta=void 0!==i?i:0,this}.prototype,{set:function(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},
// restrict phi to be betwee EPS and PI-EPS
makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(t){// equator angle around y-up axis
return this.radius=t.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t.x,t.z),this.phi=Math.acos(ou.clamp(t.y/this.radius,-1,1))),this}}),Object.assign(/**
 * @author Mugen87 / https://github.com/Mugen87
 *
 * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system
 *
 */
function(t,e,i){// height above the x-z plane
// distance from the origin to a point in the x-z plane
// counterclockwise angle in the x-z plane measured in radians from the positive z-axis
return this.radius=void 0!==t?t:1,this.theta=void 0!==e?e:0,this.y=void 0!==i?i:0,this}.prototype,{set:function(t,e,i){return this.radius=t,this.theta=e,this.y=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.radius=Math.sqrt(t.x*t.x+t.z*t.z),this.theta=Math.atan2(t.x,t.z),this.y=t.y,this}}),(Mn.prototype=Object.create(ot.prototype)).constructor=Mn,Mn.prototype.isImmediateRenderObject=!0,(En.prototype=Object.create(le.prototype)).constructor=En,En.prototype.update=function(){var t=new r,e=new r,i=new a;return function(){var n=["a","b","c"];this.object.updateMatrixWorld(!0),i.getNormalMatrix(this.object.matrixWorld);var r=this.object.matrixWorld,a=this.geometry.attributes.position,o=this.object.geometry;if(o&&o.isGeometry)for(var s=o.vertices,c=o.faces,h=0,l=0,u=c.length;l<u;l++)for(var d=c[l],p=0,f=d.vertexNormals.length;p<f;p++){var m=s[d[n[p]]],g=d.vertexNormals[p];t.copy(m).applyMatrix4(r),e.copy(g).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),a.setXYZ(h,t.x,t.y,t.z),h+=1,a.setXYZ(h,e.x,e.y,e.z),h+=1}else if(o&&o.isBufferGeometry)
// for simplicity, ignore index and drawcalls, and render every normal
for(var v=o.attributes.position,y=o.attributes.normal,h=0,p=0,f=v.count;p<f;p++)t.set(v.getX(p),v.getY(p),v.getZ(p)).applyMatrix4(r),e.set(y.getX(p),y.getY(p),y.getZ(p)),e.applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),a.setXYZ(h,t.x,t.y,t.z),h+=1,a.setXYZ(h,e.x,e.y,e.z),h+=1;a.needsUpdate=!0}}(),(Tn.prototype=Object.create(ot.prototype)).constructor=Tn,Tn.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},Tn.prototype.update=function(){var t=new r,e=new r;return function(){this.light.updateMatrixWorld();var i=this.light.distance?this.light.distance:1e3,n=i*Math.tan(this.light.angle);this.cone.scale.set(n,n,i),t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(e.sub(t)),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}(),(An.prototype=Object.create(le.prototype)).constructor=An,An.prototype.updateMatrixWorld=function(){var t=new r,e=new i,n=new i;return function(i){var r=this.bones,a=this.geometry,o=a.getAttribute("position");n.getInverse(this.root.matrixWorld);for(var s=0,c=0;s<r.length;s++){var h=r[s];h.parent&&h.parent.isBone&&(e.multiplyMatrices(n,h.matrixWorld),t.setFromMatrixPosition(e),o.setXYZ(c,t.x,t.y,t.z),e.multiplyMatrices(n,h.parent.matrixWorld),t.setFromMatrixPosition(e),o.setXYZ(c+1,t.x,t.y,t.z),c+=2)}a.getAttribute("position").needsUpdate=!0,ot.prototype.updateMatrixWorld.call(this,i)}}(),(Ln.prototype=Object.create(Ut.prototype)).constructor=Ln,Ln.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},Ln.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)},(Rn.prototype=Object.create(ot.prototype)).constructor=Rn,Rn.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},Rn.prototype.update=function(){
// calculate new dimensions of the helper
var t=.5*this.light.width,e=.5*this.light.height,i=this.line.geometry.attributes.position,n=i.array;
// update vertices
n[0]=t,n[1]=-e,n[2]=0,n[3]=t,n[4]=e,n[5]=0,n[6]=-t,n[7]=e,n[8]=0,n[9]=-t,n[10]=-e,n[11]=0,n[12]=t,n[13]=-e,n[14]=0,i.needsUpdate=!0,void 0!==this.color?this.line.material.color.set(this.color):this.line.material.color.copy(this.light.color)},(Pn.prototype=Object.create(ot.prototype)).constructor=Pn,Pn.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},Pn.prototype.update=function(){var t=new r,e=new j,i=new j;return function(){var n=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var r=n.geometry.getAttribute("color");e.copy(this.light.color),i.copy(this.light.groundColor);for(var a=0,o=r.count;a<o;a++){var s=a<o/2?e:i;r.setXYZ(a,s.r,s.g,s.b)}r.needsUpdate=!0}n.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate())}}(),(Cn.prototype=Object.create(le.prototype)).constructor=Cn,(In.prototype=Object.create(le.prototype)).constructor=In,(Un.prototype=Object.create(le.prototype)).constructor=Un,Un.prototype.update=function(){var t=new r,e=new r,i=new a;return function(){this.object.updateMatrixWorld(!0),i.getNormalMatrix(this.object.matrixWorld);for(var n=this.object.matrixWorld,r=this.geometry.attributes.position,a=this.object.geometry,o=a.vertices,s=a.faces,c=0,h=0,l=s.length;h<l;h++){var u=s[h],d=u.normal;t.copy(o[u.a]).add(o[u.b]).add(o[u.c]).divideScalar(3).applyMatrix4(n),e.copy(d).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),r.setXYZ(c,t.x,t.y,t.z),c+=1,r.setXYZ(c,e.x,e.y,e.z),c+=1}r.needsUpdate=!0}}(),(Nn.prototype=Object.create(ot.prototype)).constructor=Nn,Nn.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},Nn.prototype.update=function(){var t=new r,e=new r,i=new r;return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),i.subVectors(e,t),this.lightPlane.lookAt(i),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(i),this.targetLine.scale.z=i.length()}}(),(On.prototype=Object.create(le.prototype)).constructor=On,On.prototype.update=function(){function t(t,r,o,s){n.set(r,o,s).unproject(a);var c=i[t];if(void 0!==c)for(var h=e.getAttribute("position"),l=0,u=c.length;l<u;l++)h.setXYZ(c[l],n.x,n.y,n.z)}var e,i,n=new r,a=new st;return function(){e=this.geometry,i=this.pointMap;
// we need just camera projection matrix
// world matrix must be identity
a.projectionMatrix.copy(this.camera.projectionMatrix),
// center / target
t("c",0,0,-1),t("t",0,0,1),
// near
t("n1",-1,-1,-1),t("n2",1,-1,-1),t("n3",-1,1,-1),t("n4",1,1,-1),
// far
t("f1",-1,-1,1),t("f2",1,-1,1),t("f3",-1,1,1),t("f4",1,1,1),
// up
t("u1",.7,1.1,-1),t("u2",-.7,1.1,-1),t("u3",0,2,-1),
// cross
t("cf1",-1,0,1),t("cf2",1,0,1),t("cf3",0,-1,1),t("cf4",0,1,1),t("cn1",-1,0,-1),t("cn2",1,0,-1),t("cn3",0,-1,-1),t("cn4",0,1,-1),e.getAttribute("position").needsUpdate=!0}}(),(Dn.prototype=Object.create(le.prototype)).constructor=Dn,Dn.prototype.update=function(){var t=new K;return function(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&t.setFromObject(this.object),!t.isEmpty()){var i=t.min,n=t.max,r=this.geometry.attributes.position,a=r.array;a[0]=n.x,a[1]=n.y,a[2]=n.z,a[3]=i.x,a[4]=n.y,a[5]=n.z,a[6]=i.x,a[7]=i.y,a[8]=n.z,a[9]=n.x,a[10]=i.y,a[11]=n.z,a[12]=n.x,a[13]=n.y,a[14]=i.z,a[15]=i.x,a[16]=n.y,a[17]=i.z,a[18]=i.x,a[19]=i.y,a[20]=i.z,a[21]=n.x,a[22]=i.y,a[23]=i.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),Dn.prototype.setFromObject=function(t){return this.object=t,this.update(),this},(Fn.prototype=Object.create(le.prototype)).constructor=Fn,Fn.prototype.updateMatrixWorld=function(t){var e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),ot.prototype.updateMatrixWorld.call(this,t))},(Bn.prototype=Object.create(he.prototype)).constructor=Bn,Bn.prototype.updateMatrixWorld=function(t){var e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),// sign does not matter
this.scale.set(.5*this.size,.5*this.size,e),this.lookAt(this.plane.normal),ot.prototype.updateMatrixWorld.call(this,t)};/**
 * @author WestLangley / http://github.com/WestLangley
 * @author zz85 / http://github.com/zz85
 * @author bhouston / http://clara.io
 *
 * Creates an arrow for visualizing directions
 *
 * Parameters:
 *  dir - Vector3
 *  origin - Vector3
 *  length - Number
 *  color - color in hex value
 *  headLength - Number
 *  headWidth - Number
 */
var Gu,Hu;(zn.prototype=Object.create(ot.prototype)).constructor=zn,zn.prototype.setDirection=function(){var t,e=new r;return function(i){
// dir is assumed to be normalized
i.y>.99999?this.quaternion.set(0,0,0,1):i.y<-.99999?this.quaternion.set(1,0,0,0):(e.set(i.z,0,-i.x).normalize(),t=Math.acos(i.y),this.quaternion.setFromAxisAngle(e,t))}}(),zn.prototype.setLength=function(t,e,i){void 0===e&&(e=.2*t),void 0===i&&(i=.2*e),this.line.scale.set(1,Math.max(0,t-e),1),this.line.updateMatrix(),this.cone.scale.set(i,e,i),this.cone.position.y=t,this.cone.updateMatrix()},zn.prototype.setColor=function(t){this.line.material.color.copy(t),this.cone.material.color.copy(t)},(Gn.prototype=Object.create(le.prototype)).constructor=Gn;
//
var Vu=new r,ku=new Hn,ju=new Hn,Wu=new Hn;(Vn.prototype=Object.create(Xi.prototype)).constructor=Vn,Vn.prototype.isCatmullRomCurve3=!0,Vn.prototype.getPoint=function(t,e){var i=e||new r,n=this.points,a=n.length,o=(a-(this.closed?0:1))*t,s=Math.floor(o),c=o-s;this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/n.length)+1)*n.length:0===c&&s===a-1&&(s=a-2,c=1);var h,l,u,d;if(// 4 points
this.closed||s>0?h=n[(s-1)%a]:(
// extrapolate first point
Vu.subVectors(n[0],n[1]).add(n[0]),h=Vu),l=n[s%a],u=n[(s+1)%a],this.closed||s+2<a?d=n[(s+2)%a]:(
// extrapolate last point
Vu.subVectors(n[a-1],n[a-2]).add(n[a-1]),d=Vu),"centripetal"===this.curveType||"chordal"===this.curveType){
// init Centripetal / Chordal Catmull-Rom
var p="chordal"===this.curveType?.5:.25,f=Math.pow(h.distanceToSquared(l),p),m=Math.pow(l.distanceToSquared(u),p),g=Math.pow(u.distanceToSquared(d),p);
// safety check for repeated points
m<1e-4&&(m=1),f<1e-4&&(f=m),g<1e-4&&(g=m),ku.initNonuniformCatmullRom(h.x,l.x,u.x,d.x,f,m,g),ju.initNonuniformCatmullRom(h.y,l.y,u.y,d.y,f,m,g),Wu.initNonuniformCatmullRom(h.z,l.z,u.z,d.z,f,m,g)}else"catmullrom"===this.curveType&&(ku.initCatmullRom(h.x,l.x,u.x,d.x,this.tension),ju.initCatmullRom(h.y,l.y,u.y,d.y,this.tension),Wu.initCatmullRom(h.z,l.z,u.z,d.z,this.tension));return i.set(ku.calc(c),ju.calc(c),Wu.calc(c)),i},Vn.prototype.copy=function(t){Xi.prototype.copy.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},(kn.prototype=Object.create(Xi.prototype)).constructor=kn,kn.prototype.isCubicBezierCurve3=!0,kn.prototype.getPoint=function(t,e){var i=e||new r,n=this.v0,a=this.v1,o=this.v2,s=this.v3;return i.set(Wi(t,n.x,a.x,o.x,s.x),Wi(t,n.y,a.y,o.y,s.y),Wi(t,n.z,a.z,o.z,s.z)),i},kn.prototype.copy=function(t){return Xi.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},(jn.prototype=Object.create(Xi.prototype)).constructor=jn,jn.prototype.isQuadraticBezierCurve3=!0,jn.prototype.getPoint=function(t,e){var i=e||new r,n=this.v0,a=this.v1,o=this.v2;return i.set(ji(t,n.x,a.x,o.x),ji(t,n.y,a.y,o.y),ji(t,n.z,a.z,o.z)),i},jn.prototype.copy=function(t){return Xi.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},(Wn.prototype=Object.create(Xi.prototype)).constructor=Wn,Wn.prototype.isLineCurve3=!0,Wn.prototype.getPoint=function(t,e){var i=e||new r;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i},
// Line curve is linear, so we can overwrite default getPointAt
Wn.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Wn.prototype.copy=function(t){return Xi.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},(Xn.prototype=Object.create(Zi.prototype)).constructor=Xn,Xn.prototype.isArcCurve=!0,
//
Xi.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Xi.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},
//
Object.assign(Yi.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
// generate geometry from path points (for Line or Points objects)
var e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
// generate geometry from equidistant sampling along the path
var e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var e=new lt,i=0,n=t.length;i<n;i++){var a=t[i];e.vertices.push(new r(a.x,a.y,a.z||0))}return e}}),
//
Object.assign($i.prototype,{fromPoints:function(t){console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}}),qn.prototype=Object.create(Vn.prototype),Object.assign(qn.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),Cn.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},An.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},
//
Object.assign(W.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(K.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),Ct.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Object.assign(ou,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),ou.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),ou.ceilPowerOfTwo(t)}}),Object.assign(a.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(i.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){var t;return function(){return void 0===t&&(t=new r),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),t.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(t){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,i,n,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,n,i,r,a)}}),tt.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},n.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},Object.assign(Pt.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(tn.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Fe(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new qe(this,t)}}),Object.assign(e.prototype,{fromAttribute:function(t,e,i){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(r.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,i){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(s.prototype,{fromAttribute:function(t,e,i){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),
//
lt.prototype.computeTangents=function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},Object.assign(ot.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)}}),Object.defineProperties(ot.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties(re.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(ae.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),Object.defineProperty(Xi.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),
//
Zt.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},
//
Object.defineProperties(mi.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),
//
Object.defineProperties(ut.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}}}),Object.assign(Mt.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addDrawCall:function(t,e,i){void 0!==i&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}}),Object.defineProperties(Mt.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),
//
Object.defineProperties(fn.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),
//
Object.defineProperties(Z.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new j}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}}}),Object.defineProperties(oi.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(Rt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),
//
Object.assign(Qt.prototype,{getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}}),Object.defineProperties(Qt.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),this.shadowMap.cullFace=t}}}),Object.defineProperties(it.prototype,{cullFace:{get:function(){return this.renderReverseSided?ch:sh},set:function(t){var e=t!==sh;console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+e+"."),this.renderReverseSided=e}}}),
//
Object.defineProperties(c.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),
//
sn.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var e=this;return(new rn).load(t,function(t){e.setBuffer(t)}),this},hn.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},
//
an.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},
// Polyfills
void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(
// Missing in IE
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger
Number.isInteger=function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t}),
//
void 0===Math.sign&&(
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign
Math.sign=function(t){return t<0?-1:t>0?1:+t}),void 0===Function.prototype.name&&
// Missing in IE
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name
Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(t){if(void 0===t||null===t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),i=1;i<arguments.length;i++){var n=arguments[i];if(void 0!==n&&null!==n)for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}),Object.assign(Yn.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var i=this._listeners[t];if(void 0!==i){var n=i.indexOf(e);-1!==n&&i.splice(n,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var i=e.slice(0),n=0,r=i.length;n<r;n++)i[n].call(this,t)}}}});var Xu="87",qu=0,Yu=1,Zu=2,Ju=0,Qu=1,Ku=2,$u=0,td=1,ed=2,id=0,nd=1,rd=2,ad=0,od=1,sd=2,cd=3,hd=4,ld=5,ud=100,dd=101,pd=102,fd=103,md=104,gd=200,vd=201,yd=202,xd=203,bd=204,_d=205,wd=206,Md=207,Ed=208,Td=209,Sd=210,Ad=0,Ld=1,Rd=2,Pd=3,Cd=4,Id=5,Ud=6,Nd=7,Od=0,Dd=1,Fd=2,Bd=0,zd=1,Gd=2,Hd=3,Vd=4,kd=301,jd=302,Wd=303,Xd=304,qd=305,Yd=306,Zd=307,Jd=1e3,Qd=1001,Kd=1002,$d=1003,tp=1004,ep=1005,ip=1006,np=1007,rp=1008,ap=1009,op=1010,sp=1011,cp=1012,hp=1013,lp=1014,up=1015,dp=1016,pp=1017,fp=1018,mp=1019,gp=1020,vp=1021,yp=1022,xp=1023,bp=1024,_p=1025,wp=xp,Mp=1026,Ep=1027,Tp=2001,Sp=2002,Ap=2003,Lp=2004,Rp=2100,Pp=2101,Cp=2102,Ip=2103,Up=2151,Np=2201,Op=2400,Dp=0,Fp=1,Bp=2,zp=3e3,Gp=3001,Hp=3007,Vp=3002,kp=3004,jp=3005,Wp=3006,Xp=3200,qp=3201,Yp={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){
// http://www.broofa.com/Tools/Math.uuid.htm
var t,e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=new Array(36),n=0;return function(){for(var r=0;r<36;r++)8===r||13===r||18===r||23===r?i[r]="-":14===r?i[r]="4":(n<=2&&(n=33554432+16777216*Math.random()|0),t=15&n,n>>=4,i[r]=e[19===r?3&t|8:t]);return i.join("")}}(),clamp:function(t,e,i){return Math.max(e,Math.min(i,t))},
// compute euclidian modulo of m % n
// https://en.wikipedia.org/wiki/Modulo_operation
euclideanModulo:function(t,e){return(t%e+e)%e},
// Linear mapping from range <a1, a2> to range <b1, b2>
mapLinear:function(t,e,i,n,r){return n+(t-e)*(r-n)/(i-e)},
// https://en.wikipedia.org/wiki/Linear_interpolation
lerp:function(t,e,i){return(1-i)*t+i*e},
// http://en.wikipedia.org/wiki/Smoothstep
smoothstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},
// Random integer from <low, high> interval
randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},
// Random float from <low, high> interval
randFloat:function(t,e){return t+Math.random()*(e-t)},
// Random float from <-range/2, range/2> interval
randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*Yp.DEG2RAD},radToDeg:function(t){return t*Yp.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},nearestPowerOfTwo:function(t){return Math.pow(2,Math.round(Math.log(t)/Math.LN2))},nextPowerOfTwo:function(t){return t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,++t}};Object.defineProperties(Zn.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}}),Object.assign(Zn.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){
// assumes min < max, componentwise
return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(){var t=new Zn,e=new Zn;return function(i,n){return t.set(i,i),e.set(n,n),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){
// computes the angle in radians with respect to the positive x-axis
var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y;return e*e+i*i},distanceToManhattan:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var i=Math.cos(e),n=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*i-a*n+t.x,this.y=r*n+a*i+t.y,this}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 * @author szimek / https://github.com/szimek/
 */
var Zp=0;Jn.DEFAULT_IMAGE=void 0,Jn.DEFAULT_MAPPING=300,Object.defineProperty(Jn.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Jn.prototype,Yn.prototype,{constructor:Jn,isTexture:!0,clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){if(void 0!==t.textures[this.uuid])return t.textures[this.uuid];var e={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){
// TODO: Move to THREE.Image
var i=this.image;void 0===i.uuid&&(i.uuid=Yp.generateUUID()),void 0===t.images[i.uuid]&&(t.images[i.uuid]={uuid:i.uuid,url:function(t){var e;if(t instanceof HTMLCanvasElement)e=t;else{(e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")).width=t.width,e.height=t.height;var i=e.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height)}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}(i)}),e.image=i.uuid}return t.textures[this.uuid]=e,e},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(300===this.mapping){if(t.multiply(this.repeat),t.add(this.offset),t.x<0||t.x>1)switch(this.wrapS){case Jd:t.x=t.x-Math.floor(t.x);break;case Qd:t.x=t.x<0?0:1;break;case Kd:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case Jd:t.y=t.y-Math.floor(t.y);break;case Qd:t.y=t.y<0?0:1;break;case Kd:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}this.flipY&&(t.y=1-t.y)}}}),Object.assign(Qn.prototype,{isVector4:!0,set:function(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*i+a[8]*n+a[12]*r,this.y=a[1]*e+a[5]*i+a[9]*n+a[13]*r,this.z=a[2]*e+a[6]*i+a[10]*n+a[14]*r,this.w=a[3]*e+a[7]*i+a[11]*n+a[15]*r,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){
// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm
// q is assumed to be normalized
this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){
// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
var e,i,n,r,// margin to distinguish between 0 and 180 degrees
a=t.elements,o=a[0],s=a[4],c=a[8],h=a[1],l=a[5],u=a[9],d=a[2],p=a[6],f=a[10];if(Math.abs(s-h)<.01&&Math.abs(c-d)<.01&&Math.abs(u-p)<.01){
// singularity found
// first check for identity matrix which must have +1 for all terms
// in leading diagonal and zero in other terms
if(Math.abs(s+h)<.1&&Math.abs(c+d)<.1&&Math.abs(u+p)<.1&&Math.abs(o+l+f-3)<.1)
// this singularity is identity matrix so angle = 0
return this.set(1,0,0,0),this;
// otherwise this singularity is angle = 180
e=Math.PI;var m=(o+1)/2,g=(l+1)/2,v=(f+1)/2,y=(s+h)/4,x=(c+d)/4,b=(u+p)/4;
// m11 is the largest diagonal term
// m22 is the largest diagonal term
// m33 is the largest diagonal term so base result on this
return m>g&&m>v?m<.01?(i=0,n=.707106781,r=.707106781):(n=y/(i=Math.sqrt(m)),r=x/i):g>v?g<.01?(i=.707106781,n=0,r=.707106781):(i=y/(n=Math.sqrt(g)),r=b/n):v<.01?(i=.707106781,n=.707106781,r=0):(i=x/(r=Math.sqrt(v)),n=b/r),this.set(i,n,r,e),this}
// as we have reached here there are no singularities so we can handle normally
var _=Math.sqrt((p-u)*(p-u)+(c-d)*(c-d)+(h-s)*(h-s));// used to normalize
// prevent divide by zero, should not happen if matrix is orthogonal and should be
// caught by singularity test above, but I've left it in just in case
return Math.abs(_)<.001&&(_=1),this.x=(p-u)/_,this.y=(c-d)/_,this.z=(h-s)/_,this.w=Math.acos((o+l+f-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){
// assumes min < max, componentwise
return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(){var t,e;return function(i,n){return void 0===t&&(t=new Qn,e=new Qn),t.set(i,i,i,i),e.set(n,n,n,n),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}}),Object.assign(Kn.prototype,Yn.prototype,{isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),($n.prototype=Object.create(Kn.prototype)).constructor=$n,$n.prototype.isWebGLRenderTargetCube=!0,Object.assign(tr,{slerp:function(t,e,i,n){return i.copy(t).slerp(e,n)},slerpFlat:function(t,e,i,n,r,a,o){
// fuzz-free, array-based Quaternion SLERP operation
var s=i[n+0],c=i[n+1],h=i[n+2],l=i[n+3],u=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(l!==f||s!==u||c!==d||h!==p){var m=1-o,g=s*u+c*d+h*p+l*f,v=g>=0?1:-1,y=1-g*g;
// Skip the Slerp for tiny steps to avoid numeric problems:
if(y>Number.EPSILON){var x=Math.sqrt(y),b=Math.atan2(x,g*v);m=Math.sin(m*b)/x,o=Math.sin(o*b)/x}var _=o*v;
// Normalize in case we just did a lerp:
if(s=s*m+u*_,c=c*m+d*_,h=h*m+p*_,l=l*m+f*_,m===1-o){var w=1/Math.sqrt(s*s+c*c+h*h+l*l);s*=w,c*=w,h*=w,l*=w}}t[e]=s,t[e+1]=c,t[e+2]=h,t[e+3]=l}}),Object.defineProperties(tr.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this.onChangeCallback()}}}),Object.assign(tr.prototype,{set:function(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var i=t._x,n=t._y,r=t._z,a=t.order,o=Math.cos,s=Math.sin,c=o(i/2),h=o(n/2),l=o(r/2),u=s(i/2),d=s(n/2),p=s(r/2);return"XYZ"===a?(this._x=u*h*l+c*d*p,this._y=c*d*l-u*h*p,this._z=c*h*p+u*d*l,this._w=c*h*l-u*d*p):"YXZ"===a?(this._x=u*h*l+c*d*p,this._y=c*d*l-u*h*p,this._z=c*h*p-u*d*l,this._w=c*h*l+u*d*p):"ZXY"===a?(this._x=u*h*l-c*d*p,this._y=c*d*l+u*h*p,this._z=c*h*p+u*d*l,this._w=c*h*l-u*d*p):"ZYX"===a?(this._x=u*h*l-c*d*p,this._y=c*d*l+u*h*p,this._z=c*h*p-u*d*l,this._w=c*h*l+u*d*p):"YZX"===a?(this._x=u*h*l+c*d*p,this._y=c*d*l+u*h*p,this._z=c*h*p-u*d*l,this._w=c*h*l-u*d*p):"XZY"===a&&(this._x=u*h*l-c*d*p,this._y=c*d*l-u*h*p,this._z=c*h*p+u*d*l,this._w=c*h*l+u*d*p),!1!==e&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){
// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm
// assumes axis is normalized
var i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this.onChangeCallback(),this},setFromRotationMatrix:function(t){
// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
var e,i=t.elements,n=i[0],r=i[4],a=i[8],o=i[1],s=i[5],c=i[9],h=i[2],l=i[6],u=i[10],d=n+s+u;return d>0?(e=.5/Math.sqrt(d+1),this._w=.25/e,this._x=(l-c)*e,this._y=(a-h)*e,this._z=(o-r)*e):n>s&&n>u?(e=2*Math.sqrt(1+n-s-u),this._w=(l-c)/e,this._x=.25*e,this._y=(r+o)/e,this._z=(a+h)/e):s>u?(e=2*Math.sqrt(1+s-n-u),this._w=(a-h)/e,this._x=(r+o)/e,this._y=.25*e,this._z=(c+l)/e):(e=2*Math.sqrt(1+u-n-s),this._w=(o-r)/e,this._x=(a+h)/e,this._y=(c+l)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(){
// assumes direction vectors vFrom and vTo are normalized
var t,e=new er;return function(i,n){return void 0===e&&(e=new er),(t=i.dot(n)+1)<1e-6?(t=0,Math.abs(i.x)>Math.abs(i.z)?e.set(-i.y,i.x,0):e.set(0,-i.z,i.y)):e.crossVectors(i,n),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){
// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm
var i=t._x,n=t._y,r=t._z,a=t._w,o=e._x,s=e._y,c=e._z,h=e._w;return this._x=i*h+a*o+n*c-r*s,this._y=n*h+a*s+r*o-i*c,this._z=r*h+a*c+i*s-n*o,this._w=a*h-i*o-n*s-r*c,this.onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var i=this._x,n=this._y,r=this._z,a=this._w,o=a*t._w+i*t._x+n*t._y+r*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=i,this._y=n,this._z=r,this;var s=Math.sqrt(1-o*o);if(Math.abs(s)<.001)return this._w=.5*(a+this._w),this._x=.5*(i+this._x),this._y=.5*(n+this._y),this._z=.5*(r+this._z),this;var c=Math.atan2(s,o),h=Math.sin((1-e)*c)/s,l=Math.sin(e*c)/s;return this._w=a*h+this._w*l,this._x=i*h+this._x*l,this._y=n*h+this._y*l,this._z=r*h+this._z*l,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(er.prototype,{isVector3:!0,set:function(t,e,i){return this.x=t,this.y=e,this.z=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t=new tr;return function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(t.setFromEuler(e))}}(),applyAxisAngle:function(){var t=new tr;return function(e,i){return this.applyQuaternion(t.setFromAxisAngle(e,i))}}(),applyMatrix3:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6]*n,this.y=r[1]*e+r[4]*i+r[7]*n,this.z=r[2]*e+r[5]*i+r[8]*n,this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements,a=1/(r[3]*e+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*e+r[4]*i+r[8]*n+r[12])*a,this.y=(r[1]*e+r[5]*i+r[9]*n+r[13])*a,this.z=(r[2]*e+r[6]*i+r[10]*n+r[14])*a,this},applyQuaternion:function(t){var e=this.x,i=this.y,n=this.z,r=t.x,a=t.y,o=t.z,s=t.w,c=s*e+a*n-o*i,h=s*i+o*e-r*n,l=s*n+r*i-a*e,u=-r*e-a*i-o*n;
// calculate result * inverse quat
return this.x=c*s+u*-r+h*-o-l*-a,this.y=h*s+u*-a+l*-r-c*-o,this.z=l*s+u*-o+c*-a-h*-r,this},project:function(){var t=new ir;return function(e){return t.multiplyMatrices(e.projectionMatrix,t.getInverse(e.matrixWorld)),this.applyMatrix4(t)}}(),unproject:function(){var t=new ir;return function(e){return t.multiplyMatrices(e.matrixWorld,t.getInverse(e.projectionMatrix)),this.applyMatrix4(t)}}(),transformDirection:function(t){
// input: THREE.Matrix4 affine matrix
// vector interpreted as a direction
var e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*n,this.y=r[1]*e+r[5]*i+r[9]*n,this.z=r[2]*e+r[6]*i+r[10]*n,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){
// assumes min < max, componentwise
return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(){var t=new er,e=new er;return function(i,n){return t.set(i,i,i),e.set(n,n,n),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},
// TODO lengthSquared?
lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},cross:function(t,e){if(void 0!==e)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e);var i=this.x,n=this.y,r=this.z;return this.x=n*t.z-r*t.y,this.y=r*t.x-i*t.z,this.z=i*t.y-n*t.x,this},crossVectors:function(t,e){var i=t.x,n=t.y,r=t.z,a=e.x,o=e.y,s=e.z;return this.x=n*s-r*o,this.y=r*a-i*s,this.z=i*o-n*a,this},projectOnVector:function(t){var e=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(e)},projectOnPlane:function(){var t=new er;return function(e){return t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){
// reflect incident vector off plane orthogonal to normal
// normal is assumed to have unit length
var t=new er;return function(e){return this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){var e=this.dot(t)/Math.sqrt(this.lengthSq()*t.lengthSq());
// clamp, to handle numerical problems
return Math.acos(Yp.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n},distanceToManhattan:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){var e=Math.sin(t.phi)*t.radius;return this.x=e*Math.sin(t.theta),this.y=Math.cos(t.phi)*t.radius,this.z=e*Math.cos(t.theta),this},setFromCylindrical:function(t){return this.x=t.radius*Math.sin(t.theta),this.y=t.y,this.z=t.radius*Math.cos(t.theta),this},setFromMatrixPosition:function(t){var e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,4*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}}),Object.assign(ir.prototype,{isMatrix4:!0,set:function(t,e,i,n,r,a,o,s,c,h,l,u,d,p,f,m){var g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=n,g[1]=r,g[5]=a,g[9]=o,g[13]=s,g[2]=c,g[6]=h,g[10]=l,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new ir).fromArray(this.elements)},copy:function(t){var e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this},copyPosition:function(t){var e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this},extractBasis:function(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this},extractRotation:function(){var t=new er;return function(e){var i=this.elements,n=e.elements,r=1/t.setFromMatrixColumn(e,0).length(),a=1/t.setFromMatrixColumn(e,1).length(),o=1/t.setFromMatrixColumn(e,2).length();return i[0]=n[0]*r,i[1]=n[1]*r,i[2]=n[2]*r,i[4]=n[4]*a,i[5]=n[5]*a,i[6]=n[6]*a,i[8]=n[8]*o,i[9]=n[9]*o,i[10]=n[10]*o,this}}(),makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,i=t.x,n=t.y,r=t.z,a=Math.cos(i),o=Math.sin(i),s=Math.cos(n),c=Math.sin(n),h=Math.cos(r),l=Math.sin(r);if("XYZ"===t.order){var u=a*h,d=a*l,p=o*h,f=o*l;e[0]=s*h,e[4]=-s*l,e[8]=c,e[1]=d+p*c,e[5]=u-f*c,e[9]=-o*s,e[2]=f-u*c,e[6]=p+d*c,e[10]=a*s}else if("YXZ"===t.order){var m=s*h,g=s*l,v=c*h,y=c*l;e[0]=m+y*o,e[4]=v*o-g,e[8]=a*c,e[1]=a*l,e[5]=a*h,e[9]=-o,e[2]=g*o-v,e[6]=y+m*o,e[10]=a*s}else if("ZXY"===t.order){var m=s*h,g=s*l,v=c*h,y=c*l;e[0]=m-y*o,e[4]=-a*l,e[8]=v+g*o,e[1]=g+v*o,e[5]=a*h,e[9]=y-m*o,e[2]=-a*c,e[6]=o,e[10]=a*s}else if("ZYX"===t.order){var u=a*h,d=a*l,p=o*h,f=o*l;e[0]=s*h,e[4]=p*c-d,e[8]=u*c+f,e[1]=s*l,e[5]=f*c+u,e[9]=d*c-p,e[2]=-c,e[6]=o*s,e[10]=a*s}else if("YZX"===t.order){var x=a*s,b=a*c,_=o*s,w=o*c;e[0]=s*h,e[4]=w-x*l,e[8]=_*l+b,e[1]=l,e[5]=a*h,e[9]=-o*h,e[2]=-c*h,e[6]=b*l+_,e[10]=x-w*l}else if("XZY"===t.order){var x=a*s,b=a*c,_=o*s,w=o*c;e[0]=s*h,e[4]=-l,e[8]=c*h,e[1]=x*l+w,e[5]=a*h,e[9]=b*l-_,e[2]=_*l-b,e[6]=o*h,e[10]=w*l+x}
// last column
// bottom row
return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){var e=this.elements,i=t._x,n=t._y,r=t._z,a=t._w,o=i+i,s=n+n,c=r+r,h=i*o,l=i*s,u=i*c,d=n*s,p=n*c,f=r*c,m=a*o,g=a*s,v=a*c;
// last column
// bottom row
return e[0]=1-(d+f),e[4]=l-v,e[8]=u+g,e[1]=l+v,e[5]=1-(h+f),e[9]=p-m,e[2]=u-g,e[6]=p+m,e[10]=1-(h+d),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var t=new er,e=new er,i=new er;return function(n,r,a){var o=this.elements;
// eye and target are in the same position
// up and z are parallel
return i.subVectors(n,r),0===i.lengthSq()&&(i.z=1),i.normalize(),t.crossVectors(a,i),0===t.lengthSq()&&(1===Math.abs(a.z)?i.x+=1e-4:i.z+=1e-4,i.normalize(),t.crossVectors(a,i)),t.normalize(),e.crossVectors(i,t),o[0]=t.x,o[4]=e.x,o[8]=i.x,o[1]=t.y,o[5]=e.y,o[9]=i.y,o[2]=t.z,o[6]=e.z,o[10]=i.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,n=e.elements,r=this.elements,a=i[0],o=i[4],s=i[8],c=i[12],h=i[1],l=i[5],u=i[9],d=i[13],p=i[2],f=i[6],m=i[10],g=i[14],v=i[3],y=i[7],x=i[11],b=i[15],_=n[0],w=n[4],M=n[8],E=n[12],T=n[1],S=n[5],A=n[9],L=n[13],R=n[2],P=n[6],C=n[10],I=n[14],U=n[3],N=n[7],O=n[11],D=n[15];return r[0]=a*_+o*T+s*R+c*U,r[4]=a*w+o*S+s*P+c*N,r[8]=a*M+o*A+s*C+c*O,r[12]=a*E+o*L+s*I+c*D,r[1]=h*_+l*T+u*R+d*U,r[5]=h*w+l*S+u*P+d*N,r[9]=h*M+l*A+u*C+d*O,r[13]=h*E+l*L+u*I+d*D,r[2]=p*_+f*T+m*R+g*U,r[6]=p*w+f*S+m*P+g*N,r[10]=p*M+f*A+m*C+g*O,r[14]=p*E+f*L+m*I+g*D,r[3]=v*_+y*T+x*R+b*U,r[7]=v*w+y*S+x*P+b*N,r[11]=v*M+y*A+x*C+b*O,r[15]=v*E+y*L+x*I+b*D,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(){var t=new er;return function(e){for(var i=0,n=e.count;i<n;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.applyMatrix4(this),e.setXYZ(i,t.x,t.y,t.z);return e}}(),determinant:function(){var t=this.elements,e=t[0],i=t[4],n=t[8],r=t[12],a=t[1],o=t[5],s=t[9],c=t[13],h=t[2],l=t[6],u=t[10],d=t[14];
//TODO: make this more efficient
//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )
return t[3]*(+r*s*l-n*c*l-r*o*u+i*c*u+n*o*d-i*s*d)+t[7]*(+e*s*d-e*c*u+r*a*u-n*a*d+n*c*h-r*s*h)+t[11]*(+e*c*l-e*o*d-r*a*l+i*a*d+r*o*h-i*c*h)+t[15]*(-n*o*h-e*s*l+e*o*u+n*a*l-i*a*u+i*s*h)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){
// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
var i=this.elements,n=t.elements,r=n[0],a=n[1],o=n[2],s=n[3],c=n[4],h=n[5],l=n[6],u=n[7],d=n[8],p=n[9],f=n[10],m=n[11],g=n[12],v=n[13],y=n[14],x=n[15],b=p*y*u-v*f*u+v*l*m-h*y*m-p*l*x+h*f*x,_=g*f*u-d*y*u-g*l*m+c*y*m+d*l*x-c*f*x,w=d*v*u-g*p*u+g*h*m-c*v*m-d*h*x+c*p*x,M=g*p*l-d*v*l-g*h*f+c*v*f+d*h*y-c*p*y,E=r*b+a*_+o*w+s*M;if(0===E){var T="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(T);return console.warn(T),this.identity()}var S=1/E;return i[0]=b*S,i[1]=(v*f*s-p*y*s-v*o*m+a*y*m+p*o*x-a*f*x)*S,i[2]=(h*y*s-v*l*s+v*o*u-a*y*u-h*o*x+a*l*x)*S,i[3]=(p*l*s-h*f*s-p*o*u+a*f*u+h*o*m-a*l*m)*S,i[4]=_*S,i[5]=(d*y*s-g*f*s+g*o*m-r*y*m-d*o*x+r*f*x)*S,i[6]=(g*l*s-c*y*s-g*o*u+r*y*u+c*o*x-r*l*x)*S,i[7]=(c*f*s-d*l*s+d*o*u-r*f*u-c*o*m+r*l*m)*S,i[8]=w*S,i[9]=(g*p*s-d*v*s-g*a*m+r*v*m+d*a*x-r*p*x)*S,i[10]=(c*v*s-g*h*s+g*a*u-r*v*u-c*a*x+r*h*x)*S,i[11]=(d*h*s-c*p*s-d*a*u+r*p*u+c*a*m-r*h*m)*S,i[12]=M*S,i[13]=(d*v*o-g*p*o+g*a*f-r*v*f-d*a*y+r*p*y)*S,i[14]=(g*h*o-c*v*o-g*a*l+r*v*l+c*a*y-r*h*y)*S,i[15]=(c*p*o-d*h*o+d*a*l-r*p*l-c*a*f+r*h*f)*S,this},scale:function(t){var e=this.elements,i=t.x,n=t.y,r=t.z;return e[0]*=i,e[4]*=n,e[8]*=r,e[1]*=i,e[5]*=n,e[9]*=r,e[2]*=i,e[6]*=n,e[10]*=r,e[3]*=i,e[7]*=n,e[11]*=r,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))},makeTranslation:function(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){
// Based on http://www.gamedev.net/reference/articles/article1199.asp
var i=Math.cos(e),n=Math.sin(e),r=1-i,a=t.x,o=t.y,s=t.z,c=r*a,h=r*o;return this.set(c*a+i,c*o-n*s,c*s+n*o,0,c*o+n*s,h*o+i,h*s-n*a,0,c*s-n*o,h*s+n*a,r*s*s+i,0,0,0,0,1),this},makeScale:function(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this},makeShear:function(t,e,i){return this.set(1,e,i,0,t,1,i,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,i){return this.makeRotationFromQuaternion(e),this.scale(i),this.setPosition(t),this},decompose:function(){var t=new er,e=new ir;return function(i,n,r){var a=this.elements,o=t.set(a[0],a[1],a[2]).length(),s=t.set(a[4],a[5],a[6]).length(),c=t.set(a[8],a[9],a[10]).length();this.determinant()<0&&(o=-o),i.x=a[12],i.y=a[13],i.z=a[14],
// scale the rotation part
e.copy(this);var h=1/o,l=1/s,u=1/c;return e.elements[0]*=h,e.elements[1]*=h,e.elements[2]*=h,e.elements[4]*=l,e.elements[5]*=l,e.elements[6]*=l,e.elements[8]*=u,e.elements[9]*=u,e.elements[10]*=u,n.setFromRotationMatrix(e),r.x=o,r.y=s,r.z=c,this}}(),makePerspective:function(t,e,i,n,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements,s=2*r/(e-t),c=2*r/(i-n),h=(e+t)/(e-t),l=(i+n)/(i-n),u=-(a+r)/(a-r),d=-2*a*r/(a-r);return o[0]=s,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=c,o[9]=l,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(t,e,i,n,r,a){var o=this.elements,s=1/(e-t),c=1/(i-n),h=1/(a-r),l=(e+t)*s,u=(i+n)*c,d=(a+r)*h;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-l,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*h,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(t){for(var e=this.elements,i=t.elements,n=0;n<16;n++)if(e[n]!==i[n])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;i<16;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}),(nr.prototype=Object.create(Jn.prototype)).constructor=nr,nr.prototype.isDataTexture=!0,(rr.prototype=Object.create(Jn.prototype)).constructor=rr,rr.prototype.isCubeTexture=!0,Object.defineProperty(rr.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}});/**
 * @author tschw
 *
 * Uniforms of a program.
 * Those form a tree structure with a special top-level container for the root,
 * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.
 *
 *
 * Properties of inner nodes including the top-level container:
 *
 * .seq - array of nested uniforms
 * .map - nested uniforms by name
 *
 *
 * Methods of all nodes except the top-level container:
 *
 * .setValue( gl, value, [renderer] )
 *
 * 		uploads a uniform value(s)
 *  	the 'renderer' parameter is needed for sampler uniforms
 *
 *
 * Static methods of the top-level container (renderer factorizations):
 *
 * .upload( gl, seq, values, renderer )
 *
 * 		sets uniforms in 'seq' to 'values[id].value'
 *
 * .seqWithValue( seq, values ) : filteredSeq
 *
 * 		filters 'seq' entries with corresponding entry in values
 *
 *
 * Methods of the top-level container (renderer factorizations):
 *
 * .setValue( gl, name, value )
 *
 * 		sets uniform with  name 'name' to 'value'
 *
 * .set( gl, obj, prop )
 *
 * 		sets uniform from object and property with same name than uniform
 *
 * .setOptional( gl, obj, prop )
 *
 * 		like .set for an optional property of the object
 *
 */
var Jp=new Jn,Qp=new rr,Kp=[],$p=[],tf=new Float32Array(16),ef=new Float32Array(9);Ur.prototype.setValue=function(t,e){for(var i=this.seq,n=0,r=i.length;n!==r;++n){var a=i[n];a.setValue(t,e[a.id])}};
// --- Top-level ---
// Parser - builds up the property tree from the path strings
var nf=/([\w\d_]+)(\])?(\[|\.)?/g;Dr.prototype.setValue=function(t,e,i){var n=this.map[e];void 0!==n&&n.setValue(t,i,this.renderer)},Dr.prototype.setOptional=function(t,e,i){var n=e[i];void 0!==n&&this.setValue(t,i,n)},
// Static interface
Dr.upload=function(t,e,i,n){for(var r=0,a=e.length;r!==a;++r){var o=e[r],s=i[o.id];!1!==s.needsUpdate&&
// note: always updating when .needsUpdate is undefined
o.setValue(t,s.value,n)}},Dr.seqWithValue=function(t,e){for(var i=[],n=0,r=t.length;n!==r;++n){var a=t[n];a.id in e&&i.push(a)}return i};/**
 * @author mrdoob / http://mrdoob.com/
 */
var rf={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Object.assign(Fr.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,i){return this.r=t,this.g=e,this.b=i,this},setHSL:function(){function t(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}return function(e,i,n){if(
// h,s,l ranges are in 0.0 - 1.0
e=Yp.euclideanModulo(e,1),i=Yp.clamp(i,0,1),n=Yp.clamp(n,0,1),0===i)this.r=this.g=this.b=n;else{var r=n<=.5?n*(1+i):n+i-n*i,a=2*n-r;this.r=t(a,r,e+1/3),this.g=t(a,r,e),this.b=t(a,r,e-1/3)}return this}}(),setStyle:function(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){
// rgb / hsl
var n,r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(n=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
// rgb(255,0,0) rgba(255,0,0,0.5)
return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,e(n[5]),this;if(n=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)
return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,e(n[5]),this;break;case"hsl":case"hsla":if(n=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){
// hsl(120,50%,50%) hsla(120,50%,50%,0.5)
var o=parseFloat(n[1])/360,s=parseInt(n[2],10)/100,c=parseInt(n[3],10)/100;return e(n[5]),this.setHSL(o,s,c)}}}else if(i=/^\#([A-Fa-f0-9]+)$/.exec(t)){
// hex color
var h=(l=i[1]).length;if(3===h)
// #ff0
return this.r=parseInt(l.charAt(0)+l.charAt(0),16)/255,this.g=parseInt(l.charAt(1)+l.charAt(1),16)/255,this.b=parseInt(l.charAt(2)+l.charAt(2),16)/255,this;if(6===h)
// #ff0000
return this.r=parseInt(l.charAt(0)+l.charAt(1),16)/255,this.g=parseInt(l.charAt(2)+l.charAt(3),16)/255,this.b=parseInt(l.charAt(4)+l.charAt(5),16)/255,this}if(t&&t.length>0){
// color keywords
var l=rf[t];void 0!==l?
// red
this.setHex(l):
// unknown color
console.warn("THREE.Color: Unknown color "+t)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);var i=e>0?1/e:1;return this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this},convertGammaToLinear:function(){var t=this.r,e=this.g,i=this.b;return this.r=t*t,this.g=e*e,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){
// h,s,l ranges are in 0.0 - 1.0
var e,i,n=t||{h:0,s:0,l:0},r=this.r,a=this.g,o=this.b,s=Math.max(r,a,o),c=Math.min(r,a,o),h=(c+s)/2;if(c===s)e=0,i=0;else{var l=s-c;switch(i=h<=.5?l/(s+c):l/(2-s-c),s){case r:e=(a-o)/l+(a<o?6:0);break;case a:e=(o-r)/l+2;break;case o:e=(r-a)/l+4}e/=6}return n.h=e,n.s=i,n.l=h,n},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,i){var n=this.getHSL();return n.h+=t,n.s+=e,n.l+=i,this.setHSL(n.h,n.s,n.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}});/**
 * Uniforms library for shared webgl shaders
 */
var af={common:{diffuse:{value:new Fr(15658734)},opacity:{value:1},map:{value:null},offsetRepeat:{value:new Qn(0,0,1,1)},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Zn(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Fr(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},
// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src
rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Fr(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},offsetRepeat:{value:new Qn(0,0,1,1)}}},of={merge:function(t){for(var e={},i=0;i<t.length;i++){var n=this.clone(t[i]);for(var r in n)e[r]=n[r]}return e},clone:function(t){var e={};for(var i in t){e[i]={};for(var n in t[i]){var r=t[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[i][n]=r.clone():Array.isArray(r)?e[i][n]=r.slice():e[i][n]=r}}return e}},sf={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"\nvec3 transformed = vec3( position );\n",beginnormal_vertex:"\nvec3 objectNormal = vec3( normal );\n",bsdfs:"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n\tfloat b = 3.45068 + (4.18814 + y) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n\treturn result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transpose( const in mat3 v ) {\n\tmat3 tmp;\n\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\n\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\n\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\n\treturn tmp;\n}\n",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",defaultnormal_vertex:"vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",encodings_fragment:"  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",envmap_fragment:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",envmap_pars_fragment:"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",envmap_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",fog_vertex:"\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",gradientmap_pars_fragment:"#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",lights_pars:"uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",lights_template:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",logdepthbuf_fragment:"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",map_particle_fragment:"#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",map_particle_pars_fragment:"#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",normal_fragment:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",project_vertex:"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n",dithering_fragment:"#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",dithering_pars_fragment:"#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",tonemapping_pars_fragment:"#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",uv_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n",uv_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",cube_vert:"varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}\n",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}\n",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",equirect_vert:"varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshphysical_frag:"#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphysical_vert:"#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n}\n",shadow_vert:"#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n"},cf={basic:{uniforms:of.merge([af.common,af.specularmap,af.envmap,af.aomap,af.lightmap,af.fog]),vertexShader:sf.meshbasic_vert,fragmentShader:sf.meshbasic_frag},lambert:{uniforms:of.merge([af.common,af.specularmap,af.envmap,af.aomap,af.lightmap,af.emissivemap,af.fog,af.lights,{emissive:{value:new Fr(0)}}]),vertexShader:sf.meshlambert_vert,fragmentShader:sf.meshlambert_frag},phong:{uniforms:of.merge([af.common,af.specularmap,af.envmap,af.aomap,af.lightmap,af.emissivemap,af.bumpmap,af.normalmap,af.displacementmap,af.gradientmap,af.fog,af.lights,{emissive:{value:new Fr(0)},specular:{value:new Fr(1118481)},shininess:{value:30}}]),vertexShader:sf.meshphong_vert,fragmentShader:sf.meshphong_frag},standard:{uniforms:of.merge([af.common,af.envmap,af.aomap,af.lightmap,af.emissivemap,af.bumpmap,af.normalmap,af.displacementmap,af.roughnessmap,af.metalnessmap,af.fog,af.lights,{emissive:{value:new Fr(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:sf.meshphysical_vert,fragmentShader:sf.meshphysical_frag},points:{uniforms:of.merge([af.points,af.fog]),vertexShader:sf.points_vert,fragmentShader:sf.points_frag},dashed:{uniforms:of.merge([af.common,af.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:sf.linedashed_vert,fragmentShader:sf.linedashed_frag},depth:{uniforms:of.merge([af.common,af.displacementmap]),vertexShader:sf.depth_vert,fragmentShader:sf.depth_frag},normal:{uniforms:of.merge([af.common,af.bumpmap,af.normalmap,af.displacementmap,{opacity:{value:1}}]),vertexShader:sf.normal_vert,fragmentShader:sf.normal_frag},/* -------------------------------------------------------------------------
	//	Cube map shader
	 ------------------------------------------------------------------------- */
cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:sf.cube_vert,fragmentShader:sf.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:sf.equirect_vert,fragmentShader:sf.equirect_frag},distanceRGBA:{uniforms:of.merge([af.common,af.displacementmap,{referencePosition:{value:new er},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:sf.distanceRGBA_vert,fragmentShader:sf.distanceRGBA_frag},shadow:{uniforms:of.merge([af.lights,{color:{value:new Fr(0)},opacity:{value:1}}]),vertexShader:sf.shadow_vert,fragmentShader:sf.shadow_frag}};cf.physical={uniforms:of.merge([cf.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:sf.meshphysical_vert,fragmentShader:sf.meshphysical_frag},Object.assign(Br.prototype,{set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new Zn;return function(e,i){var n=t.copy(i).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){
// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes
return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){var e=t||new Zn;return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){var e=t||new Zn;return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return(e||new Zn).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){
// using 4 splitting planes to rule out intersections
return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return(e||new Zn).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new Zn;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}),(Gr.prototype=Object.create(Jn.prototype)).constructor=Gr;/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 */
var hf=0;Object.assign(Vr.prototype,Yn.prototype,{isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(void 0!==t)for(var e in t){var i=t[e];if(void 0!==i)
// for backward compatability if shading is set in the constructor
if("shading"!==e){var n=this[e];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):
// ensure overdraw is backwards-compatible with legacy boolean type
this[e]="overdraw"===e?Number(i):i:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===i;else console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},toJSON:function(t){
// TODO: Copied from Object3D.toJSON
function e(t){var e=[];for(var i in t){var n=t[i];delete n.metadata,e.push(n)}return e}var i=void 0===t;i&&(t={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};if(
// standard Material serialization
n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearCoat&&(n.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(n.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==od&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),this.side!==$u&&(n.side=this.side),this.vertexColors!==id&&(n.vertexColors=this.vertexColors),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),i){var r=e(t.textures),a=e(t.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.lights=t.lights,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.overdraw=t.overdraw,this.visible=t.visible,this.userData=JSON.parse(JSON.stringify(t.userData)),this.clipShadows=t.clipShadows,this.clipIntersection=t.clipIntersection;var e=t.clippingPlanes,i=null;if(null!==e){var n=e.length;i=new Array(n);for(var r=0;r!==n;++r)i[r]=e[r].clone()}return this.clippingPlanes=i,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),(kr.prototype=Object.create(Vr.prototype)).constructor=kr,kr.prototype.isShaderMaterial=!0,kr.prototype.copy=function(t){return Vr.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=of.clone(t.uniforms),this.defines=t.defines,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this},kr.prototype.toJSON=function(t){var e=Vr.prototype.toJSON.call(this,t);return e.uniforms=this.uniforms,e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e},(jr.prototype=Object.create(Vr.prototype)).constructor=jr,jr.prototype.isMeshDepthMaterial=!0,jr.prototype.copy=function(t){return Vr.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},(Wr.prototype=Object.create(Vr.prototype)).constructor=Wr,Wr.prototype.isMeshDistanceMaterial=!0,Wr.prototype.copy=function(t){return Vr.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this},Object.assign(Xr.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,i=1/0,n=1/0,r=-1/0,a=-1/0,o=-1/0,s=0,c=t.length;s<c;s+=3){var h=t[s],l=t[s+1],u=t[s+2];h<e&&(e=h),l<i&&(i=l),u<n&&(n=u),h>r&&(r=h),l>a&&(a=l),u>o&&(o=u)}return this.min.set(e,i,n),this.max.set(r,a,o),this},setFromBufferAttribute:function(t){for(var e=1/0,i=1/0,n=1/0,r=-1/0,a=-1/0,o=-1/0,s=0,c=t.count;s<c;s++){var h=t.getX(s),l=t.getY(s),u=t.getZ(s);h<e&&(e=h),l<i&&(i=l),u<n&&(n=u),h>r&&(r=h),l>a&&(a=l),u>o&&(o=u)}return this.min.set(e,i,n),this.max.set(r,a,o),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new er;return function(e,i){var n=t.copy(i).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}}(),setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){
// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes
return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){var e=t||new er;return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){var e=t||new er;return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(){
// Computes the world-axis-aligned bounding box of an object (including its children),
// accounting for both the object's, and children's, world transforms
var t=new er;return function(e){var i=this;return e.updateMatrixWorld(!0),e.traverse(function(e){var n,r,a=e.geometry;if(void 0!==a)if(a.isGeometry){var o=a.vertices;for(n=0,r=o.length;n<r;n++)t.copy(o[n]),t.applyMatrix4(e.matrixWorld),i.expandByPoint(t)}else if(a.isBufferGeometry){var s=a.attributes.position;if(void 0!==s)for(n=0,r=s.count;n<r;n++)t.fromBufferAttribute(s,n).applyMatrix4(e.matrixWorld),i.expandByPoint(t)}}),this}}(),containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return(e||new er).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){
// using 6 splitting planes to rule out intersections.
return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(){var t=new er;return function(e){
// If that point is inside the sphere, the AABB and sphere intersect.
// Find the point on the AABB closest to the sphere center.
return this.clampPoint(e.center,t),t.distanceToSquared(e.center)<=e.radius*e.radius}}(),intersectsPlane:function(t){
// We compute the minimum and maximum dot product values. If those values
// are on the same side (back or front) of the plane, then there is no intersection.
var e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=t.constant&&i>=t.constant},clampPoint:function(t,e){return(e||new er).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new er;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),getBoundingSphere:function(){var t=new er;return function(e){var i=e||new qr;return this.getCenter(i.center),i.radius=.5*this.getSize(t).length(),i}}(),intersect:function(t){
// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.
return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new er,new er,new er,new er,new er,new er,new er,new er];return function(e){
// transform of empty box is an empty box.
// transform of empty box is an empty box.
// NOTE: I am using a binary pattern to specify all 2^3 combinations below
// 000
// 001
// 010
// 011
// 100
// 101
// 110
// 111
return this.isEmpty()?this:(t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(t),this)}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}),Object.assign(qr.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new Xr;return function(e,i){var n=this.center;void 0!==i?n.copy(i):t.setFromPoints(e).getCenter(n);for(var r=0,a=0,o=e.length;a<o;a++)r=Math.max(r,n.distanceToSquared(e[a]));return this.radius=Math.sqrt(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var i=this.center.distanceToSquared(t),n=e||new er;return n.copy(t),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n},getBoundingBox:function(t){var e=t||new Xr;return e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}}),Object.assign(Yr.prototype,{isMatrix3:!0,set:function(t,e,i,n,r,a,o,s,c){var h=this.elements;return h[0]=t,h[1]=n,h[2]=o,h[3]=e,h[4]=r,h[5]=s,h[6]=i,h[7]=a,h[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(){var t=new er;return function(e){for(var i=0,n=e.count;i<n;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.applyMatrix3(this),e.setXYZ(i,t.x,t.y,t.z);return e}}(),multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,n=e.elements,r=this.elements,a=i[0],o=i[3],s=i[6],c=i[1],h=i[4],l=i[7],u=i[2],d=i[5],p=i[8],f=n[0],m=n[3],g=n[6],v=n[1],y=n[4],x=n[7],b=n[2],_=n[5],w=n[8];return r[0]=a*f+o*v+s*b,r[3]=a*m+o*y+s*_,r[6]=a*g+o*x+s*w,r[1]=c*f+h*v+l*b,r[4]=c*m+h*y+l*_,r[7]=c*g+h*x+l*w,r[2]=u*f+d*v+p*b,r[5]=u*m+d*y+p*_,r[8]=u*g+d*x+p*w,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],a=t[4],o=t[5],s=t[6],c=t[7],h=t[8];return e*a*h-e*o*c-i*r*h+i*o*s+n*r*c-n*a*s},getInverse:function(t,e){t&&t.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var i=t.elements,n=this.elements,r=i[0],a=i[1],o=i[2],s=i[3],c=i[4],h=i[5],l=i[6],u=i[7],d=i[8],p=d*c-h*u,f=h*l-d*s,m=u*s-c*l,g=r*p+a*f+o*m;if(0===g){var v="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(v);return console.warn(v),this.identity()}var y=1/g;return n[0]=p*y,n[1]=(o*u-d*a)*y,n[2]=(h*a-o*c)*y,n[3]=f*y,n[4]=(d*r-o*l)*y,n[5]=(o*s-h*r)*y,n[6]=m*y,n[7]=(a*l-u*r)*y,n[8]=(c*r-a*s)*y,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},equals:function(t){for(var e=this.elements,i=t.elements,n=0;n<9;n++)if(e[n]!==i[n])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;i<9;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}}),Object.assign(Zr.prototype,{set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new er,e=new er;return function(i,n,r){var a=t.subVectors(r,n).cross(e.subVectors(i,n)).normalize();
// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?
return this.setFromNormalAndCoplanarPoint(a,i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){
// Note: will lead to a divide by zero if the plane is invalid.
var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return(e||new er).copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(){var t=new er;return function(e,i){var n=i||new er,r=e.delta(t),a=this.normal.dot(r);if(0!==a){var o=-(e.start.dot(this.normal)+this.constant)/a;if(!(o<0||o>1))return n.copy(r).multiplyScalar(o).add(e.start)}else
// line is coplanar, return origin
if(0===this.distanceToPoint(e.start))return n.copy(e.start)}}(),intersectsLine:function(t){
// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.
var e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return(t||new er).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new er,e=new Yr;return function(i,n){var r=n||e.getNormalMatrix(i),a=this.coplanarPoint(t).applyMatrix4(i),o=this.normal.applyMatrix3(r).normalize();return this.constant=-a.dot(o),this}}(),translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}),Object.assign(Jr.prototype,{set:function(t,e,i,n,r,a){var o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(i),o[3].copy(n),o[4].copy(r),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,i=0;i<6;i++)e[i].copy(t.planes[i]);return this},setFromMatrix:function(t){var e=this.planes,i=t.elements,n=i[0],r=i[1],a=i[2],o=i[3],s=i[4],c=i[5],h=i[6],l=i[7],u=i[8],d=i[9],p=i[10],f=i[11],m=i[12],g=i[13],v=i[14],y=i[15];return e[0].setComponents(o-n,l-s,f-u,y-m).normalize(),e[1].setComponents(o+n,l+s,f+u,y+m).normalize(),e[2].setComponents(o+r,l+c,f+d,y+g).normalize(),e[3].setComponents(o-r,l-c,f-d,y-g).normalize(),e[4].setComponents(o-a,l-h,f-p,y-v).normalize(),e[5].setComponents(o+a,l+h,f+p,y+v).normalize(),this},intersectsObject:function(){var t=new qr;return function(e){var i=e.geometry;return null===i.boundingSphere&&i.computeBoundingSphere(),t.copy(i.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSprite:function(){var t=new qr;return function(e){return t.center.set(0,0,0),t.radius=.7071067811865476,t.applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){for(var e=this.planes,i=t.center,n=-t.radius,r=0;r<6;r++){if(e[r].distanceToPoint(i)<n)return!1}return!0},intersectsBox:function(){var t=new er,e=new er;return function(i){for(var n=this.planes,r=0;r<6;r++){var a=n[r];t.x=a.normal.x>0?i.min.x:i.max.x,e.x=a.normal.x>0?i.max.x:i.min.x,t.y=a.normal.y>0?i.min.y:i.max.y,e.y=a.normal.y>0?i.max.y:i.min.y,t.z=a.normal.z>0?i.min.z:i.max.z,e.z=a.normal.z>0?i.max.z:i.min.z;var o=a.distanceToPoint(t),s=a.distanceToPoint(e);
// if both outside plane, no intersection
if(o<0&&s<0)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}}),$r.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],$r.DefaultOrder="XYZ",Object.defineProperties($r.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this.onChangeCallback()}}}),Object.assign($r.prototype,{isEuler:!0,set:function(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._order=n||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e,i){var n=Yp.clamp,r=t.elements,a=r[0],o=r[4],s=r[8],c=r[1],h=r[5],l=r[9],u=r[2],d=r[6],p=r[10];return"XYZ"===(e=e||this._order)?(this._y=Math.asin(n(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,p),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(d,h),this._z=0)):"YXZ"===e?(this._x=Math.asin(-n(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(s,p),this._z=Math.atan2(c,h)):(this._y=Math.atan2(-u,a),this._z=0)):"ZXY"===e?(this._x=Math.asin(n(d,-1,1)),Math.abs(d)<.99999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(c,a))):"ZYX"===e?(this._y=Math.asin(-n(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-o,h))):"YZX"===e?(this._z=Math.asin(n(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(s,p))):"XZY"===e?(this._z=Math.asin(-n(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(d,h),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-l,p),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,!1!==i&&this.onChangeCallback(),this},setFromQuaternion:function(){var t=new ir;return function(e,i,n){return t.makeRotationFromQuaternion(e),this.setFromRotationMatrix(t,i,n)}}(),setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(){
// WARNING: this discards revolution information -bhouston
var t=new tr;return function(e){return t.setFromEuler(this),this.setFromQuaternion(t,e)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new er(this._x,this._y,this._z)},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(ta.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},test:function(t){return 0!=(this.mask&t.mask)}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author mikael emtinger / http://gomo.se/
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author elephantatwork / www.elephantatwork.ch
 */
var lf=0;ea.DefaultUp=new er(0,1,0),ea.DefaultMatrixAutoUpdate=!0,Object.assign(ea.prototype,Yn.prototype,{isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){
// assumes axis is normalized
this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){
// assumes q is normalized
this.quaternion.copy(t)},rotateOnAxis:function(){
// rotate object on axis in object space
// axis is assumed to be normalized
var t=new tr;return function(e,i){return t.setFromAxisAngle(e,i),this.quaternion.multiply(t),this}}(),rotateX:function(){var t=new er(1,0,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateY:function(){var t=new er(0,1,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateZ:function(){var t=new er(0,0,1);return function(e){return this.rotateOnAxis(t,e)}}(),translateOnAxis:function(){
// translate object by distance along axis in object space
// axis is assumed to be normalized
var t=new er;return function(e,i){return t.copy(e).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(i)),this}}(),translateX:function(){var t=new er(1,0,0);return function(e){return this.translateOnAxis(t,e)}}(),translateY:function(){var t=new er(0,1,0);return function(e){return this.translateOnAxis(t,e)}}(),translateZ:function(){var t=new er(0,0,1);return function(e){return this.translateOnAxis(t,e)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new ir;return function(e){return e.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){
// This method does not support objects with rotated and/or translated parent(s)
var t=new ir;return function(e){this.isCamera?t.lookAt(this.position,e,this.up):t.lookAt(e,this.position,this.up),this.quaternion.setFromRotationMatrix(t)}}(),add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var i=this.children.indexOf(t);return-1!==i&&(t.parent=null,t.dispatchEvent({type:"removed"}),this.children.splice(i,1)),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var i=0,n=this.children.length;i<n;i++){var r=this.children[i].getObjectByProperty(t,e);if(void 0!==r)return r}},getWorldPosition:function(t){var e=t||new er;return this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var t=new er,e=new er;return function(i){var n=i||new tr;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,n,e),n}}(),getWorldRotation:function(){var t=new tr;return function(e){var i=e||new $r;return this.getWorldQuaternion(t),i.setFromQuaternion(t,this.rotation.order,!1)}}(),getWorldScale:function(){var t=new er,e=new tr;return function(i){var n=i||new er;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,e,n),n}}(),getWorldDirection:function(){var t=new tr;return function(e){var i=e||new er;return this.getWorldQuaternion(t),i.set(0,0,1).applyQuaternion(t)}}(),raycast:function(){},traverse:function(t){t(this);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)},toJSON:function(t){
//
function e(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}
// extract data from the cache hash
// remove metadata on each item
// and return as array
function i(t){var e=[];for(var i in t){var n=t[i];delete n.metadata,e.push(n)}return e}
// meta is '' when called from JSON.stringify
var n=void 0===t||""===t,r={};
// meta is a hash used to collect geometries, materials.
// not providing it implies that this is the root object
// being serialized.
n&&(
// initialize meta obj
t={geometries:{},materials:{},textures:{},images:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});
// standard Object3D serialization
var a={};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),a.matrix=this.matrix.toArray(),void 0!==this.geometry&&(a.geometry=e(t.geometries,this.geometry)),void 0!==this.material)if(Array.isArray(this.material)){for(var o=[],s=0,c=this.material.length;s<c;s++)o.push(e(t.materials,this.material[s]));a.material=o}else a.material=e(t.materials,this.material);
//
if(this.children.length>0){a.children=[];for(s=0;s<this.children.length;s++)a.children.push(this.children[s].toJSON(t).object)}if(n){var h=i(t.geometries),l=i(t.materials),u=i(t.textures),d=i(t.images);h.length>0&&(r.geometries=h),l.length>0&&(r.materials=l),u.length>0&&(r.textures=u),d.length>0&&(r.images=d)}return r.object=a,r},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(var i=0;i<t.children.length;i++){var n=t.children[i];this.add(n.clone())}return this}}),ia.prototype=Object.assign(Object.create(ea.prototype),{constructor:ia,isCamera:!0,copy:function(t,e){return ea.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this},getWorldDirection:function(){var t=new tr;return function(e){var i=e||new er;return this.getWorldQuaternion(t),i.set(0,0,-1).applyQuaternion(t)}}(),updateMatrixWorld:function(t){ea.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),na.prototype=Object.assign(Object.create(ia.prototype),{constructor:na,isOrthographicCamera:!0,copy:function(t,e){return ia.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,i,n,r,a){this.view={fullWidth:t,fullHeight:e,offsetX:i,offsetY:n,width:r,height:a},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2,r=i-t,a=i+t,o=n+e,s=n-e;if(null!==this.view){var c=this.zoom/(this.view.width/this.view.fullWidth),h=this.zoom/(this.view.height/this.view.fullHeight),l=(this.right-this.left)/this.view.width,u=(this.top-this.bottom)/this.view.height;a=(r+=l*(this.view.offsetX/c))+l*(this.view.width/c),s=(o-=u*(this.view.offsetY/h))-u*(this.view.height/h)}this.projectionMatrix.makeOrthographic(r,a,o,s,this.near,this.far)},toJSON:function(t){var e=ea.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),ra.prototype=Object.assign(Object.create(ia.prototype),{constructor:ra,isPerspectiveCamera:!0,copy:function(t,e){return ia.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},/**
	 * Sets the FOV by focal length in respect to the current .filmGauge.
	 *
	 * The default film gauge is 35, so that the focal length can be specified for
	 * a 35mm (full frame) camera.
	 *
	 * Values for focal length and film gauge must have the same unit.
	 */
setFocalLength:function(t){
// see http://www.bobatkins.com/photography/technical/field_of_view.html
var e=.5*this.getFilmHeight()/t;this.fov=2*Yp.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},/**
	 * Calculates the focal length from the current .fov and .filmGauge.
	 */
getFocalLength:function(){var t=Math.tan(.5*Yp.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*Yp.RAD2DEG*Math.atan(Math.tan(.5*Yp.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){
// film not completely covered in portrait format (aspect < 1)
return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){
// film not completely covered in landscape format (aspect > 1)
return this.filmGauge/Math.max(this.aspect,1)},/**
	 * Sets an offset in a larger frustum. This is useful for multi-window or
	 * multi-monitor/multi-machine setups.
	 *
	 * For example, if you have 3x2 monitors and each monitor is 1920x1080 and
	 * the monitors are in grid like this
	 *
	 *   +---+---+---+
	 *   | A | B | C |
	 *   +---+---+---+
	 *   | D | E | F |
	 *   +---+---+---+
	 *
	 * then for each monitor you would call it like this
	 *
	 *   var w = 1920;
	 *   var h = 1080;
	 *   var fullWidth = w * 3;
	 *   var fullHeight = h * 2;
	 *
	 *   --A--
	 *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );
	 *   --B--
	 *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );
	 *   --C--
	 *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );
	 *   --D--
	 *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );
	 *   --E--
	 *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );
	 *   --F--
	 *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );
	 *
	 *   Note there is no reason monitors have to be the same size or in a grid.
	 */
setViewOffset:function(t,e,i,n,r,a){this.aspect=t/e,this.view={fullWidth:t,fullHeight:e,offsetX:i,offsetY:n,width:r,height:a},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Math.tan(.5*Yp.DEG2RAD*this.fov)/this.zoom,i=2*e,n=this.aspect*i,r=-.5*n,a=this.view;if(null!==a){var o=a.fullWidth,s=a.fullHeight;r+=a.offsetX*n/o,e-=a.offsetY*i/s,n*=a.width/o,i*=a.height/s}var c=this.filmOffset;0!==c&&(r+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,e,e-i,t,this.far)},toJSON:function(t){var e=ea.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}),Object.assign(aa.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,i=t.vertexNormals.length;e<i;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(var e=0,i=t.vertexColors.length;e<i;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});/**
 * @author mrdoob / http://mrdoob.com/
 * @author kile / http://kile.stravaganza.org/
 * @author alteredq / http://alteredqualia.com/
 * @author mikael emtinger / http://gomo.se/
 * @author zz85 / http://www.lab4games.net/zz85/blog
 * @author bhouston / http://clara.io
 */
var uf=0;Object.assign(sa.prototype,Yn.prototype,{isGeometry:!0,applyMatrix:function(t){for(var e=(new Yr).getNormalMatrix(t),i=0,n=this.vertices.length;i<n;i++){this.vertices[i].applyMatrix4(t)}for(var i=0,n=this.faces.length;i<n;i++){var r=this.faces[i];r.normal.applyMatrix3(e).normalize();for(var a=0,o=r.vertexNormals.length;a<o;a++)r.vertexNormals[a].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){
// rotate geometry around world x-axis
var t=new ir;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){
// rotate geometry around world y-axis
var t=new ir;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){
// rotate geometry around world z-axis
var t=new ir;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){
// translate geometry
var t=new ir;return function(e,i,n){return t.makeTranslation(e,i,n),this.applyMatrix(t),this}}(),scale:function(){
// scale geometry
var t=new ir;return function(e,i,n){return t.makeScale(e,i,n),this.applyMatrix(t),this}}(),lookAt:function(){var t=new ea;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),fromBufferGeometry:function(t){function e(t,e,n,r){var a=new aa(t,e,n,void 0!==o?[l[t].clone(),l[e].clone(),l[n].clone()]:[],void 0!==s?[i.colors[t].clone(),i.colors[e].clone(),i.colors[n].clone()]:[],r);i.faces.push(a),void 0!==c&&i.faceVertexUvs[0].push([u[t].clone(),u[e].clone(),u[n].clone()]),void 0!==h&&i.faceVertexUvs[1].push([d[t].clone(),d[e].clone(),d[n].clone()])}var i=this,n=null!==t.index?t.index.array:void 0,r=t.attributes,a=r.position.array,o=void 0!==r.normal?r.normal.array:void 0,s=void 0!==r.color?r.color.array:void 0,c=void 0!==r.uv?r.uv.array:void 0,h=void 0!==r.uv2?r.uv2.array:void 0;void 0!==h&&(this.faceVertexUvs[1]=[]);for(var l=[],u=[],d=[],p=0,f=0;p<a.length;p+=3,f+=2)i.vertices.push(new er(a[p],a[p+1],a[p+2])),void 0!==o&&l.push(new er(o[p],o[p+1],o[p+2])),void 0!==s&&i.colors.push(new Fr(s[p],s[p+1],s[p+2])),void 0!==c&&u.push(new Zn(c[f],c[f+1])),void 0!==h&&d.push(new Zn(h[f],h[f+1]));var m=t.groups;if(m.length>0)for(p=0;p<m.length;p++)for(var g=m[p],v=g.start,f=v,y=v+g.count;f<y;f+=3)void 0!==n?e(n[f],n[f+1],n[f+2],g.materialIndex):e(f,f+1,f+2,g.materialIndex);else if(void 0!==n)for(p=0;p<n.length;p+=3)e(n[p],n[p+1],n[p+2]);else for(p=0;p<a.length/3;p+=3)e(p,p+1,p+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,i=0===e?1:1/e,n=new ir;return n.set(i,0,0,-i*t.x,0,i,0,-i*t.y,0,0,i,-i*t.z,0,0,0,1),this.applyMatrix(n),this},computeFaceNormals:function(){for(var t=new er,e=new er,i=0,n=this.faces.length;i<n;i++){var r=this.faces[i],a=this.vertices[r.a],o=this.vertices[r.b],s=this.vertices[r.c];t.subVectors(s,o),e.subVectors(a,o),t.cross(e),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t){void 0===t&&(t=!0);var e,i,n,r,a,o;for(o=new Array(this.vertices.length),e=0,i=this.vertices.length;e<i;e++)o[e]=new er;if(t){
// vertex normals weighted by triangle areas
// http://www.iquilezles.org/www/articles/normals/normals.htm
var s,c,h,l=new er,u=new er;for(n=0,r=this.faces.length;n<r;n++)a=this.faces[n],s=this.vertices[a.a],c=this.vertices[a.b],h=this.vertices[a.c],l.subVectors(h,c),u.subVectors(s,c),l.cross(u),o[a.a].add(l),o[a.b].add(l),o[a.c].add(l)}else for(this.computeFaceNormals(),n=0,r=this.faces.length;n<r;n++)o[(a=this.faces[n]).a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal);for(e=0,i=this.vertices.length;e<i;e++)o[e].normalize();for(n=0,r=this.faces.length;n<r;n++){var d=(a=this.faces[n]).vertexNormals;3===d.length?(d[0].copy(o[a.a]),d[1].copy(o[a.b]),d[2].copy(o[a.c])):(d[0]=o[a.a].clone(),d[1]=o[a.b].clone(),d[2]=o[a.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,i;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){var n=(i=this.faces[t]).vertexNormals;3===n.length?(n[0].copy(i.normal),n[1].copy(i.normal),n[2].copy(i.normal)):(n[0]=i.normal.clone(),n[1]=i.normal.clone(),n[2]=i.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,i,n,r;
// save original normals
// - create temp variables on first access
//   otherwise just copy (for faster repeated calls)
for(i=0,n=this.faces.length;i<n;i++)for((r=this.faces[i]).__originalFaceNormal?r.__originalFaceNormal.copy(r.normal):r.__originalFaceNormal=r.normal.clone(),r.__originalVertexNormals||(r.__originalVertexNormals=[]),t=0,e=r.vertexNormals.length;t<e;t++)r.__originalVertexNormals[t]?r.__originalVertexNormals[t].copy(r.vertexNormals[t]):r.__originalVertexNormals[t]=r.vertexNormals[t].clone();
// use temp geometry to compute face and vertex normals for each morph
var a=new sa;for(a.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){
// create on first access
if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var o=this.morphNormals[t].faceNormals,s=this.morphNormals[t].vertexNormals;for(i=0,n=this.faces.length;i<n;i++)h=new er,l={a:new er,b:new er,c:new er},o.push(h),s.push(l)}var c=this.morphNormals[t];
// set vertices to morph target
a.vertices=this.morphTargets[t].vertices,
// compute morph normals
a.computeFaceNormals(),a.computeVertexNormals();
// store morph normals
var h,l;for(i=0,n=this.faces.length;i<n;i++)r=this.faces[i],h=c.faceNormals[i],l=c.vertexNormals[i],h.copy(r.normal),l.a.copy(r.vertexNormals[0]),l.b.copy(r.vertexNormals[1]),l.c.copy(r.vertexNormals[2])}
// restore original normals
for(i=0,n=this.faces.length;i<n;i++)(r=this.faces[i]).normal=r.__originalFaceNormal,r.vertexNormals=r.__originalVertexNormals},computeLineDistances:function(){for(var t=0,e=this.vertices,i=0,n=e.length;i<n;i++)i>0&&(t+=e[i].distanceTo(e[i-1])),this.lineDistances[i]=t},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Xr),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new qr),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,i){if(t&&t.isGeometry){var n,r=this.vertices.length,a=this.vertices,o=t.vertices,s=this.faces,c=t.faces,h=this.faceVertexUvs[0],l=t.faceVertexUvs[0],u=this.colors,d=t.colors;void 0===i&&(i=0),void 0!==e&&(n=(new Yr).getNormalMatrix(e));
// vertices
for(var p=0,f=o.length;p<f;p++){var m=o[p].clone();void 0!==e&&m.applyMatrix4(e),a.push(m)}
// colors
for(var p=0,f=d.length;p<f;p++)u.push(d[p].clone());
// faces
for(p=0,f=c.length;p<f;p++){var g,v,y,x=c[p],b=x.vertexNormals,_=x.vertexColors;(g=new aa(x.a+r,x.b+r,x.c+r)).normal.copy(x.normal),void 0!==n&&g.normal.applyMatrix3(n).normalize();for(var w=0,M=b.length;w<M;w++)v=b[w].clone(),void 0!==n&&v.applyMatrix3(n).normalize(),g.vertexNormals.push(v);g.color.copy(x.color);for(var w=0,M=_.length;w<M;w++)y=_[w],g.vertexColors.push(y.clone());g.materialIndex=x.materialIndex+i,s.push(g)}
// uvs
for(p=0,f=l.length;p<f;p++){var E=l[p],T=[];if(void 0!==E){for(var w=0,M=E.length;w<M;w++)T.push(E[w].clone());h.push(T)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t)},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},/*
	 * Checks for duplicate vertices with hashmap.
	 * Duplicated vertices are removed
	 * and faces' vertices are updated.
	 */
mergeVertices:function(){var t,e,i,n,r,a,o,s,c={},h=[],l=[],u=Math.pow(10,4);for(i=0,n=this.vertices.length;i<n;i++)t=this.vertices[i],void 0===c[e=Math.round(t.x*u)+"_"+Math.round(t.y*u)+"_"+Math.round(t.z*u)]?(c[e]=i,h.push(this.vertices[i]),l[i]=h.length-1):
//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);
l[i]=l[c[e]];
// if faces are completely degenerate after merging vertices, we
// have to remove them from the geometry.
var d=[];for(i=0,n=this.faces.length;i<n;i++){(r=this.faces[i]).a=l[r.a],r.b=l[r.b],r.c=l[r.c],a=[r.a,r.b,r.c];
// if any duplicate vertices are found in a Face3
// we have to remove the face as nothing can be saved
for(var p=0;p<3;p++)if(a[p]===a[(p+1)%3]){d.push(i);break}}for(i=d.length-1;i>=0;i--){var f=d[i];for(this.faces.splice(f,1),o=0,s=this.faceVertexUvs.length;o<s;o++)this.faceVertexUvs[o].splice(f,1)}
// Use unique set of vertices
var m=this.vertices.length-h.length;return this.vertices=h,m},sortFacesByMaterialIndex:function(){
// tag faces
for(var t=this.faces,e=t.length,i=0;i<e;i++)t[i]._id=i;t.sort(
// sort faces
function(t,e){return t.materialIndex-e.materialIndex});
// sort uvs
var n,r,a=this.faceVertexUvs[0],o=this.faceVertexUvs[1];a&&a.length===e&&(n=[]),o&&o.length===e&&(r=[]);for(i=0;i<e;i++){var s=t[i]._id;n&&n.push(a[s]),r&&r.push(o[s])}n&&(this.faceVertexUvs[0]=n),r&&(this.faceVertexUvs[1]=r)},toJSON:function(){function t(t,e,i){return i?t|1<<e:t&~(1<<e)}function e(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==d[e]?d[e]:(d[e]=u.length/3,u.push(t.x,t.y,t.z),d[e])}function i(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==f[e]?f[e]:(f[e]=p.length,p.push(t.getHex()),f[e])}function n(t){var e=t.x.toString()+t.y.toString();return void 0!==g[e]?g[e]:(g[e]=m.length/2,m.push(t.x,t.y),g[e])}var r={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(
// standard Geometry serialization
r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),void 0!==this.parameters){var a=this.parameters;for(var o in a)void 0!==a[o]&&(r[o]=a[o]);return r}for(var s=[],c=0;c<this.vertices.length;c++){var h=this.vertices[c];s.push(h.x,h.y,h.z)}for(var l=[],u=[],d={},p=[],f={},m=[],g={},c=0;c<this.faces.length;c++){var v=this.faces[c],y=void 0!==this.faceVertexUvs[0][c],x=v.normal.length()>0,b=v.vertexNormals.length>0,_=1!==v.color.r||1!==v.color.g||1!==v.color.b,w=v.vertexColors.length>0,M=0;if(M=t(M,0,0),// isQuad
M=t(M,1,!0),M=t(M,2,!1),M=t(M,3,y),M=t(M,4,x),M=t(M,5,b),M=t(M,6,_),M=t(M,7,w),l.push(M),l.push(v.a,v.b,v.c),l.push(v.materialIndex),y){var E=this.faceVertexUvs[0][c];l.push(n(E[0]),n(E[1]),n(E[2]))}if(x&&l.push(e(v.normal)),b){var T=v.vertexNormals;l.push(e(T[0]),e(T[1]),e(T[2]))}if(_&&l.push(i(v.color)),w){var S=v.vertexColors;l.push(i(S[0]),i(S[1]),i(S[2]))}}// temporal backward compatibility
return r.data={},r.data.vertices=s,r.data.normals=u,p.length>0&&(r.data.colors=p),m.length>0&&(r.data.uvs=[m]),r.data.faces=l,r},clone:function(){/*
		 // Handle primitives

		 var parameters = this.parameters;

		 if ( parameters !== undefined ) {

		 var values = [];

		 for ( var key in parameters ) {

		 values.push( parameters[ key ] );

		 }

		 var geometry = Object.create( this.constructor.prototype );
		 this.constructor.apply( geometry, values );
		 return geometry;

		 }

		 return new this.constructor().copy( this );
		 */
return(new sa).copy(this)},copy:function(t){var e,i,n,r,a,o;
// reset
this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,
// name
this.name=t.name;
// vertices
var s=t.vertices;for(e=0,i=s.length;e<i;e++)this.vertices.push(s[e].clone());
// colors
var c=t.colors;for(e=0,i=c.length;e<i;e++)this.colors.push(c[e].clone());
// faces
var h=t.faces;for(e=0,i=h.length;e<i;e++)this.faces.push(h[e].clone());
// face vertex uvs
for(e=0,i=t.faceVertexUvs.length;e<i;e++){var l=t.faceVertexUvs[e];for(void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]),n=0,r=l.length;n<r;n++){var u=l[n],d=[];for(a=0,o=u.length;a<o;a++){var p=u[a];d.push(p.clone())}this.faceVertexUvs[e].push(d)}}
// morph targets
var f=t.morphTargets;for(e=0,i=f.length;e<i;e++){var m={};
// vertices
if(m.name=f[e].name,void 0!==f[e].vertices)for(m.vertices=[],n=0,r=f[e].vertices.length;n<r;n++)m.vertices.push(f[e].vertices[n].clone());
// normals
if(void 0!==f[e].normals)for(m.normals=[],n=0,r=f[e].normals.length;n<r;n++)m.normals.push(f[e].normals[n].clone());this.morphTargets.push(m)}
// morph normals
var g=t.morphNormals;for(e=0,i=g.length;e<i;e++){var v={};
// vertex normals
if(void 0!==g[e].vertexNormals)for(v.vertexNormals=[],n=0,r=g[e].vertexNormals.length;n<r;n++){var y=g[e].vertexNormals[n],x={};x.a=y.a.clone(),x.b=y.b.clone(),x.c=y.c.clone(),v.vertexNormals.push(x)}
// face normals
if(void 0!==g[e].faceNormals)for(v.faceNormals=[],n=0,r=g[e].faceNormals.length;n<r;n++)v.faceNormals.push(g[e].faceNormals[n].clone());this.morphNormals.push(v)}
// skin weights
var b=t.skinWeights;for(e=0,i=b.length;e<i;e++)this.skinWeights.push(b[e].clone());
// skin indices
var _=t.skinIndices;for(e=0,i=_.length;e<i;e++)this.skinIndices.push(_[e].clone());
// line distances
var w=t.lineDistances;for(e=0,i=w.length;e<i;e++)this.lineDistances.push(w[e]);
// bounding box
var M=t.boundingBox;null!==M&&(this.boundingBox=M.clone());
// bounding sphere
var E=t.boundingSphere;
// update flags
return null!==E&&(this.boundingSphere=E.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(ca.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(ca.prototype,{isBufferAttribute:!0,setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==t?t.length/this.itemSize:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.dynamic=t.dynamic,this},copyAt:function(t,e,i){t*=this.itemSize,i*=e.itemSize;for(var n=0,r=this.itemSize;n<r;n++)this.array[t+n]=e.array[i+n];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),a=new Fr),e[i++]=a.r,e[i++]=a.g,e[i++]=a.b}return this},copyIndicesArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];e[i++]=a.a,e[i++]=a.b,e[i++]=a.c}return this},copyVector2sArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),a=new Zn),e[i++]=a.x,e[i++]=a.y}return this},copyVector3sArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),a=new er),e[i++]=a.x,e[i++]=a.y,e[i++]=a.z}return this},copyVector4sArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),a=new Qn),e[i++]=a.x,e[i++]=a.y,e[i++]=a.z,e[i++]=a.w}return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),(ha.prototype=Object.create(ca.prototype)).constructor=ha,(la.prototype=Object.create(ca.prototype)).constructor=la,(ua.prototype=Object.create(ca.prototype)).constructor=ua,(da.prototype=Object.create(ca.prototype)).constructor=da,(pa.prototype=Object.create(ca.prototype)).constructor=pa,(fa.prototype=Object.create(ca.prototype)).constructor=fa,(ma.prototype=Object.create(ca.prototype)).constructor=ma,(ga.prototype=Object.create(ca.prototype)).constructor=ga,(va.prototype=Object.create(ca.prototype)).constructor=va,Object.assign(ya.prototype,{computeGroups:function(t){for(var e,i=[],n=void 0,r=t.faces,a=0;a<r.length;a++){var o=r[a];
// materials
o.materialIndex!==n&&(n=o.materialIndex,void 0!==e&&(e.count=3*a-e.start,i.push(e)),e={start:3*a,materialIndex:n})}void 0!==e&&(e.count=3*a-e.start,i.push(e)),this.groups=i},fromGeometry:function(t){var e,i=t.faces,n=t.vertices,r=t.faceVertexUvs,a=r[0]&&r[0].length>0,o=r[1]&&r[1].length>0,s=t.morphTargets,c=s.length;if(c>0){e=[];for(g=0;g<c;g++)e[g]=[];this.morphTargets.position=e}var h,l=t.morphNormals,u=l.length;if(u>0){h=[];for(g=0;g<u;g++)h[g]=[];this.morphTargets.normal=h}
//
for(var d=t.skinIndices,p=t.skinWeights,f=d.length===n.length,m=p.length===n.length,g=0;g<i.length;g++){var v=i[g];this.vertices.push(n[v.a],n[v.b],n[v.c]);var y=v.vertexNormals;if(3===y.length)this.normals.push(y[0],y[1],y[2]);else{var x=v.normal;this.normals.push(x,x,x)}var b=v.vertexColors;if(3===b.length)this.colors.push(b[0],b[1],b[2]);else{var _=v.color;this.colors.push(_,_,_)}if(!0===a){void 0!==(w=r[0][g])?this.uvs.push(w[0],w[1],w[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",g),this.uvs.push(new Zn,new Zn,new Zn))}if(!0===o){var w=r[1][g];void 0!==w?this.uvs2.push(w[0],w[1],w[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",g),this.uvs2.push(new Zn,new Zn,new Zn))}
// morphs
for(E=0;E<c;E++){var M=s[E].vertices;e[E].push(M[v.a],M[v.b],M[v.c])}for(var E=0;E<u;E++){var T=l[E].vertexNormals[g];h[E].push(T.a,T.b,T.c)}
// skins
f&&this.skinIndices.push(d[v.a],d[v.b],d[v.c]),m&&this.skinWeights.push(p[v.a],p[v.b],p[v.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this}}),ba.MaxIndex=65535,Object.assign(ba.prototype,Yn.prototype,{isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(xa(t)>65535?ma:pa)(t,1):this.index=t},addAttribute:function(t,e){return e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),void this.setIndex(e)):(this.attributes[t]=e,this):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void this.addAttribute(t,new ca(arguments[1],arguments[2])))},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,i){this.groups.push({start:t,count:e,materialIndex:void 0!==i?i:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToBufferAttribute(e),e.needsUpdate=!0);var i=this.attributes.normal;if(void 0!==i){(new Yr).getNormalMatrix(t).applyToBufferAttribute(i),i.needsUpdate=!0}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){
// rotate geometry around world x-axis
var t=new ir;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){
// rotate geometry around world y-axis
var t=new ir;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){
// rotate geometry around world z-axis
var t=new ir;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){
// translate geometry
var t=new ir;return function(e,i,n){return t.makeTranslation(e,i,n),this.applyMatrix(t),this}}(),scale:function(){
// scale geometry
var t=new ir;return function(e,i,n){return t.makeScale(e,i,n),this.applyMatrix(t),this}}(),lookAt:function(){var t=new ea;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},setFromObject:function(t){
// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );
var e=t.geometry;if(t.isPoints||t.isLine){var i=new ga(3*e.vertices.length,3),n=new ga(3*e.colors.length,3);if(this.addAttribute("position",i.copyVector3sArray(e.vertices)),this.addAttribute("color",n.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var r=new ga(e.lineDistances.length,1);this.addAttribute("lineDistance",r.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},updateFromObject:function(t){var e=t.geometry;if(t.isMesh){var i=e.__directGeometry;if(!0===e.elementsNeedUpdate&&(i=void 0,e.elementsNeedUpdate=!1),void 0===i)return this.fromGeometry(e);i.verticesNeedUpdate=e.verticesNeedUpdate,i.normalsNeedUpdate=e.normalsNeedUpdate,i.colorsNeedUpdate=e.colorsNeedUpdate,i.uvsNeedUpdate=e.uvsNeedUpdate,i.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=i}var n;return!0===e.verticesNeedUpdate&&(void 0!==(n=this.attributes.position)&&(n.copyVector3sArray(e.vertices),n.needsUpdate=!0),e.verticesNeedUpdate=!1),!0===e.normalsNeedUpdate&&(void 0!==(n=this.attributes.normal)&&(n.copyVector3sArray(e.normals),n.needsUpdate=!0),e.normalsNeedUpdate=!1),!0===e.colorsNeedUpdate&&(void 0!==(n=this.attributes.color)&&(n.copyColorsArray(e.colors),n.needsUpdate=!0),e.colorsNeedUpdate=!1),e.uvsNeedUpdate&&(void 0!==(n=this.attributes.uv)&&(n.copyVector2sArray(e.uvs),n.needsUpdate=!0),e.uvsNeedUpdate=!1),e.lineDistancesNeedUpdate&&(void 0!==(n=this.attributes.lineDistance)&&(n.copyArray(e.lineDistances),n.needsUpdate=!0),e.lineDistancesNeedUpdate=!1),e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new ya).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(3*t.vertices.length);if(this.addAttribute("position",new ca(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var i=new Float32Array(3*t.normals.length);this.addAttribute("normal",new ca(i,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var n=new Float32Array(3*t.colors.length);this.addAttribute("color",new ca(n,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var r=new Float32Array(2*t.uvs.length);this.addAttribute("uv",new ca(r,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var a=new Float32Array(2*t.uvs2.length);this.addAttribute("uv2",new ca(a,2).copyVector2sArray(t.uvs2))}if(t.indices.length>0){var o=new(xa(t.indices)>65535?Uint32Array:Uint16Array)(3*t.indices.length);this.setIndex(new ca(o,1).copyIndicesArray(t.indices))}
// groups
this.groups=t.groups;
// morphs
for(var s in t.morphTargets){for(var c=[],h=t.morphTargets[s],l=0,u=h.length;l<u;l++){var d=h[l],p=new ga(3*d.length,3);c.push(p.copyVector3sArray(d))}this.morphAttributes[s]=c}
// skinning
if(t.skinIndices.length>0){var f=new ga(4*t.skinIndices.length,4);this.addAttribute("skinIndex",f.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var m=new ga(4*t.skinWeights.length,4);this.addAttribute("skinWeight",m.copyVector4sArray(t.skinWeights))}
//
return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Xr);var t=this.attributes.position;void 0!==t?this.boundingBox.setFromBufferAttribute(t):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var t=new Xr,e=new er;return function(){null===this.boundingSphere&&(this.boundingSphere=new qr);var i=this.attributes.position;if(i){var n=this.boundingSphere.center;t.setFromBufferAttribute(i),t.getCenter(n);for(var r=0,a=0,o=i.count;a<o;a++)e.x=i.getX(a),e.y=i.getY(a),e.z=i.getZ(a),r=Math.max(r,n.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes,i=this.groups;if(e.position){var n=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new ca(new Float32Array(n.length),3));else for(var r=e.normal.array,a=0,o=r.length;a<o;a++)r[a]=0;var s,c,h,l=e.normal.array,u=new er,d=new er,p=new er,f=new er,m=new er;
// indexed elements
if(t){var g=t.array;0===i.length&&this.addGroup(0,g.length);for(var v=0,y=i.length;v<y;++v)for(var x=i[v],b=x.start,a=b,o=b+x.count;a<o;a+=3)s=3*g[a+0],c=3*g[a+1],h=3*g[a+2],u.fromArray(n,s),d.fromArray(n,c),p.fromArray(n,h),f.subVectors(p,d),m.subVectors(u,d),f.cross(m),l[s]+=f.x,l[s+1]+=f.y,l[s+2]+=f.z,l[c]+=f.x,l[c+1]+=f.y,l[c+2]+=f.z,l[h]+=f.x,l[h+1]+=f.y,l[h+2]+=f.z}else
// non-indexed elements (unconnected triangle soup)
for(var a=0,o=n.length;a<o;a+=9)u.fromArray(n,a),d.fromArray(n,a+3),p.fromArray(n,a+6),f.subVectors(p,d),m.subVectors(u,d),f.cross(m),l[a]=f.x,l[a+1]=f.y,l[a+2]=f.z,l[a+3]=f.x,l[a+4]=f.y,l[a+5]=f.z,l[a+6]=f.x,l[a+7]=f.y,l[a+8]=f.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(t&&t.isBufferGeometry){void 0===e&&(e=0);var i=this.attributes;for(var n in i)if(void 0!==t.attributes[n])for(var r=i[n].array,a=t.attributes[n],o=a.array,s=0,c=a.itemSize*e;s<o.length;s++,c++)r[c]=o[s];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t)},normalizeNormals:function(){var t=new er;return function(){for(var e=this.attributes.normal,i=0,n=e.count;i<n;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.normalize(),e.setXYZ(i,t.x,t.y,t.z)}}(),toNonIndexed:function(){if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t=new ba,e=this.index.array,i=this.attributes;for(var n in i){for(var r=i[n],a=r.array,o=r.itemSize,s=new a.constructor(e.length*o),c=0,h=0,l=0,u=e.length;l<u;l++){c=e[l]*o;for(var d=0;d<o;d++)s[h++]=a[c++]}t.addAttribute(n,new ca(s,o))}return t},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(
// standard BufferGeometry serialization
t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};var n=this.index;if(null!==n){o=Array.prototype.slice.call(n.array);t.data.index={type:n.array.constructor.name,array:o}}var r=this.attributes;for(var i in r){var a=r[i],o=Array.prototype.slice.call(a.array);t.data.attributes[i]={itemSize:a.itemSize,type:a.array.constructor.name,array:o,normalized:a.normalized}}var s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));var c=this.boundingSphere;return null!==c&&(t.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),t},clone:function(){/*
		 // Handle primitives

		 var parameters = this.parameters;

		 if ( parameters !== undefined ) {

		 var values = [];

		 for ( var key in parameters ) {

		 values.push( parameters[ key ] );

		 }

		 var geometry = Object.create( this.constructor.prototype );
		 this.constructor.apply( geometry, values );
		 return geometry;

		 }

		 return new this.constructor().copy( this );
		 */
return(new ba).copy(this)},copy:function(t){var e,i,n;
// reset
this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,
// name
this.name=t.name;
// index
var r=t.index;null!==r&&this.setIndex(r.clone());
// attributes
var a=t.attributes;for(e in a){var o=a[e];this.addAttribute(e,o.clone())}
// morph attributes
var s=t.morphAttributes;for(e in s){var c=[],h=s[e];// morphAttribute: array of Float32BufferAttributes
for(i=0,n=h.length;i<n;i++)c.push(h[i].clone());this.morphAttributes[e]=c}
// groups
var l=t.groups;for(i=0,n=l.length;i<n;i++){var u=l[i];this.addGroup(u.start,u.count,u.materialIndex)}
// bounding box
var d=t.boundingBox;null!==d&&(this.boundingBox=d.clone());
// bounding sphere
var p=t.boundingSphere;
// draw range
return null!==p&&(this.boundingSphere=p.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),(_a.prototype=Object.create(sa.prototype)).constructor=_a,(wa.prototype=Object.create(ba.prototype)).constructor=wa,(Ma.prototype=Object.create(sa.prototype)).constructor=Ma,(Ea.prototype=Object.create(ba.prototype)).constructor=Ea,(Ta.prototype=Object.create(Vr.prototype)).constructor=Ta,Ta.prototype.isMeshBasicMaterial=!0,Ta.prototype.copy=function(t){return Vr.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this},Object.assign(Sa.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return(e||new er).copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(){var t=new er;return function(e){return this.origin.copy(this.at(e,t)),this}}(),closestPointToPoint:function(t,e){var i=e||new er;i.subVectors(t,this.origin);var n=i.dot(this.direction);return n<0?i.copy(this.origin):i.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(){var t=new er;return function(e){var i=t.subVectors(e,this.origin).dot(this.direction);
// point behind the ray
// point behind the ray
return i<0?this.origin.distanceToSquared(e):(t.copy(this.direction).multiplyScalar(i).add(this.origin),t.distanceToSquared(e))}}(),distanceSqToSegment:function(){var t=new er,e=new er,i=new er;return function(n,r,a,o){
// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h
// It returns the min distance between the ray and the segment
// defined by v0 and v1
// It can also set two optional targets :
// - The closest point on the ray
// - The closest point on the segment
t.copy(n).add(r).multiplyScalar(.5),e.copy(r).sub(n).normalize(),i.copy(this.origin).sub(t);var s,c,h,l,u=.5*n.distanceTo(r),d=-this.direction.dot(e),p=i.dot(this.direction),f=-i.dot(e),m=i.lengthSq(),g=Math.abs(1-d*d);if(g>0)if(
// The ray and segment are not parallel.
s=d*f-p,c=d*p-f,l=u*g,s>=0)if(c>=-l)if(c<=l){
// region 0
// Minimum at interior points of ray and segment.
var v=1/g;h=(s*=v)*(s+d*(c*=v)+2*p)+c*(d*s+c+2*f)+m}else
// region 1
c=u,h=-(s=Math.max(0,-(d*c+p)))*s+c*(c+2*f)+m;else
// region 5
c=-u,h=-(s=Math.max(0,-(d*c+p)))*s+c*(c+2*f)+m;else c<=-l?h=-(
// region 4
s=Math.max(0,-(-d*u+p)))*s+(c=s>0?-u:Math.min(Math.max(-u,-f),u))*(c+2*f)+m:c<=l?(
// region 3
s=0,h=(c=Math.min(Math.max(-u,-f),u))*(c+2*f)+m):h=-(
// region 2
s=Math.max(0,-(d*u+p)))*s+(c=s>0?u:Math.min(Math.max(-u,-f),u))*(c+2*f)+m;else
// Ray and segment are parallel.
c=d>0?-u:u,h=-(s=Math.max(0,-(d*c+p)))*s+c*(c+2*f)+m;return a&&a.copy(this.direction).multiplyScalar(s).add(this.origin),o&&o.copy(e).multiplyScalar(c).add(t),h}}(),intersectSphere:function(){var t=new er;return function(e,i){t.subVectors(e.center,this.origin);var n=t.dot(this.direction),r=t.dot(t)-n*n,a=e.radius*e.radius;if(r>a)return null;var o=Math.sqrt(a-r),s=n-o,c=n+o;
// test to see if both t0 and t1 are behind the ray - if so, return null
// test to see if both t0 and t1 are behind the ray - if so, return null
// test to see if t0 is behind the ray:
// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,
// in order to always return an intersect point that is in front of the ray.
return s<0&&c<0?null:s<0?this.at(c,i):this.at(s,i)}}(),intersectsSphere:function(t){return this.distanceToPoint(t.center)<=t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0===e)
// line is coplanar, return origin
// line is coplanar, return origin
return 0===t.distanceToPoint(this.origin)?0:null;var i=-(this.origin.dot(t.normal)+t.constant)/e;
// Return if the ray never intersects the plane
return i>=0?i:null},intersectPlane:function(t,e){var i=this.distanceToPlane(t);return null===i?null:this.at(i,e)},intersectsPlane:function(t){
// check if the ray lies on the plane first
var e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0},intersectBox:function(t,e){var i,n,r,a,o,s,c=1/this.direction.x,h=1/this.direction.y,l=1/this.direction.z,u=this.origin;
// These lines also handle the case where tmin or tmax is NaN
// (result of 0 * Infinity). x !== x returns true if x is NaN
//return point closest to the ray (positive side)
return c>=0?(i=(t.min.x-u.x)*c,n=(t.max.x-u.x)*c):(i=(t.max.x-u.x)*c,n=(t.min.x-u.x)*c),h>=0?(r=(t.min.y-u.y)*h,a=(t.max.y-u.y)*h):(r=(t.max.y-u.y)*h,a=(t.min.y-u.y)*h),i>a||r>n?null:((r>i||i!=i)&&(i=r),(a<n||n!=n)&&(n=a),l>=0?(o=(t.min.z-u.z)*l,s=(t.max.z-u.z)*l):(o=(t.max.z-u.z)*l,s=(t.min.z-u.z)*l),i>s||o>n?null:((o>i||i!=i)&&(i=o),(s<n||n!=n)&&(n=s),n<0?null:this.at(i>=0?i:n,e)))},intersectsBox:function(){var t=new er;return function(e){return null!==this.intersectBox(e,t)}}(),intersectTriangle:function(){
// Compute the offset origin, edges, and normal.
var t=new er,e=new er,i=new er,n=new er;return function(r,a,o,s,c){
// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h
e.subVectors(a,r),i.subVectors(o,r),n.crossVectors(e,i);
// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,
// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by
//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))
//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))
//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)
var h,l=this.direction.dot(n);if(l>0){if(s)return null;h=1}else{if(!(l<0))return null;h=-1,l=-l}t.subVectors(this.origin,r);var u=h*this.direction.dot(i.crossVectors(t,i));
// b1 < 0, no intersection
if(u<0)return null;var d=h*this.direction.dot(e.cross(t));
// b2 < 0, no intersection
if(d<0)return null;
// b1+b2 > 1, no intersection
if(u+d>l)return null;
// Line intersects triangle, check if ray does.
var p=-h*t.dot(n);
// t < 0, no intersection
// t < 0, no intersection
return p<0?null:this.at(p/l,c)}}(),applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}),Object.assign(Aa.prototype,{set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){return(t||new er).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return(t||new er).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){var i=e||new er;return this.delta(i).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var t=new er,e=new er;return function(i,n){t.subVectors(i,this.start),e.subVectors(this.end,this.start);var r=e.dot(e),a=e.dot(t)/r;return n&&(a=Yp.clamp(a,0,1)),a}}(),closestPointToPoint:function(t,e,i){var n=this.closestPointToPointParameter(t,e),r=i||new er;return this.delta(r).multiplyScalar(n).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}),Object.assign(La,{normal:function(){var t=new er;return function(e,i,n,r){var a=r||new er;a.subVectors(n,i),t.subVectors(e,i),a.cross(t);var o=a.lengthSq();return o>0?a.multiplyScalar(1/Math.sqrt(o)):a.set(0,0,0)}}(),
// static/instance method to calculate barycentric coordinates
// based on: http://www.blackpawn.com/texts/pointinpoly/default.html
barycoordFromPoint:function(){var t=new er,e=new er,i=new er;return function(n,r,a,o,s){t.subVectors(o,r),e.subVectors(a,r),i.subVectors(n,r);var c=t.dot(t),h=t.dot(e),l=t.dot(i),u=e.dot(e),d=e.dot(i),p=c*u-h*h,f=s||new er;
// collinear or singular triangle
if(0===p)
// arbitrary location outside of triangle?
// not sure if this is the best idea, maybe should be returning undefined
return f.set(-2,-1,-1);var m=1/p,g=(u*l-h*d)*m,v=(c*d-h*l)*m;
// barycentric coordinates must always sum to 1
return f.set(1-g-v,v,g)}}(),containsPoint:function(){var t=new er;return function(e,i,n,r){var a=La.barycoordFromPoint(e,i,n,r,t);return a.x>=0&&a.y>=0&&a.x+a.y<=1}}()}),Object.assign(La.prototype,{set:function(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this},setFromPointsAndIndices:function(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},area:function(){var t=new er,e=new er;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),.5*t.cross(e).length()}}(),midpoint:function(t){return(t||new er).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(t){return La.normal(this.a,this.b,this.c,t)},plane:function(t){return(t||new Zr).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(t,e){return La.barycoordFromPoint(t,this.a,this.b,this.c,e)},containsPoint:function(t){return La.containsPoint(t,this.a,this.b,this.c)},closestPointToPoint:function(){var t=new Zr,e=[new Aa,new Aa,new Aa],i=new er,n=new er;return function(r,a){var o=a||new er,s=1/0;
// check if the projection lies within the triangle
if(
// project the point onto the plane of the triangle
t.setFromCoplanarPoints(this.a,this.b,this.c),t.projectPoint(r,i),!0===this.containsPoint(i))
// if so, this is the closest point
o.copy(i);else{
// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices
e[0].set(this.a,this.b),e[1].set(this.b,this.c),e[2].set(this.c,this.a);for(var c=0;c<e.length;c++){e[c].closestPointToPoint(i,!0,n);var h=i.distanceToSquared(n);h<s&&(s=h,o.copy(n))}}return o}}(),equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}),Ra.prototype=Object.assign(Object.create(ea.prototype),{constructor:Ra,isMesh:!0,setDrawMode:function(t){this.drawMode=t},copy:function(t){return ea.prototype.copy.call(this,t),this.drawMode=t.drawMode,this},updateMorphTargets:function(){var t,e,i,n=this.geometry;if(n.isBufferGeometry){var r=n.morphAttributes,a=Object.keys(r);if(a.length>0){var o=r[a[0]];if(void 0!==o)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=o.length;t<e;t++)i=o[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}else{var s=n.morphTargets;if(void 0!==s&&s.length>0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=s.length;t<e;t++)i=s[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}},raycast:function(){function t(t,e,i,n,r,a,o){return La.barycoordFromPoint(t,e,i,n,m),r.multiplyScalar(m.x),a.multiplyScalar(m.y),o.multiplyScalar(m.z),r.add(a).add(o),r.clone()}function e(t,e,i,n,r,a,o,s){if(null===(e.side===td?n.intersectTriangle(o,a,r,!0,s):n.intersectTriangle(r,a,o,e.side!==ed,s)))return null;v.copy(s),v.applyMatrix4(t.matrixWorld);var c=i.ray.origin.distanceTo(v);return c<i.near||c>i.far?null:{distance:c,point:v.clone(),object:t}}function i(i,n,r,a,h,l,u,m){o.fromBufferAttribute(a,l),s.fromBufferAttribute(a,u),c.fromBufferAttribute(a,m);var v=e(i,i.material,n,r,o,s,c,g);return v&&(h&&(d.fromBufferAttribute(h,l),p.fromBufferAttribute(h,u),f.fromBufferAttribute(h,m),v.uv=t(g,o,s,c,d,p,f)),v.face=new aa(l,u,m,La.normal(o,s,c)),v.faceIndex=l),v}var n=new ir,r=new Sa,a=new qr,o=new er,s=new er,c=new er,h=new er,l=new er,u=new er,d=new Zn,p=new Zn,f=new Zn,m=new er,g=new er,v=new er;return function(m,v){var y=this.geometry,x=this.material,b=this.matrixWorld;if(void 0!==x&&(
// Checking boundingSphere distance to ray
null===y.boundingSphere&&y.computeBoundingSphere(),a.copy(y.boundingSphere),a.applyMatrix4(b),!1!==m.ray.intersectsSphere(a)&&(
//
n.getInverse(b),r.copy(m.ray).applyMatrix4(n),null===y.boundingBox||!1!==r.intersectsBox(y.boundingBox))))
// Check boundingBox before continuing
{var _;if(y.isBufferGeometry){var w,M,E,T,S,A=y.index,L=y.attributes.position,R=y.attributes.uv;if(null!==A)
// indexed buffer geometry
for(T=0,S=A.count;T<S;T+=3)w=A.getX(T),M=A.getX(T+1),E=A.getX(T+2),(_=i(this,m,r,L,R,w,M,E))&&(_.faceIndex=Math.floor(T/3),// triangle number in indices buffer semantics
v.push(_));else
// non-indexed buffer geometry
for(T=0,S=L.count;T<S;T+=3)(_=i(this,m,r,L,R,w=T,M=T+1,E=T+2))&&(_.index=w,// triangle number in positions buffer semantics
v.push(_))}else if(y.isGeometry){var P,C,I,U,N=Array.isArray(x),O=y.vertices,D=y.faces,F=y.faceVertexUvs[0];F.length>0&&(U=F);for(var B=0,z=D.length;B<z;B++){var G=D[B],H=N?x[G.materialIndex]:x;if(void 0!==H){if(P=O[G.a],C=O[G.b],I=O[G.c],!0===H.morphTargets){var V=y.morphTargets,k=this.morphTargetInfluences;o.set(0,0,0),s.set(0,0,0),c.set(0,0,0);for(var j=0,W=V.length;j<W;j++){var X=k[j];if(0!==X){var q=V[j].vertices;o.addScaledVector(h.subVectors(q[G.a],P),X),s.addScaledVector(l.subVectors(q[G.b],C),X),c.addScaledVector(u.subVectors(q[G.c],I),X)}}o.add(P),s.add(C),c.add(I),P=o,C=s,I=c}if(_=e(this,H,m,r,P,C,I,g)){if(U&&U[B]){var Y=U[B];d.copy(Y[0]),p.copy(Y[1]),f.copy(Y[2]),_.uv=t(g,P,C,I,d,p,f)}_.face=G,_.faceIndex=B,v.push(_)}}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});/**
 * @author mrdoob / http://mrdoob.com/
 */
var df=0;Wa.prototype=Object.assign(Object.create(ra.prototype),{constructor:Wa,isArrayCamera:!0}),Ya.prototype.isFogExp2=!0,Ya.prototype.clone=function(){return new Ya(this.color.getHex(),this.density)},Ya.prototype.toJSON=function(t){return{type:"FogExp2",color:this.color.getHex(),density:this.density}},Za.prototype.isFog=!0,Za.prototype.clone=function(){return new Za(this.color.getHex(),this.near,this.far)},Za.prototype.toJSON=function(t){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}},Ja.prototype=Object.assign(Object.create(ea.prototype),{constructor:Ja,copy:function(t,e){return ea.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=ea.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}),Qa.prototype=Object.assign(Object.create(ea.prototype),{constructor:Qa,isLensFlare:!0,copy:function(t){ea.prototype.copy.call(this,t),this.positionScreen.copy(t.positionScreen),this.customUpdateCallback=t.customUpdateCallback;for(var e=0,i=t.lensFlares.length;e<i;e++)this.lensFlares.push(t.lensFlares[e]);return this},add:function(t,e,i,n,r,a){void 0===e&&(e=-1),void 0===i&&(i=0),void 0===a&&(a=1),void 0===r&&(r=new Fr(16777215)),void 0===n&&(n=od),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:t,// THREE.Texture
size:e,// size in pixels (-1 = use texture.width)
distance:i,// distance (0-1) from light source (0=at light source)
x:0,y:0,z:0,// screen position (-1 => 1) z = 0 is in front z = 1 is back
scale:1,// scale
rotation:0,// rotation
opacity:a,// opacity
color:r,// color
blending:n})},/*
	 * Update lens flares update positions on all flares based on the screen position
	 * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.
	 */
updateLensFlares:function(){var t,e,i=this.lensFlares.length,n=2*-this.positionScreen.x,r=2*-this.positionScreen.y;for(t=0;t<i;t++)(e=this.lensFlares[t]).x=this.positionScreen.x+n*e.distance,e.y=this.positionScreen.y+r*e.distance,e.wantedRotation=e.x*Math.PI*.25,e.rotation+=.25*(e.wantedRotation-e.rotation)}}),(Ka.prototype=Object.create(Vr.prototype)).constructor=Ka,Ka.prototype.isSpriteMaterial=!0,Ka.prototype.copy=function(t){return Vr.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.rotation=t.rotation,this},$a.prototype=Object.assign(Object.create(ea.prototype),{constructor:$a,isSprite:!0,raycast:function(){var t=new er,e=new er,i=new er;return function(n,r){e.setFromMatrixPosition(this.matrixWorld),n.ray.closestPointToPoint(e,t),i.setFromMatrixScale(this.matrixWorld);var a=i.x*i.y/4;if(!(e.distanceToSquared(t)>a)){var o=n.ray.origin.distanceTo(t);o<n.near||o>n.far||r.push({distance:o,point:t.clone(),face:null,object:this})}}}(),clone:function(){return new this.constructor(this.material).copy(this)}}),to.prototype=Object.assign(Object.create(ea.prototype),{constructor:to,copy:function(t){ea.prototype.copy.call(this,t,!1);for(var e=t.levels,i=0,n=e.length;i<n;i++){var r=e[i];this.addLevel(r.object.clone(),r.distance)}return this},addLevel:function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var i=this.levels,n=0;n<i.length&&!(e<i[n].distance);n++);i.splice(n,0,{distance:e,object:t}),this.add(t)},getObjectForDistance:function(t){for(var e=this.levels,i=1,n=e.length;i<n&&!(t<e[i].distance);i++);return e[i-1].object},raycast:function(){var t=new er;return function(e,i){t.setFromMatrixPosition(this.matrixWorld);var n=e.ray.origin.distanceTo(t);this.getObjectForDistance(n).raycast(e,i)}}(),update:function(){var t=new er,e=new er;return function(i){var n=this.levels;if(n.length>1){t.setFromMatrixPosition(i.matrixWorld),e.setFromMatrixPosition(this.matrixWorld);var r=t.distanceTo(e);n[0].object.visible=!0;for(var a=1,o=n.length;a<o&&r>=n[a].distance;a++)n[a-1].object.visible=!1,n[a].object.visible=!0;for(;a<o;a++)n[a].object.visible=!1}}}(),toJSON:function(t){var e=ea.prototype.toJSON.call(this,t);e.object.levels=[];for(var i=this.levels,n=0,r=i.length;n<r;n++){var a=i[n];e.object.levels.push({object:a.object.uuid,distance:a.distance})}return e}}),Object.assign(eo.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var i=new ir;this.bones[t]&&i.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(i)}},pose:function(){var t,e,i;
// recover the bind-time world matrices
for(e=0,i=this.bones.length;e<i;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);
// compute the local matrices, positions, rotations and scales
for(e=0,i=this.bones.length;e<i;e++)(t=this.bones[e])&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},update:function(){var t=new ir,e=new ir;return function(){
// flatten bone matrices to array
for(var i=this.bones,n=this.boneInverses,r=this.boneMatrices,a=this.boneTexture,o=0,s=i.length;o<s;o++){
// compute the offset between the current and the original transform
var c=i[o]?i[o].matrixWorld:e;t.multiplyMatrices(c,n[o]),t.toArray(r,16*o)}void 0!==a&&(a.needsUpdate=!0)}}(),clone:function(){return new eo(this.bones,this.boneInverses)}}),io.prototype=Object.assign(Object.create(ea.prototype),{constructor:io,isBone:!0}),no.prototype=Object.assign(Object.create(Ra.prototype),{constructor:no,isSkinnedMesh:!0,initBones:function(){var t,e,i,n,r=[];if(this.geometry&&void 0!==this.geometry.bones){
// first, create array of 'Bone' objects from geometry data
for(i=0,n=this.geometry.bones.length;i<n;i++)e=this.geometry.bones[i],
// create new 'Bone' object
t=new io,r.push(t),
// apply values
t.name=e.name,t.position.fromArray(e.pos),t.quaternion.fromArray(e.rotq),void 0!==e.scl&&t.scale.fromArray(e.scl);
// second, create bone hierarchy
for(i=0,n=this.geometry.bones.length;i<n;i++)-1!==(e=this.geometry.bones[i]).parent&&null!==e.parent&&void 0!==r[e.parent]?
// subsequent bones in the hierarchy
r[e.parent].add(r[i]):
// topmost bone, immediate child of the skinned mesh
this.add(r[i])}
// now the bones are part of the scene graph and children of the skinned mesh.
// let's update the corresponding matrices
return this.updateMatrixWorld(!0),r},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var t,e;if(this.geometry&&this.geometry.isGeometry)for(e=0;e<this.geometry.skinWeights.length;e++){var i=this.geometry.skinWeights[e];(t=1/i.lengthManhattan())!==1/0?i.multiplyScalar(t):i.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry){var n=new Qn,r=this.geometry.attributes.skinWeight;for(e=0;e<r.count;e++)n.x=r.getX(e),n.y=r.getY(e),n.z=r.getZ(e),n.w=r.getW(e),(t=1/n.lengthManhattan())!==1/0?n.multiplyScalar(t):n.set(1,0,0,0),r.setXYZW(e,n.x,n.y,n.z,n.w)}},updateMatrixWorld:function(t){Ra.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),(ro.prototype=Object.create(Vr.prototype)).constructor=ro,ro.prototype.isLineBasicMaterial=!0,ro.prototype.copy=function(t){return Vr.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this},ao.prototype=Object.assign(Object.create(ea.prototype),{constructor:ao,isLine:!0,raycast:function(){var t=new ir,e=new Sa,i=new qr;return function(n,r){var a=n.linePrecision,o=a*a,s=this.geometry,c=this.matrixWorld;if(
// Checking boundingSphere distance to ray
null===s.boundingSphere&&s.computeBoundingSphere(),i.copy(s.boundingSphere),i.applyMatrix4(c),!1!==n.ray.intersectsSphere(i)){
//
t.getInverse(c),e.copy(n.ray).applyMatrix4(t);var h=new er,l=new er,u=new er,d=new er,p=this&&this.isLineSegments?2:1;if(s.isBufferGeometry){var f=s.index,m=s.attributes.position.array;if(null!==f)for(var g=f.array,v=0,y=g.length-1;v<y;v+=p){var x=g[v],b=g[v+1];h.fromArray(m,3*x),l.fromArray(m,3*b);if(!((M=e.distanceSqToSegment(h,l,d,u))>o)){d.applyMatrix4(this.matrixWorld);(E=n.ray.origin.distanceTo(d))<n.near||E>n.far||r.push({distance:E,
// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:u.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else for(var v=0,y=m.length/3-1;v<y;v+=p){h.fromArray(m,3*v),l.fromArray(m,3*v+3);if(!((M=e.distanceSqToSegment(h,l,d,u))>o)){d.applyMatrix4(this.matrixWorld);(E=n.ray.origin.distanceTo(d))<n.near||E>n.far||r.push({distance:E,
// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:u.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}else if(s.isGeometry)for(var _=s.vertices,w=_.length,v=0;v<w-1;v+=p){var M=e.distanceSqToSegment(_[v],_[v+1],d,u);if(!(M>o)){d.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation
var E=n.ray.origin.distanceTo(d);E<n.near||E>n.far||r.push({distance:E,
// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:u.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),oo.prototype=Object.assign(Object.create(ao.prototype),{constructor:oo,isLineSegments:!0}),so.prototype=Object.assign(Object.create(ao.prototype),{constructor:so,isLineLoop:!0}),(co.prototype=Object.create(Vr.prototype)).constructor=co,co.prototype.isPointsMaterial=!0,co.prototype.copy=function(t){return Vr.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this},ho.prototype=Object.assign(Object.create(ea.prototype),{constructor:ho,isPoints:!0,raycast:function(){var t=new ir,e=new Sa,i=new qr;return function(n,r){function a(t,i){var a=e.distanceSqToPoint(t);if(a<u){var s=e.closestPointToPoint(t);s.applyMatrix4(c);var h=n.ray.origin.distanceTo(s);if(h<n.near||h>n.far)return;r.push({distance:h,distanceToRay:Math.sqrt(a),point:s.clone(),index:i,face:null,object:o})}}var o=this,s=this.geometry,c=this.matrixWorld,h=n.params.Points.threshold;if(
// Checking boundingSphere distance to ray
null===s.boundingSphere&&s.computeBoundingSphere(),i.copy(s.boundingSphere),i.applyMatrix4(c),i.radius+=h,!1!==n.ray.intersectsSphere(i)){
//
t.getInverse(c),e.copy(n.ray).applyMatrix4(t);var l=h/((this.scale.x+this.scale.y+this.scale.z)/3),u=l*l,d=new er;if(s.isBufferGeometry){var p=s.index,f=s.attributes.position.array;if(null!==p)for(var m=p.array,g=0,v=m.length;g<v;g++){var y=m[g];d.fromArray(f,3*y),a(d,y)}else for(var g=0,x=f.length/3;g<x;g++)d.fromArray(f,3*g),a(d,g)}else for(var b=s.vertices,g=0,x=b.length;g<x;g++)a(b[g],g)}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),lo.prototype=Object.assign(Object.create(ea.prototype),{constructor:lo}),(uo.prototype=Object.create(Jn.prototype)).constructor=uo,(po.prototype=Object.create(Jn.prototype)).constructor=po,po.prototype.isCompressedTexture=!0,(fo.prototype=Object.create(Jn.prototype)).constructor=fo,fo.prototype.isDepthTexture=!0,(mo.prototype=Object.create(ba.prototype)).constructor=mo,(go.prototype=Object.create(sa.prototype)).constructor=go,(vo.prototype=Object.create(ba.prototype)).constructor=vo,(yo.prototype=Object.create(sa.prototype)).constructor=yo,(xo.prototype=Object.create(ba.prototype)).constructor=xo,(bo.prototype=Object.create(sa.prototype)).constructor=bo,(_o.prototype=Object.create(xo.prototype)).constructor=_o,(wo.prototype=Object.create(sa.prototype)).constructor=wo,(Mo.prototype=Object.create(xo.prototype)).constructor=Mo,(Eo.prototype=Object.create(sa.prototype)).constructor=Eo,(To.prototype=Object.create(xo.prototype)).constructor=To,(So.prototype=Object.create(sa.prototype)).constructor=So,(Ao.prototype=Object.create(xo.prototype)).constructor=Ao,(Lo.prototype=Object.create(sa.prototype)).constructor=Lo,(Ro.prototype=Object.create(ba.prototype)).constructor=Ro,(Po.prototype=Object.create(sa.prototype)).constructor=Po,(Co.prototype=Object.create(ba.prototype)).constructor=Co,(Io.prototype=Object.create(sa.prototype)).constructor=Io,(Uo.prototype=Object.create(ba.prototype)).constructor=Uo;/**
 * @author zz85 / http://www.lab4games.net/zz85/blog
 */
var pf={
// calculate area of the contour polygon
area:function(t){for(var e=t.length,i=0,n=e-1,r=0;r<e;n=r++)i+=t[n].x*t[r].y-t[r].x*t[n].y;return.5*i},triangulate:function(){/**
		 * This code is a quick port of code written in C++ which was submitted to
		 * flipcode.com by John W. Ratcliff  // July 22, 2000
		 * See original code and more information here:
		 * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml
		 *
		 * ported to actionscript by Zevan Rosser
		 * www.actionsnippet.com
		 *
		 * ported to javascript by Joshua Koo
		 * http://www.lab4games.net/zz85/blog
		 *
		 */
function t(t,e,i,n,r,a){var o,s,c,h,l,u,d,p,f;if(s=t[a[e]].x,c=t[a[e]].y,h=t[a[i]].x,l=t[a[i]].y,u=t[a[n]].x,d=t[a[n]].y,(h-s)*(d-c)-(l-c)*(u-s)<=0)return!1;var m,g,v,y,x,b,_,w,M,E,T,S,A,L,R;for(m=u-h,g=d-l,v=s-u,y=c-d,x=h-s,b=l-c,o=0;o<r;o++)if(p=t[a[o]].x,f=t[a[o]].y,!(p===s&&f===c||p===h&&f===l||p===u&&f===d)&&(_=p-s,w=f-c,M=p-h,E=f-l,T=p-u,S=f-d,
// see if p is inside triangle abc
R=m*E-g*M,A=x*w-b*_,L=v*S-y*T,R>=-Number.EPSILON&&L>=-Number.EPSILON&&A>=-Number.EPSILON))return!1;return!0}
// takes in an contour array and returns
return function(e,i){var n=e.length;if(n<3)return null;var r,a,o,s=[],c=[],h=[];if(pf.area(e)>0)for(a=0;a<n;a++)c[a]=a;else for(a=0;a<n;a++)c[a]=n-1-a;var l=n,u=2*l;/* error detection */
for(a=l-1;l>2;){/* if we loop, it is probably a non-simple polygon */
if(u--<=0)
//** Triangulate: ERROR - probable bad polygon!
//throw ( "Warning, unable to triangulate polygon!" );
//return null;
// Sometimes warning is fine, especially polygons are triangulated in reverse.
return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),i?h:s;/* next     */
if(/* three consecutive vertices in current polygon, <u,v,w> */
r=a,l<=r&&(r=0),/* previous */
a=r+1,l<=a&&(a=0),/* new v    */
o=a+1,l<=o&&(o=0),t(e,r,a,o,l,c)){var d,p,f,m,g;/* remove v from the remaining polygon */
for(/* true names of the vertices */
d=c[r],p=c[a],f=c[o],/* output Triangle */
s.push([e[d],e[p],e[f]]),h.push([c[r],c[a],c[o]]),m=a,g=a+1;g<l;m++,g++)c[m]=c[g];/* reset error detection counter */
u=2*--l}}return i?h:s}}(),triangulateShape:function(t,e){function i(t){var e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function n(t,e,i){
// inOtherPt needs to be collinear to the inSegment
// inOtherPt needs to be collinear to the inSegment
return t.x!==e.x?t.x<e.x?t.x<=i.x&&i.x<=e.x:e.x<=i.x&&i.x<=t.x:t.y<e.y?t.y<=i.y&&i.y<=e.y:e.y<=i.y&&i.y<=t.y}function r(t,e,i,r,a){var o=e.x-t.x,s=e.y-t.y,c=r.x-i.x,h=r.y-i.y,l=t.x-i.x,u=t.y-i.y,d=s*c-o*h,p=s*l-o*u;if(Math.abs(d)>Number.EPSILON){
// not parallel
var f;if(d>0){if(p<0||p>d)return[];if((f=h*l-c*u)<0||f>d)return[]}else{if(p>0||p<d)return[];if((f=h*l-c*u)>0||f<d)return[]}
// i.e. to reduce rounding errors
// intersection at endpoint of segment#1?
if(0===f)return!a||0!==p&&p!==d?[t]:[];if(f===d)return!a||0!==p&&p!==d?[e]:[];
// intersection at endpoint of segment#2?
if(0===p)return[i];if(p===d)return[r];
// return real intersection point
var m=f/d;return[{x:t.x+m*o,y:t.y+m*s}]}
// parallel or collinear
if(0!==p||h*l!=c*u)return[];
// they are collinear or degenerate
var g=0===o&&0===s,v=0===c&&0===h;// segment2 is just a point?
// both segments are points
if(g&&v)return t.x!==i.x||t.y!==i.y?[]:[t];
// segment#1  is a single point
if(g)return n(i,r,t)?[t]:[];
// segment#2  is a single point
if(v)return n(t,e,i)?[i]:[];
// they are collinear segments, which might overlap
var y,x,b,_,w,M,E,T;
// the segments are NOT on a vertical line
// the segments are on a vertical line
return 0!==o?(t.x<e.x?(y=t,b=t.x,x=e,_=e.x):(y=e,b=e.x,x=t,_=t.x),i.x<r.x?(w=i,E=i.x,M=r,T=r.x):(w=r,E=r.x,M=i,T=i.x)):(t.y<e.y?(y=t,b=t.y,x=e,_=e.y):(y=e,b=e.y,x=t,_=t.y),i.y<r.y?(w=i,E=i.y,M=r,T=r.y):(w=r,E=r.y,M=i,T=i.y)),b<=E?_<E?[]:_===E?a?[]:[w]:_<=T?[w,x]:[w,M]:b>T?[]:b===T?a?[]:[y]:_<=T?[y,x]:[y,M]}function a(t,e,i,n){
// The order of legs is important
// translation of all points, so that Vertex is at (0,0)
var r=e.x-t.x,a=e.y-t.y,o=i.x-t.x,s=i.y-t.y,c=n.x-t.x,h=n.y-t.y,l=r*s-a*o,u=r*h-a*c;if(Math.abs(l)>Number.EPSILON){
// angle != 180 deg.
var d=c*s-h*o;
// console.log( "from2to: " + from2toAngle + ", from2other: " + from2otherAngle + ", other2to: " + other2toAngle );
// console.log( "from2to: " + from2toAngle + ", from2other: " + from2otherAngle + ", other2to: " + other2toAngle );
return l>0?u>=0&&d>=0:u>=0||d>=0}
// angle == 180 deg.
// console.log( "from2to: 180 deg., from2other: " + from2otherAngle  );
return u>0}i(t),e.forEach(i);for(var o,s,c,h,l,u,d={},p=t.concat(),f=0,m=e.length;f<m;f++)Array.prototype.push.apply(p,e[f]);
//console.log( "allpoints",allpoints, allpoints.length );
// prepare all points map
for(o=0,s=p.length;o<s;o++)void 0!==d[l=p[o].x+":"+p[o].y]&&console.warn("THREE.ShapeUtils: Duplicate point",l,o),d[l]=o;
// remove holes by cutting paths to holes and adding them to the shape
var g=function(t,e){function i(t,e){
// Check if hole point lies within angle around shape point
var i=y.length-1,n=t-1;n<0&&(n=i);var r=t+1;r>i&&(r=0);var o=a(y[t],y[n],y[r],s[e]);if(!o)
// console.log( "Vertex (Shape): " + inShapeIdx + ", Point: " + hole[inHoleIdx].x + "/" + hole[inHoleIdx].y );
return!1;
// Check if shape point lies within angle around hole point
var c=s.length-1,h=e-1;h<0&&(h=c);var l=e+1;return l>c&&(l=0),!!(o=a(s[e],s[h],s[l],y[t]))}function n(t,e){
// checks for intersections with shape edges
var i,n;for(i=0;i<y.length;i++)if(n=i+1,n%=y.length,r(t,e,y[i],y[n],!0).length>0)return!0;return!1}function o(t,i){
// checks for intersections with hole edges
var n,a,o,s;for(n=0;n<x.length;n++)for(a=e[x[n]],o=0;o<a.length;o++)if(s=o+1,s%=a.length,r(t,i,a[o],a[s],!0).length>0)return!0;return!1}for(var s,c,h,l,u,d,p,f,m,g,v,y=t.concat(),x=[],b=[],_=0,w=e.length;_<w;_++)x.push(_);for(var M=0,E=2*x.length;x.length>0;){if(--E<0){console.log('THREE.ShapeUtils: Infinite Loop! Holes left:" + indepHoles.length + ", Probably Hole outside Shape!');break}
// search for shape-vertex and hole-vertex,
// which can be connected without intersections
for(h=M;h<y.length;h++){
// search for hole which can be reached without intersections
for(l=y[h],c=-1,_=0;_<x.length;_++)if(d=x[_],
// prevent multiple checks
p=l.x+":"+l.y+":"+d,void 0===b[p]){s=e[d];for(var T=0;T<s.length;T++)if(u=s[T],i(h,T)&&!n(l,u)&&!o(l,u)){c=T,x.splice(_,1),f=y.slice(0,h+1),m=y.slice(h),g=s.slice(c),v=s.slice(0,c+1),y=f.concat(g).concat(v).concat(m),M=h;
// Debug only, to show the selected cuts
// glob_CutLines.push( [ shapePt, holePt ] );
break}if(c>=0)break;// hole-vertex found
b[p]=!0}if(c>=0)break}}return y}(t,e),v=pf.triangulate(g,!1);// True returns indices for points of spooled shape
//console.log( "triangles",triangles, triangles.length );
// check all face vertices against all points map
for(o=0,s=v.length;o<s;o++)for(h=v[o],c=0;c<3;c++)void 0!==(u=d[l=h[c].x+":"+h[c].y])&&(h[c]=u);return v.concat()},isClockWise:function(t){return pf.area(t)<0}};(No.prototype=Object.create(sa.prototype)).constructor=No,(Oo.prototype=Object.create(ba.prototype)).constructor=Oo,Oo.prototype.getArrays=function(){var t=this.getAttribute("position"),e=t?Array.prototype.slice.call(t.array):[],i=this.getAttribute("uv"),n=i?Array.prototype.slice.call(i.array):[],r=this.index;return{position:e,uv:n,index:r?Array.prototype.slice.call(r.array):[]}},Oo.prototype.addShapeList=function(t,e){var i=t.length;e.arrays=this.getArrays();for(var n=0;n<i;n++){var r=t[n];this.addShape(r,e)}this.setIndex(e.arrays.index),this.addAttribute("position",new ga(e.arrays.position,3)),this.addAttribute("uv",new ga(e.arrays.uv,2))},Oo.prototype.addShape=function(t,e){function i(t,e,i){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(i).add(t)}
// Find directions for point movement
function n(t,e,i){
// computes for inPt the corresponding point inPt' on a new contour
//   shifted by 1 unit (length of normalized vector) to the left
// if we walk along contour clockwise, this new contour is outside the old one
//
// inPt' is the intersection of the two lines parallel to the two
//  adjacent edges of inPt at a distance of 1 unit on the left side.
var n,r,a,o=t.x-e.x,s=t.y-e.y,c=i.x-t.x,h=i.y-t.y,l=o*o+s*s,u=o*h-s*c;if(Math.abs(u)>Number.EPSILON){
// not collinear
// length of vectors for normalizing
var d=Math.sqrt(l),p=Math.sqrt(c*c+h*h),f=e.x-s/d,m=e.y+o/d,g=((i.x-h/p-f)*h-(i.y+c/p-m)*c)/(o*h-s*c),v=(
// vector from inPt to intersection point
n=f+o*g-t.x)*n+(r=m+s*g-t.y)*r;if(v<=2)return new Zn(n,r);a=Math.sqrt(v/2)}else{
// handle special case of collinear edges
var y=!1;// assumes: opposite
o>Number.EPSILON?c>Number.EPSILON&&(y=!0):o<-Number.EPSILON?c<-Number.EPSILON&&(y=!0):Math.sign(s)===Math.sign(h)&&(y=!0),y?(
// console.log("Warning: lines are a straight sequence");
n=-s,r=o,a=Math.sqrt(l)):(
// console.log("Warning: lines are a straight spike");
n=o,r=s,a=Math.sqrt(l/2))}return new Zn(n/a,r/a)}function r(t,e){var i,n;for(q=t.length;--q>=0;){i=q,(n=q-1)<0&&(n=t.length-1);
//console.log('b', i,j, i-1, k,vertices.length);
var r=0,a=T+2*w;for(r=0;r<a;r++){var o=j*r,h=j*(r+1);!function(t,e,i,n,r,a,o,h,l){s(t),s(e),s(n),s(e),s(i),s(n);var u=m.length/3,d=L.generateSideWallUV(I,m,u-6,u-3,u-2,u-1);c(d[0]),c(d[1]),c(d[3]),c(d[1]),c(d[2]),c(d[3])}(e+i+o,e+n+o,e+n+h,e+i+h)}}}function a(t,e,i){y.push(t),y.push(e),y.push(i)}function o(t,e,i){s(t),s(e),s(i);var n=m.length/3,r=L.generateTopUV(I,m,n-3,n-2,n-1);c(r[0]),c(r[1]),c(r[2])}function s(t){g.push(m.length/3),m.push(y[3*t+0]),m.push(y[3*t+1]),m.push(y[3*t+2])}function c(t){v.push(t.x),v.push(t.y)}var h,l,u,d,p,f=e.arrays?e.arrays:this.getArrays(),m=f.position,g=f.index,v=f.uv,y=[],x=void 0!==e.amount?e.amount:100,b=void 0!==e.bevelThickness?e.bevelThickness:6,_=void 0!==e.bevelSize?e.bevelSize:b-2,w=void 0!==e.bevelSegments?e.bevelSegments:3,M=void 0===e.bevelEnabled||e.bevelEnabled,E=void 0!==e.curveSegments?e.curveSegments:12,T=void 0!==e.steps?e.steps:1,S=e.extrudePath,A=!1,L=void 0!==e.UVGenerator?e.UVGenerator:No.WorldUVGenerator;S&&(h=S.getSpacedPoints(T),A=!0,M=!1,// bevels not supported for path extrusion
// SETUP TNB variables
// TODO1 - have a .isClosed in spline?
l=void 0!==e.frames?e.frames:S.computeFrenetFrames(T,!1),
// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);
u=new er,d=new er,p=new er),
// Safeguards if bevels are not enabled
M||(w=0,b=0,_=0);
// Variables initialization
var R,P,C,I=this,U=t.extractPoints(E),N=U.shape,O=U.holes;if(!pf.isClockWise(N))
// Maybe we should also check if holes are in the opposite direction, just to be safe ...
for(N=N.reverse(),P=0,C=O.length;P<C;P++)R=O[P],pf.isClockWise(R)&&(O[P]=R.reverse());var D=pf.triangulateShape(N,O),F=N;// vertices has all points but contour has only points of circumference
for(P=0,C=O.length;P<C;P++)R=O[P],N=N.concat(R);for(var B,z,G,H,V,k,j=N.length,W=D.length,X=[],q=0,Y=F.length,Z=Y-1,J=q+1;q<Y;q++,Z++,J++)Z===Y&&(Z=0),J===Y&&(J=0),
//  (j)---(i)---(k)
// console.log('i,j,k', i, j , k)
X[q]=n(F[q],F[Z],F[J]);var Q,K=[],$=X.concat();for(P=0,C=O.length;P<C;P++){for(R=O[P],Q=[],q=0,Z=(Y=R.length)-1,J=q+1;q<Y;q++,Z++,J++)Z===Y&&(Z=0),J===Y&&(J=0),
//  (j)---(i)---(k)
Q[q]=n(R[q],R[Z],R[J]);K.push(Q),$=$.concat(Q)}
// Loop bevelSegments, 1 for the front, 1 for the back
for(B=0;B<w;B++){
// contract shape
for(
//for ( b = bevelSegments; b > 0; b -- ) {
G=B/w,H=b*Math.cos(G*Math.PI/2),z=_*Math.sin(G*Math.PI/2),q=0,Y=F.length;q<Y;q++)a((V=i(F[q],X[q],z)).x,V.y,-H);
// expand holes
for(P=0,C=O.length;P<C;P++)for(R=O[P],Q=K[P],q=0,Y=R.length;q<Y;q++)a((V=i(R[q],Q[q],z)).x,V.y,-H)}
// Back facing vertices
for(z=_,q=0;q<j;q++)V=M?i(N[q],$[q],z):N[q],A?(
// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );
d.copy(l.normals[0]).multiplyScalar(V.x),u.copy(l.binormals[0]).multiplyScalar(V.y),p.copy(h[0]).add(d).add(u),a(p.x,p.y,p.z)):a(V.x,V.y,0);
// Add stepped vertices...
// Including front facing vertices
var tt;for(tt=1;tt<=T;tt++)for(q=0;q<j;q++)V=M?i(N[q],$[q],z):N[q],A?(
// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );
d.copy(l.normals[tt]).multiplyScalar(V.x),u.copy(l.binormals[tt]).multiplyScalar(V.y),p.copy(h[tt]).add(d).add(u),a(p.x,p.y,p.z)):a(V.x,V.y,x/T*tt);
// Add bevel segments planes
//for ( b = 1; b <= bevelSegments; b ++ ) {
for(B=w-1;B>=0;B--){
// contract shape
for(G=B/w,H=b*Math.cos(G*Math.PI/2),z=_*Math.sin(G*Math.PI/2),q=0,Y=F.length;q<Y;q++)a((V=i(F[q],X[q],z)).x,V.y,x+H);
// expand holes
for(P=0,C=O.length;P<C;P++)for(R=O[P],Q=K[P],q=0,Y=R.length;q<Y;q++)V=i(R[q],Q[q],z),A?a(V.x,V.y+h[T-1].y,h[T-1].x+H):a(V.x,V.y,x+H)}/* Faces */
// Top and bottom faces
!
/////  Internal functions
function(){var t=m.length/3;if(M){var i=0,n=j*i;
// Bottom faces
for(q=0;q<W;q++)o((k=D[q])[2]+n,k[1]+n,k[0]+n);
// Top faces
for(n=j*(i=T+2*w),q=0;q<W;q++)o((k=D[q])[0]+n,k[1]+n,k[2]+n)}else{
// Bottom faces
for(q=0;q<W;q++)o((k=D[q])[2],k[1],k[0]);
// Top faces
for(q=0;q<W;q++)o((k=D[q])[0]+j*T,k[1]+j*T,k[2]+j*T)}I.addGroup(t,m.length/3-t,void 0!==e.material?e.material:0)}(),
// Sides faces
// Create faces for the z-sides of the shape
function(){var t=m.length/3,i=0;for(r(F,i),i+=F.length,P=0,C=O.length;P<C;P++)r(R=O[P],i),
//, true
i+=R.length;I.addGroup(t,m.length/3-t,void 0!==e.extrudeMaterial?e.extrudeMaterial:1)}(),e.arrays||(this.setIndex(g),this.addAttribute("position",new ga(m,3)),this.addAttribute("uv",new ga(e.arrays.uv,2)))},No.WorldUVGenerator={generateTopUV:function(t,e,i,n,r){var a=e[3*i],o=e[3*i+1],s=e[3*n],c=e[3*n+1],h=e[3*r],l=e[3*r+1];return[new Zn(a,o),new Zn(s,c),new Zn(h,l)]},generateSideWallUV:function(t,e,i,n,r,a){var o=e[3*i],s=e[3*i+1],c=e[3*i+2],h=e[3*n],l=e[3*n+1],u=e[3*n+2],d=e[3*r],p=e[3*r+1],f=e[3*r+2],m=e[3*a],g=e[3*a+1],v=e[3*a+2];return Math.abs(s-l)<.01?[new Zn(o,1-c),new Zn(h,1-u),new Zn(d,1-f),new Zn(m,1-v)]:[new Zn(s,1-c),new Zn(l,1-u),new Zn(p,1-f),new Zn(g,1-v)]}},(Do.prototype=Object.create(sa.prototype)).constructor=Do,(Fo.prototype=Object.create(Oo.prototype)).constructor=Fo,(Bo.prototype=Object.create(sa.prototype)).constructor=Bo,(zo.prototype=Object.create(ba.prototype)).constructor=zo,(Go.prototype=Object.create(sa.prototype)).constructor=Go,(Ho.prototype=Object.create(ba.prototype)).constructor=Ho,(Vo.prototype=Object.create(sa.prototype)).constructor=Vo,(ko.prototype=Object.create(ba.prototype)).constructor=ko,(jo.prototype=Object.create(sa.prototype)).constructor=jo,(Wo.prototype=Object.create(ba.prototype)).constructor=Wo,(Xo.prototype=Object.create(ba.prototype)).constructor=Xo,(qo.prototype=Object.create(sa.prototype)).constructor=qo,(Yo.prototype=Object.create(ba.prototype)).constructor=Yo,(Zo.prototype=Object.create(qo.prototype)).constructor=Zo,(Jo.prototype=Object.create(Yo.prototype)).constructor=Jo,(Qo.prototype=Object.create(sa.prototype)).constructor=Qo,(Ko.prototype=Object.create(ba.prototype)).constructor=Ko;var ff=Object.freeze({WireframeGeometry:mo,ParametricGeometry:go,ParametricBufferGeometry:vo,TetrahedronGeometry:bo,TetrahedronBufferGeometry:_o,OctahedronGeometry:wo,OctahedronBufferGeometry:Mo,IcosahedronGeometry:Eo,IcosahedronBufferGeometry:To,DodecahedronGeometry:So,DodecahedronBufferGeometry:Ao,PolyhedronGeometry:yo,PolyhedronBufferGeometry:xo,TubeGeometry:Lo,TubeBufferGeometry:Ro,TorusKnotGeometry:Po,TorusKnotBufferGeometry:Co,TorusGeometry:Io,TorusBufferGeometry:Uo,TextGeometry:Do,TextBufferGeometry:Fo,SphereGeometry:Bo,SphereBufferGeometry:zo,RingGeometry:Go,RingBufferGeometry:Ho,PlaneGeometry:Ma,PlaneBufferGeometry:Ea,LatheGeometry:Vo,LatheBufferGeometry:ko,ShapeGeometry:jo,ShapeBufferGeometry:Wo,ExtrudeGeometry:No,ExtrudeBufferGeometry:Oo,EdgesGeometry:Xo,ConeGeometry:Zo,ConeBufferGeometry:Jo,CylinderGeometry:qo,CylinderBufferGeometry:Yo,CircleGeometry:Qo,CircleBufferGeometry:Ko,BoxGeometry:_a,BoxBufferGeometry:wa});($o.prototype=Object.create(Vr.prototype)).constructor=$o,$o.prototype.isShadowMaterial=!0,(ts.prototype=Object.create(kr.prototype)).constructor=ts,ts.prototype.isRawShaderMaterial=!0,(es.prototype=Object.create(Vr.prototype)).constructor=es,es.prototype.isMeshStandardMaterial=!0,es.prototype.copy=function(t){return Vr.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},(is.prototype=Object.create(es.prototype)).constructor=is,is.prototype.isMeshPhysicalMaterial=!0,is.prototype.copy=function(t){return es.prototype.copy.call(this,t),this.defines={PHYSICAL:""},this.reflectivity=t.reflectivity,this.clearCoat=t.clearCoat,this.clearCoatRoughness=t.clearCoatRoughness,this},(ns.prototype=Object.create(Vr.prototype)).constructor=ns,ns.prototype.isMeshPhongMaterial=!0,ns.prototype.copy=function(t){return Vr.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},(rs.prototype=Object.create(ns.prototype)).constructor=rs,rs.prototype.isMeshToonMaterial=!0,rs.prototype.copy=function(t){return ns.prototype.copy.call(this,t),this.gradientMap=t.gradientMap,this},(as.prototype=Object.create(Vr.prototype)).constructor=as,as.prototype.isMeshNormalMaterial=!0,as.prototype.copy=function(t){return Vr.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},(os.prototype=Object.create(Vr.prototype)).constructor=os,os.prototype.isMeshLambertMaterial=!0,os.prototype.copy=function(t){return Vr.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},(ss.prototype=Object.create(ro.prototype)).constructor=ss,ss.prototype.isLineDashedMaterial=!0,ss.prototype.copy=function(t){return ro.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var mf=Object.freeze({ShadowMaterial:$o,SpriteMaterial:Ka,RawShaderMaterial:ts,ShaderMaterial:kr,PointsMaterial:co,MeshPhysicalMaterial:is,MeshStandardMaterial:es,MeshPhongMaterial:ns,MeshToonMaterial:rs,MeshNormalMaterial:as,MeshLambertMaterial:os,MeshDepthMaterial:jr,MeshDistanceMaterial:Wr,MeshBasicMaterial:Ta,LineDashedMaterial:ss,LineBasicMaterial:ro,Material:Vr}),gf={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(
// console.log( 'THREE.Cache', 'Adding key:', key );
this.files[t]=e)},get:function(t){if(!1!==this.enabled)
// console.log( 'THREE.Cache', 'Checking key:', key );
return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}},vf=new cs;Object.assign(hs.prototype,{load:function(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t);var r=this,a=gf.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;
// Check for data: URI
var o=t.match(/^data:(.*?)(;base64)?,(.*)$/);
// Safari can not handle Data URIs through XMLHttpRequest so process manually
if(o){var s=o[1],c=!!o[2],h=o[3];h=window.decodeURIComponent(h),c&&(h=window.atob(h));try{var l,u=(this.responseType||"").toLowerCase();switch(u){case"arraybuffer":case"blob":l=new ArrayBuffer(h.length);for(var d=new Uint8Array(l),p=0;p<h.length;p++)d[p]=h.charCodeAt(p);"blob"===u&&(l=new Blob([l],{type:s}));break;case"document":var f=new DOMParser;l=f.parseFromString(h,s);break;case"json":l=JSON.parse(h);break;default:// 'text' or other
l=h}
// Wait for next browser tick
window.setTimeout(function(){e&&e(l),r.manager.itemEnd(t)},0)}catch(e){
// Wait for next browser tick
window.setTimeout(function(){n&&n(e),r.manager.itemEnd(t),r.manager.itemError(t)},0)}}else{var m=new XMLHttpRequest;m.open("GET",t,!0),m.addEventListener("load",function(i){var a=i.target.response;gf.add(t,a),200===this.status?(e&&e(a),r.manager.itemEnd(t)):0===this.status?(
// Some browsers return HTTP Status 0 when using non-http protocol
// e.g. 'file://' or 'data://'. Handle as success.
console.warn("THREE.FileLoader: HTTP Status 0 received."),e&&e(a),r.manager.itemEnd(t)):(n&&n(i),r.manager.itemEnd(t),r.manager.itemError(t))},!1),void 0!==i&&m.addEventListener("progress",function(t){i(t)},!1),m.addEventListener("error",function(e){n&&n(e),r.manager.itemEnd(t),r.manager.itemError(t)},!1),void 0!==this.responseType&&(m.responseType=this.responseType),void 0!==this.withCredentials&&(m.withCredentials=this.withCredentials),m.overrideMimeType&&m.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(var g in this.requestHeader)m.setRequestHeader(g,this.requestHeader[g]);m.send(null)}return r.manager.itemStart(t),m},setPath:function(t){return this.path=t,this},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}}),Object.assign(ls.prototype,{load:function(t,e,i,n){function r(r){c.load(t[r],function(t){var i=a._parser(t,!0);o[r]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},6===(h+=1)&&(1===i.mipmapCount&&(s.minFilter=ip),s.format=i.format,s.needsUpdate=!0,e&&e(s))},i,n)}var a=this,o=[],s=new po;s.image=o;var c=new hs(this.manager);if(c.setPath(this.path),c.setResponseType("arraybuffer"),Array.isArray(t))for(var h=0,l=0,u=t.length;l<u;++l)r(l);else
// compressed cubemap texture stored in a single DDS file
c.load(t,function(t){var i=a._parser(t,!0);if(i.isCubemap)for(var n=i.mipmaps.length/i.mipmapCount,r=0;r<n;r++){o[r]={mipmaps:[]};for(var c=0;c<i.mipmapCount;c++)o[r].mipmaps.push(i.mipmaps[r*i.mipmapCount+c]),o[r].format=i.format,o[r].width=i.width,o[r].height=i.height}else s.image.width=i.width,s.image.height=i.height,s.mipmaps=i.mipmaps;1===i.mipmapCount&&(s.minFilter=ip),s.format=i.format,s.needsUpdate=!0,e&&e(s)},i,n);return s},setPath:function(t){return this.path=t,this}}),Object.assign(us.prototype,{load:function(t,e,i,n){var r=this,a=new nr,o=new hs(this.manager);return o.setResponseType("arraybuffer"),o.load(t,function(t){var i=r._parser(t);i&&(void 0!==i.image?a.image=i.image:void 0!==i.data&&(a.image.width=i.width,a.image.height=i.height,a.image.data=i.data),a.wrapS=void 0!==i.wrapS?i.wrapS:Qd,a.wrapT=void 0!==i.wrapT?i.wrapT:Qd,a.magFilter=void 0!==i.magFilter?i.magFilter:ip,a.minFilter=void 0!==i.minFilter?i.minFilter:rp,a.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.format&&(a.format=i.format),void 0!==i.type&&(a.type=i.type),void 0!==i.mipmaps&&(a.mipmaps=i.mipmaps),1===i.mipmapCount&&(a.minFilter=ip),a.needsUpdate=!0,e&&e(a,i))},i,n),a}}),Object.assign(ds.prototype,{crossOrigin:"Anonymous",load:function(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t);var r=this,a=gf.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;var o=document.createElementNS("http://www.w3.org/1999/xhtml","img");/*
		image.addEventListener( 'progress', function ( event ) {

			if ( onProgress ) onProgress( event );

		}, false );
		*/
return o.addEventListener("load",function(){gf.add(t,this),e&&e(this),r.manager.itemEnd(t)},!1),o.addEventListener("error",function(e){n&&n(e),r.manager.itemEnd(t),r.manager.itemError(t)},!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(t),o.src=t,o},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(ps.prototype,{crossOrigin:"Anonymous",load:function(t,e,i,n){function r(i){o.load(t[i],function(t){a.images[i]=t,6===++s&&(a.needsUpdate=!0,e&&e(a))},void 0,n)}var a=new rr,o=new ds(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);for(var s=0,c=0;c<t.length;++c)r(c);return a},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(fs.prototype,{crossOrigin:"Anonymous",load:function(t,e,i,n){var r=new ds(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);var a=new Jn;return a.image=r.load(t,function(){
// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.
var i=t.search(/\.(jpg|jpeg)$/)>0||0===t.search(/^data\:image\/jpeg/);a.format=i?yp:xp,a.needsUpdate=!0,void 0!==e&&e(a)},i,n),a},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),ms.prototype=Object.assign(Object.create(ea.prototype),{constructor:ms,isLight:!0,copy:function(t){return ea.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){var e=ea.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),gs.prototype=Object.assign(Object.create(ms.prototype),{constructor:gs,isHemisphereLight:!0,copy:function(t){return ms.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(vs.prototype,{copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t={};return 0!==this.bias&&(t.bias=this.bias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),ys.prototype=Object.assign(Object.create(vs.prototype),{constructor:ys,isSpotLightShadow:!0,update:function(t){var e=this.camera,i=2*Yp.RAD2DEG*t.angle,n=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;i===e.fov&&n===e.aspect&&r===e.far||(e.fov=i,e.aspect=n,e.far=r,e.updateProjectionMatrix())}}),xs.prototype=Object.assign(Object.create(ms.prototype),{constructor:xs,isSpotLight:!0,copy:function(t){return ms.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),bs.prototype=Object.assign(Object.create(ms.prototype),{constructor:bs,isPointLight:!0,copy:function(t){return ms.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),_s.prototype=Object.assign(Object.create(vs.prototype),{constructor:_s}),ws.prototype=Object.assign(Object.create(ms.prototype),{constructor:ws,isDirectionalLight:!0,copy:function(t){return ms.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Ms.prototype=Object.assign(Object.create(ms.prototype),{constructor:Ms,isAmbientLight:!0}),
// TODO (abelnation): RectAreaLight update when light shape is changed
Es.prototype=Object.assign(Object.create(ms.prototype),{constructor:Es,isRectAreaLight:!0,copy:function(t){return ms.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){var e=ms.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});/**
 * @author tschw
 * @author Ben Houston / http://clara.io/
 * @author David Sarno / http://lighthaus.us/
 */
var yf={
// same as Array.prototype.slice, but also works on typed arrays
arraySlice:function(t,e,i){return yf.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==i?i:t.length)):t.slice(e,i)},
// converts an array to a specific type
convertArray:function(t,e,i){// let 'undefined' and 'null' pass
return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},
// returns an array by which times and values can be sorted
getKeyframeOrder:function(t){for(var e=t.length,i=new Array(e),n=0;n!==e;++n)i[n]=n;return i.sort(function(e,i){return t[e]-t[i]}),i},
// uses the array previously returned by 'getKeyframeOrder' to sort data
sortedArray:function(t,e,i){for(var n=t.length,r=new t.constructor(n),a=0,o=0;o!==n;++a)for(var s=i[a]*e,c=0;c!==e;++c)r[o++]=t[s+c];return r},
// function for parsing AOS keyframe formats
flattenJSON:function(t,e,i,n){for(var r=1,a=t[0];void 0!==a&&void 0===a[n];)a=t[r++];if(void 0!==a){// no data
var o=a[n];if(void 0!==o)// no data
if(Array.isArray(o))do{void 0!==(o=a[n])&&(e.push(a.time),i.push.apply(i,o)),a=t[r++]}while(void 0!==a);else if(void 0!==o.toArray)
// ...assume THREE.Math-ish
do{void 0!==(o=a[n])&&(e.push(a.time),o.toArray(i,i.length)),a=t[r++]}while(void 0!==a);else
// otherwise push as-is
do{void 0!==(o=a[n])&&(e.push(a.time),i.push(o)),a=t[r++]}while(void 0!==a)}}};Object.assign(Ts.prototype,{evaluate:function(t){var e=this.parameterPositions,i=this._cachedIndex,n=e[i],r=e[i-1];t:{e:{var a;i:{
//- See http://jsperf.com/comparison-to-undefined/3
//- slower code:
//-
//- 				if ( t >= t1 || t1 === undefined ) {
n:if(!(t<n)){for(s=i+2;;){if(void 0===n){if(t<r)break n;
// after end
return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,t,r)}if(i===s)break;if(// this loop
r=n,n=e[++i],t<n)
// we have arrived at the sought interval
break e}
// prepare binary search on the right side of the index
a=e.length;break i}
//- slower code:
//-					if ( t < t0 || t0 === undefined ) {
{if(t>=r)
// the interval is valid
break t;
// looping?
var o=e[1];t<o&&(i=2,// + 1, using the scan for the details
r=o);
// linear reverse scan
for(var s=i-2;;){if(void 0===r)
// before start
return this._cachedIndex=0,this.beforeStart_(0,t,n);if(i===s)break;if(// this loop
n=r,r=e[--i-1],t>=r)
// we have arrived at the sought interval
break e}
// prepare binary search on the left side of the index
a=i,i=0}}// linear scan
// binary search
for(;i<a;){var c=i+a>>>1;t<e[c]?a=c:i=c+1}
// check boundary cases, again
if(n=e[i],void 0===(r=e[i-1]))return this._cachedIndex=0,this.beforeStart_(0,t,n);if(void 0===n)return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,r,t)}// seek
this._cachedIndex=i,this.intervalChanged_(i,r,n)}// validate_interval
return this.interpolate_(i,r,t,n)},settings:null,// optional, subclass-specific settings structure
// Note: The indirection allows central control of many interpolants.
// --- Protected interface
DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=t*n,a=0;a!==n;++a)e[a]=i[r+a];return e},
// Template methods for derived classes:
interpolate_:function(t,e,i,n){throw new Error("call to abstract method")},intervalChanged_:function(t,e,i){}}),
//!\ DECLARE ALIAS AFTER assign prototype !
Object.assign(Ts.prototype,{
//( 0, t, t0 ), returns this.resultBuffer
beforeStart_:Ts.prototype.copySampleValue_,
//( N-1, tN-1, t ), returns this.resultBuffer
afterEnd_:Ts.prototype.copySampleValue_}),Ss.prototype=Object.assign(Object.create(Ts.prototype),{constructor:Ss,DefaultSettings_:{endingStart:Op,endingEnd:Op},intervalChanged_:function(t,e,i){var n=this.parameterPositions,r=t-2,a=t+1,o=n[r],s=n[a];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:
// f'(t0) = 0
r=t,o=2*e-i;break;case 2402:o=e+n[
// use the other end of the curve
r=n.length-2]-n[r+1];break;default:// ZeroCurvatureEnding
// f''(t0) = 0 a.k.a. Natural Spline
r=t,o=i}if(void 0===s)switch(this.getSettings_().endingEnd){case 2401:
// f'(tN) = 0
a=t,s=2*i-e;break;case 2402:
// use the other end of the curve
a=1,s=i+n[1]-n[0];break;default:// ZeroCurvatureEnding
// f''(tN) = 0, a.k.a. Natural Spline
a=t-1,s=e}var c=.5*(i-e),h=this.valueSize;this._weightPrev=c/(e-o),this._weightNext=c/(s-i),this._offsetPrev=r*h,this._offsetNext=a*h},interpolate_:function(t,e,i,n){
// combine data linearly
for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=s-o,h=this._offsetPrev,l=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(i-e)/(n-e),f=p*p,m=f*p,g=-u*m+2*u*f-u*p,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*p+1,y=(-1-d)*m+(1.5+d)*f+.5*p,x=d*m-d*f,b=0;b!==o;++b)r[b]=g*a[h+b]+v*a[c+b]+y*a[s+b]+x*a[l+b];return r}}),As.prototype=Object.assign(Object.create(Ts.prototype),{constructor:As,interpolate_:function(t,e,i,n){for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=s-o,h=(i-e)/(n-e),l=1-h,u=0;u!==o;++u)r[u]=a[c+u]*l+a[s+u]*h;return r}}),Ls.prototype=Object.assign(Object.create(Ts.prototype),{constructor:Ls,interpolate_:function(t,e,i,n){return this.copySampleValue_(t-1)}});var xf;xf={TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(t){return new Ls(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new As(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new Ss(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0!==e)this.createInterpolant=e;else{var i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){
// fall back to default, unless the default itself is messed up
if(t===this.DefaultInterpolation)throw new Error(i);this.setInterpolation(this.DefaultInterpolation)}console.warn("THREE.KeyframeTrackPrototype:",i)}},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},
// move all keyframes either forwards or backwards in time
shift:function(t){if(0!==t)for(var e=this.times,i=0,n=e.length;i!==n;++i)e[i]+=t;return this},
// scale all keyframe times by a factor (useful for frame <-> seconds conversions)
scale:function(t){if(1!==t)for(var e=this.times,i=0,n=e.length;i!==n;++i)e[i]*=t;return this},
// removes keyframes before and after animation without changing any values within the range [startTime, endTime].
// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values
trim:function(t,e){for(var i=this.times,n=i.length,r=0,a=n-1;r!==n&&i[r]<t;)++r;for(;-1!==a&&i[a]>e;)--a;// inclusive -> exclusive bound
if(++a,0!==r||a!==n){
// empty tracks are forbidden, so keep at least one keyframe
r>=a&&(a=Math.max(a,1),r=a-1);var o=this.getValueSize();this.times=yf.arraySlice(i,r,a),this.values=yf.arraySlice(this.values,r*o,a*o)}return this},
// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable
validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrackPrototype: Invalid value size in track.",this),t=!1);var i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrackPrototype: Track is empty.",this),t=!1);for(var a=null,o=0;o!==r;o++){var s=i[o];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrackPrototype: Time is not a valid number.",this,o,s),t=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrackPrototype: Out of order keys.",this,o,s,a),t=!1;break}a=s}if(void 0!==n&&yf.isTypedArray(n))for(var o=0,c=n.length;o!==c;++o){var h=n[o];if(isNaN(h)){console.error("THREE.KeyframeTrackPrototype: Value is not a valid number.",this,o,h),t=!1;break}}return t},
// removes equivalent sequential keys as common in morph target sequences
// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)
optimize:function(){for(var t=this.times,e=this.values,i=this.getValueSize(),n=2302===this.getInterpolation(),r=1,a=t.length-1,o=1;o<a;++o){var s=!1,c=t[o];
// remove adjacent keyframes scheduled at the same time
if(c!==t[o+1]&&(1!==o||c!==c[0]))if(n)s=!0;else for(var h=o*i,l=h-i,u=h+i,d=0;d!==i;++d){var p=e[h+d];if(p!==e[l+d]||p!==e[u+d]){s=!0;break}}
// in-place compaction
if(s){if(o!==r){t[r]=t[o];for(var f=o*i,m=r*i,d=0;d!==i;++d)e[m+d]=e[f+d]}++r}}
// flush last keyframe (compaction looks ahead)
if(a>0){t[r]=t[a];for(var f=a*i,m=r*i,d=0;d!==i;++d)e[m+d]=e[f+d];++r}return r!==t.length&&(this.times=yf.arraySlice(t,0,r),this.values=yf.arraySlice(e,0,r*i)),this}},Ps.prototype=Object.assign(Object.create(xf),{constructor:Ps,ValueTypeName:"vector"}),Cs.prototype=Object.assign(Object.create(Ts.prototype),{constructor:Cs,interpolate_:function(t,e,i,n){for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=(i-e)/(n-e),h=s+o;s!==h;s+=4)tr.slerpFlat(r,0,a,s-o,a,s,c);return r}}),Is.prototype=Object.assign(Object.create(xf),{constructor:Is,ValueTypeName:"quaternion",
// ValueBufferType is inherited
DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(t){return new Cs(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),Us.prototype=Object.assign(Object.create(xf),{constructor:Us,ValueTypeName:"number"}),Ns.prototype=Object.assign(Object.create(xf),{constructor:Ns,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Os.prototype=Object.assign(Object.create(xf),{constructor:Os,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Ds.prototype=Object.assign(Object.create(xf),{constructor:Ds,ValueTypeName:"color"}),Fs.prototype=xf,xf.constructor=Fs,
// Static methods:
Object.assign(Fs,{
// Serialization (in static context, because of constructor invocation
// and automatic invocation of .toJSON):
parse:function(t){if(void 0===t.type)throw new Error("track type undefined, can not parse");var e=Fs._getTrackTypeForValueTypeName(t.type);if(void 0===t.times){var i=[],n=[];yf.flattenJSON(t.keys,i,n,"value"),t.times=i,t.values=n}
// derived classes can define a static parse method
// derived classes can define a static parse method
return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)},toJSON:function(t){var e,i=t.constructor;
// derived classes can define a static toJSON method
if(void 0!==i.toJSON)e=i.toJSON(t);else{
// by default, we assume the data can be serialized as-is
e={name:t.name,times:yf.convertArray(t.times,Array),values:yf.convertArray(t.values,Array)};var n=t.getInterpolation();n!==t.DefaultInterpolation&&(e.interpolation=n)}// mandatory
return e.type=t.ValueTypeName,e},_getTrackTypeForValueTypeName:function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Us;case"vector":case"vector2":case"vector3":case"vector4":return Ps;case"color":return Ds;case"quaternion":return Is;case"bool":case"boolean":return Os;case"string":return Ns}throw new Error("Unsupported typeName: "+t)}}),Object.assign(Bs,{parse:function(t){for(var e=[],i=t.tracks,n=1/(t.fps||1),r=0,a=i.length;r!==a;++r)e.push(Fs.parse(i[r]).scale(n));return new Bs(t.name,t.duration,e)},toJSON:function(t){for(var e=[],i=t.tracks,n={name:t.name,duration:t.duration,tracks:e},r=0,a=i.length;r!==a;++r)e.push(Fs.toJSON(i[r]));return n},CreateFromMorphTargetSequence:function(t,e,i,n){for(var r=e.length,a=[],o=0;o<r;o++){var s=[],c=[];s.push((o+r-1)%r,o,(o+1)%r),c.push(0,1,0);var h=yf.getKeyframeOrder(s);s=yf.sortedArray(s,1,h),c=yf.sortedArray(c,1,h),
// if there is a key at the first frame, duplicate it as the
// last frame as well for perfect loop.
n||0!==s[0]||(s.push(r),c.push(c[0])),a.push(new Us(".morphTargetInfluences["+e[o].name+"]",s,c).scale(1/i))}return new Bs(t,-1,a)},findByName:function(t,e){var i=t;if(!Array.isArray(t)){var n=t;i=n.geometry&&n.geometry.animations||n.animations}for(var r=0;r<i.length;r++)if(i[r].name===e)return i[r];return null},CreateClipsFromMorphTargetSequences:function(t,e,i){
// sort morph target names into animation groups based
// patterns like Walk_001, Walk_002, Run_001, Run_002
for(var n={},r=/^([\w-]*?)([\d]+)$/,a=0,o=t.length;a<o;a++){var s=t[a],c=s.name.match(r);if(c&&c.length>1){var h=n[u=c[1]];h||(n[u]=h=[]),h.push(s)}}var l=[];for(var u in n)l.push(Bs.CreateFromMorphTargetSequence(u,n[u],e,i));return l},
// parse the animation.hierarchy format
parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var i=function(t,e,i,n,r){
// only return track if there are actually keys.
if(0!==i.length){var a=[],o=[];yf.flattenJSON(i,a,o,n),
// empty keys are filtered out, so check again
0!==a.length&&r.push(new t(e,a,o))}},n=[],r=t.name||"default",a=t.length||-1,o=t.fps||30,s=t.hierarchy||[],c=0;c<s.length;c++){var h=s[c].keys;
// skip empty tracks
if(h&&0!==h.length)
// process morph targets
if(h[0].morphTargets){for(var l={},u=0;u<h.length;u++)if(h[u].morphTargets)for(m=0;m<h[u].morphTargets.length;m++)l[h[u].morphTargets[m]]=-1;
// create a track for each morph target with all zero
// morphTargetInfluences except for the keys in which
// the morphTarget is named.
for(var d in l){for(var p=[],f=[],m=0;m!==h[u].morphTargets.length;++m){var g=h[u];p.push(g.time),f.push(g.morphTarget===d?1:0)}n.push(new Us(".morphTargetInfluence["+d+"]",p,f))}a=l.length*(o||1)}else{
// ...assume skeletal animation
var v=".bones["+e[c].name+"]";i(Ps,v+".position",h,"pos",n),i(Is,v+".quaternion",h,"rot",n),i(Ps,v+".scale",h,"scl",n)}}if(0===n.length)return null;return new Bs(r,a,n)}}),Object.assign(Bs.prototype,{resetDuration:function(){for(var t=0,e=0,i=this.tracks.length;e!==i;++e){var n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}this.duration=t},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}}),Object.assign(zs.prototype,{load:function(t,e,i,n){var r=this;new hs(r.manager).load(t,function(t){e(r.parse(JSON.parse(t)))},i,n)},setTextures:function(t){this.textures=t},parse:function(t){function e(t){return void 0===i[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),i[t]}var i=this.textures,n=new mf[t.type];if(void 0!==t.uuid&&(n.uuid=t.uuid),void 0!==t.name&&(n.name=t.name),void 0!==t.color&&n.color.setHex(t.color),void 0!==t.roughness&&(n.roughness=t.roughness),void 0!==t.metalness&&(n.metalness=t.metalness),void 0!==t.emissive&&n.emissive.setHex(t.emissive),void 0!==t.specular&&n.specular.setHex(t.specular),void 0!==t.shininess&&(n.shininess=t.shininess),void 0!==t.clearCoat&&(n.clearCoat=t.clearCoat),void 0!==t.clearCoatRoughness&&(n.clearCoatRoughness=t.clearCoatRoughness),void 0!==t.uniforms&&(n.uniforms=t.uniforms),void 0!==t.vertexShader&&(n.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(n.fragmentShader=t.fragmentShader),void 0!==t.vertexColors&&(n.vertexColors=t.vertexColors),void 0!==t.fog&&(n.fog=t.fog),void 0!==t.flatShading&&(n.flatShading=t.flatShading),void 0!==t.blending&&(n.blending=t.blending),void 0!==t.side&&(n.side=t.side),void 0!==t.opacity&&(n.opacity=t.opacity),void 0!==t.transparent&&(n.transparent=t.transparent),void 0!==t.alphaTest&&(n.alphaTest=t.alphaTest),void 0!==t.depthTest&&(n.depthTest=t.depthTest),void 0!==t.depthWrite&&(n.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(n.colorWrite=t.colorWrite),void 0!==t.wireframe&&(n.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(n.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(n.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(n.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.skinning&&(n.skinning=t.skinning),void 0!==t.morphTargets&&(n.morphTargets=t.morphTargets),void 0!==t.dithering&&(n.dithering=t.dithering),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.userData&&(n.userData=t.userData),
// Deprecated
void 0!==t.shading&&(n.flatShading=1===t.shading),// THREE.FlatShading
// for PointsMaterial
void 0!==t.size&&(n.size=t.size),void 0!==t.sizeAttenuation&&(n.sizeAttenuation=t.sizeAttenuation),
// maps
void 0!==t.map&&(n.map=e(t.map)),void 0!==t.alphaMap&&(n.alphaMap=e(t.alphaMap),n.transparent=!0),void 0!==t.bumpMap&&(n.bumpMap=e(t.bumpMap)),void 0!==t.bumpScale&&(n.bumpScale=t.bumpScale),void 0!==t.normalMap&&(n.normalMap=e(t.normalMap)),void 0!==t.normalScale){var r=t.normalScale;!1===Array.isArray(r)&&(
// Blender exporter used to export a scalar. See #7459
r=[r,r]),n.normalScale=(new Zn).fromArray(r)}return void 0!==t.displacementMap&&(n.displacementMap=e(t.displacementMap)),void 0!==t.displacementScale&&(n.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(n.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(n.roughnessMap=e(t.roughnessMap)),void 0!==t.metalnessMap&&(n.metalnessMap=e(t.metalnessMap)),void 0!==t.emissiveMap&&(n.emissiveMap=e(t.emissiveMap)),void 0!==t.emissiveIntensity&&(n.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(n.specularMap=e(t.specularMap)),void 0!==t.envMap&&(n.envMap=e(t.envMap)),void 0!==t.reflectivity&&(n.reflectivity=t.reflectivity),void 0!==t.lightMap&&(n.lightMap=e(t.lightMap)),void 0!==t.lightMapIntensity&&(n.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(n.aoMap=e(t.aoMap)),void 0!==t.aoMapIntensity&&(n.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(n.gradientMap=e(t.gradientMap)),n}}),Object.assign(Gs.prototype,{load:function(t,e,i,n){var r=this;new hs(r.manager).load(t,function(t){e(r.parse(JSON.parse(t)))},i,n)},parse:function(t){var e=new ba,i=t.data.index;if(void 0!==i){o=new bf[i.type](i.array);e.setIndex(new ca(o,1))}var n=t.data.attributes;for(var r in n){var a=n[r],o=new bf[a.type](a.array);e.addAttribute(r,new ca(o,a.itemSize,a.normalized))}var s=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==s)for(var c=0,h=s.length;c!==h;++c){var l=s[c];e.addGroup(l.start,l.count,l.materialIndex)}var u=t.data.boundingSphere;if(void 0!==u){var d=new er;void 0!==u.center&&d.fromArray(u.center),e.boundingSphere=new qr(d,u.radius)}return e}});var bf={Int8Array:Int8Array,Uint8Array:Uint8Array,
// Workaround for IE11 pre KB2929437. See #11440
Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};Hs.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=this.handlers,i=0,n=e.length;i<n;i+=2){var r=e[i],a=e[i+1];if(r.test(t))return a}return null}},Object.assign(Hs.prototype,{crossOrigin:void 0,extractUrlBase:function(t){var e=t.split("/");return 1===e.length?"./":(e.pop(),e.join("/")+"/")},initMaterials:function(t,e,i){for(var n=[],r=0;r<t.length;++r)n[r]=this.createMaterial(t[r],e,i);return n},createMaterial:function(){var t={NoBlending:ad,NormalBlending:od,AdditiveBlending:sd,SubtractiveBlending:cd,MultiplyBlending:hd,CustomBlending:ld},e=new Fr,i=new fs,n=new zs;return function(r,a,o){function s(t,e,n,r,s){var h,l=a+t,u=Hs.Handlers.get(l);null!==u?h=u.load(l):(i.setCrossOrigin(o),h=i.load(l)),void 0!==e&&(h.repeat.fromArray(e),1!==e[0]&&(h.wrapS=Jd),1!==e[1]&&(h.wrapT=Jd)),void 0!==n&&h.offset.fromArray(n),void 0!==r&&("repeat"===r[0]&&(h.wrapS=Jd),"mirror"===r[0]&&(h.wrapS=Kd),"repeat"===r[1]&&(h.wrapT=Jd),"mirror"===r[1]&&(h.wrapT=Kd)),void 0!==s&&(h.anisotropy=s);var d=Yp.generateUUID();return c[d]=h,d}
// convert from old material format
var c={},h={uuid:Yp.generateUUID(),type:"MeshLambertMaterial"};for(var l in r){var u=r[l];switch(l){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":h.name=u;break;case"blending":h.blending=t[u];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",l,"is no longer supported.");break;case"colorDiffuse":h.color=e.fromArray(u).getHex();break;case"colorSpecular":h.specular=e.fromArray(u).getHex();break;case"colorEmissive":h.emissive=e.fromArray(u).getHex();break;case"specularCoef":h.shininess=u;break;case"shading":"basic"===u.toLowerCase()&&(h.type="MeshBasicMaterial"),"phong"===u.toLowerCase()&&(h.type="MeshPhongMaterial"),"standard"===u.toLowerCase()&&(h.type="MeshStandardMaterial");break;case"mapDiffuse":h.map=s(u,r.mapDiffuseRepeat,r.mapDiffuseOffset,r.mapDiffuseWrap,r.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapEmissive":h.emissiveMap=s(u,r.mapEmissiveRepeat,r.mapEmissiveOffset,r.mapEmissiveWrap,r.mapEmissiveAnisotropy);break;case"mapEmissiveRepeat":case"mapEmissiveOffset":case"mapEmissiveWrap":case"mapEmissiveAnisotropy":break;case"mapLight":h.lightMap=s(u,r.mapLightRepeat,r.mapLightOffset,r.mapLightWrap,r.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":h.aoMap=s(u,r.mapAORepeat,r.mapAOOffset,r.mapAOWrap,r.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":h.bumpMap=s(u,r.mapBumpRepeat,r.mapBumpOffset,r.mapBumpWrap,r.mapBumpAnisotropy);break;case"mapBumpScale":h.bumpScale=u;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":h.normalMap=s(u,r.mapNormalRepeat,r.mapNormalOffset,r.mapNormalWrap,r.mapNormalAnisotropy);break;case"mapNormalFactor":h.normalScale=[u,u];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":h.specularMap=s(u,r.mapSpecularRepeat,r.mapSpecularOffset,r.mapSpecularWrap,r.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapMetalness":h.metalnessMap=s(u,r.mapMetalnessRepeat,r.mapMetalnessOffset,r.mapMetalnessWrap,r.mapMetalnessAnisotropy);break;case"mapMetalnessRepeat":case"mapMetalnessOffset":case"mapMetalnessWrap":case"mapMetalnessAnisotropy":break;case"mapRoughness":h.roughnessMap=s(u,r.mapRoughnessRepeat,r.mapRoughnessOffset,r.mapRoughnessWrap,r.mapRoughnessAnisotropy);break;case"mapRoughnessRepeat":case"mapRoughnessOffset":case"mapRoughnessWrap":case"mapRoughnessAnisotropy":break;case"mapAlpha":h.alphaMap=s(u,r.mapAlphaRepeat,r.mapAlphaOffset,r.mapAlphaWrap,r.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":h.side=td;break;case"doubleSided":h.side=ed;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),h.opacity=u;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":h[l]=u;break;case"vertexColors":!0===u&&(h.vertexColors=rd),"face"===u&&(h.vertexColors=nd);break;default:console.error("THREE.Loader.createMaterial: Unsupported",l,u)}}return"MeshBasicMaterial"===h.type&&delete h.emissive,"MeshPhongMaterial"!==h.type&&delete h.specular,h.opacity<1&&(h.transparent=!0),n.setTextures(c),n.parse(h)}}()}),Object.assign(Vs.prototype,{load:function(t,e,i,n){var r=this,a=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:Hs.prototype.extractUrlBase(t),o=new hs(this.manager);o.setWithCredentials(this.withCredentials),o.load(t,function(i){var n=JSON.parse(i),o=n.metadata;if(void 0!==o){var s=o.type;if(void 0!==s){if("object"===s.toLowerCase())return void console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.ObjectLoader instead.");if("scene"===s.toLowerCase())return void console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.SceneLoader instead.")}}var c=r.parse(n,a);e(c.geometry,c.materials)},i,n)},setTexturePath:function(t){this.texturePath=t},parse:function(){return function(t,e){void 0!==t.data&&(
// Geometry 4.0 spec
t=t.data),void 0!==t.scale?t.scale=1/t.scale:t.scale=1;var i=new sa;if(function(t,e){function i(t,e){return t&1<<e}var n,r,a,o,s,c,h,l,u,d,p,f,m,g,v,y,x,b,_,w,M,E,T,S,A,L=t.faces,R=t.vertices,P=t.normals,C=t.colors,I=t.scale,U=0;if(void 0!==t.uvs){
// disregard empty arrays
for(n=0;n<t.uvs.length;n++)t.uvs[n].length&&U++;for(n=0;n<U;n++)e.faceVertexUvs[n]=[]}for(o=0,s=R.length;o<s;)(b=new er).x=R[o++]*I,b.y=R[o++]*I,b.z=R[o++]*I,e.vertices.push(b);for(o=0,s=L.length;o<s;)
// console.log("type", type, "bits", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);
if(d=L[o++],p=i(d,0),f=i(d,1),m=i(d,3),g=i(d,4),v=i(d,5),y=i(d,6),x=i(d,7),p){if(w=new aa,w.a=L[o],w.b=L[o+1],w.c=L[o+3],M=new aa,M.a=L[o+1],M.b=L[o+2],M.c=L[o+3],o+=4,f&&(u=L[o++],w.materialIndex=u,M.materialIndex=u),
// to get face <=> uv index correspondence
a=e.faces.length,m)for(n=0;n<U;n++)for(S=t.uvs[n],e.faceVertexUvs[n][a]=[],e.faceVertexUvs[n][a+1]=[],r=0;r<4;r++)A=new Zn(S[2*(l=L[o++])],S[2*l+1]),2!==r&&e.faceVertexUvs[n][a].push(A),0!==r&&e.faceVertexUvs[n][a+1].push(A);if(g&&(h=3*L[o++],w.normal.set(P[h++],P[h++],P[h]),M.normal.copy(w.normal)),v)for(n=0;n<4;n++)h=3*L[o++],T=new er(P[h++],P[h++],P[h]),2!==n&&w.vertexNormals.push(T),0!==n&&M.vertexNormals.push(T);if(y&&(E=C[c=L[o++]],w.color.setHex(E),M.color.setHex(E)),x)for(n=0;n<4;n++)E=C[c=L[o++]],2!==n&&w.vertexColors.push(new Fr(E)),0!==n&&M.vertexColors.push(new Fr(E));e.faces.push(w),e.faces.push(M)}else{if(_=new aa,_.a=L[o++],_.b=L[o++],_.c=L[o++],f&&(u=L[o++],_.materialIndex=u),
// to get face <=> uv index correspondence
a=e.faces.length,m)for(n=0;n<U;n++)for(S=t.uvs[n],e.faceVertexUvs[n][a]=[],r=0;r<3;r++)A=new Zn(S[2*(l=L[o++])],S[2*l+1]),e.faceVertexUvs[n][a].push(A);if(g&&(h=3*L[o++],_.normal.set(P[h++],P[h++],P[h])),v)for(n=0;n<3;n++)h=3*L[o++],T=new er(P[h++],P[h++],P[h]),_.vertexNormals.push(T);if(y&&(c=L[o++],_.color.setHex(C[c])),x)for(n=0;n<3;n++)c=L[o++],_.vertexColors.push(new Fr(C[c]));e.faces.push(_)}}(t,i),function(t,e){var i=void 0!==t.influencesPerVertex?t.influencesPerVertex:2;if(t.skinWeights)for(var n=0,r=t.skinWeights.length;n<r;n+=i){var a=t.skinWeights[n],o=i>1?t.skinWeights[n+1]:0,s=i>2?t.skinWeights[n+2]:0,c=i>3?t.skinWeights[n+3]:0;e.skinWeights.push(new Qn(a,o,s,c))}if(t.skinIndices)for(var n=0,r=t.skinIndices.length;n<r;n+=i){var h=t.skinIndices[n],l=i>1?t.skinIndices[n+1]:0,u=i>2?t.skinIndices[n+2]:0,d=i>3?t.skinIndices[n+3]:0;e.skinIndices.push(new Qn(h,l,u,d))}e.bones=t.bones,e.bones&&e.bones.length>0&&(e.skinWeights.length!==e.skinIndices.length||e.skinIndices.length!==e.vertices.length)&&console.warn("When skinning, number of vertices ("+e.vertices.length+"), skinIndices ("+e.skinIndices.length+"), and skinWeights ("+e.skinWeights.length+") should match.")}(t,i),function(t,e){var i=t.scale;if(void 0!==t.morphTargets)for(var n=0,r=t.morphTargets.length;n<r;n++){e.morphTargets[n]={},e.morphTargets[n].name=t.morphTargets[n].name,e.morphTargets[n].vertices=[];for(var a=e.morphTargets[n].vertices,o=t.morphTargets[n].vertices,s=0,c=o.length;s<c;s+=3){var h=new er;h.x=o[s]*i,h.y=o[s+1]*i,h.z=o[s+2]*i,a.push(h)}}if(void 0!==t.morphColors&&t.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');for(var l=e.faces,u=t.morphColors[0].colors,n=0,r=l.length;n<r;n++)l[n].color.fromArray(u,3*n)}}(t,i),function(t,e){var i=[],n=[];void 0!==t.animation&&n.push(t.animation),void 0!==t.animations&&(t.animations.length?n=n.concat(t.animations):n.push(t.animations));for(var r=0;r<n.length;r++){var a=Bs.parseAnimation(n[r],e.bones);a&&i.push(a)}
// parse implicit morph animations
if(e.morphTargets){
// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.
var o=Bs.CreateClipsFromMorphTargetSequences(e.morphTargets,10);i=i.concat(o)}i.length>0&&(e.animations=i)}(t,i),i.computeFaceNormals(),i.computeBoundingSphere(),void 0===t.materials||0===t.materials.length)return{geometry:i};return{geometry:i,materials:Hs.prototype.initMaterials(t.materials,e,this.crossOrigin)}}}()}),Object.assign(ks.prototype,{load:function(t,e,i,n){""===this.texturePath&&(this.texturePath=t.substring(0,t.lastIndexOf("/")+1));var r=this;new hs(r.manager).load(t,function(i){var a=null;try{a=JSON.parse(i)}catch(e){return void 0!==n&&n(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}var o=a.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?r.parse(a,e):console.error("THREE.ObjectLoader: Can't load "+t+". Use THREE.JSONLoader instead.")},i,n)},setTexturePath:function(t){this.texturePath=t},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t,e){var i=this.parseGeometries(t.geometries),n=this.parseImages(t.images,function(){void 0!==e&&e(o)}),r=this.parseTextures(t.textures,n),a=this.parseMaterials(t.materials,r),o=this.parseObject(t.object,i,a);return t.animations&&(o.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(o),o},parseGeometries:function(t){var e={};if(void 0!==t)for(var i=new Vs,n=new Gs,r=0,a=t.length;r<a;r++){var o,s=t[r];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new ff[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":// backwards compatible
o=new ff[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new ff[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new ff[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new ff[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new ff[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"IcosahedronGeometry":case"OctahedronGeometry":case"TetrahedronGeometry":o=new ff[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new ff[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new ff[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new ff[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"LatheGeometry":case"LatheBufferGeometry":o=new ff[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"BufferGeometry":o=n.parse(s);break;case"Geometry":o=i.parse(s,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),e[s.uuid]=o}return e},parseMaterials:function(t,e){var i={};if(void 0!==t){var n=new zs;n.setTextures(e);for(var r=0,a=t.length;r<a;r++){var o=t[r];if("MultiMaterial"===o.type){for(var s=[],c=0;c<o.materials.length;c++)s.push(n.parse(o.materials[c]));i[o.uuid]=s}else i[o.uuid]=n.parse(o)}}return i},parseAnimations:function(t){for(var e=[],i=0;i<t.length;i++){var n=Bs.parse(t[i]);e.push(n)}return e},parseImages:function(t,e){function i(t){return n.manager.itemStart(t),a.load(t,function(){n.manager.itemEnd(t)},void 0,function(){n.manager.itemEnd(t),n.manager.itemError(t)})}var n=this,r={};if(void 0!==t&&t.length>0){var a=new ds(new cs(e));a.setCrossOrigin(this.crossOrigin);for(var o=0,s=t.length;o<s;o++){var c=t[o],h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)?c.url:n.texturePath+c.url;r[c.uuid]=i(h)}}return r},parseTextures:function(t,e){function i(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}var n={};if(void 0!==t)for(var r=0,a=t.length;r<a;r++){var o=t[r];void 0===o.image&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),void 0===e[o.image]&&console.warn("THREE.ObjectLoader: Undefined image",o.image);var s=new Jn(e[o.image]);s.needsUpdate=!0,s.uuid=o.uuid,void 0!==o.name&&(s.name=o.name),void 0!==o.mapping&&(s.mapping=i(o.mapping,_f)),void 0!==o.offset&&s.offset.fromArray(o.offset),void 0!==o.repeat&&s.repeat.fromArray(o.repeat),void 0!==o.wrap&&(s.wrapS=i(o.wrap[0],wf),s.wrapT=i(o.wrap[1],wf)),void 0!==o.minFilter&&(s.minFilter=i(o.minFilter,Mf)),void 0!==o.magFilter&&(s.magFilter=i(o.magFilter,Mf)),void 0!==o.anisotropy&&(s.anisotropy=o.anisotropy),void 0!==o.flipY&&(s.flipY=o.flipY),n[o.uuid]=s}return n},parseObject:function(){var t=new ir;return function(e,i,n){function r(t){return void 0===i[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),i[t]}function a(t){if(void 0!==t){if(Array.isArray(t)){for(var e=[],i=0,r=t.length;i<r;i++){var a=t[i];void 0===n[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),e.push(n[a])}return e}return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}}var o;switch(e.type){case"Scene":o=new Ja,void 0!==e.background&&Number.isInteger(e.background)&&(o.background=new Fr(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?o.fog=new Za(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(o.fog=new Ya(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":o=new ra(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(o.focus=e.focus),void 0!==e.zoom&&(o.zoom=e.zoom),void 0!==e.filmGauge&&(o.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(o.filmOffset=e.filmOffset),void 0!==e.view&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new na(e.left,e.right,e.top,e.bottom,e.near,e.far);break;case"AmbientLight":o=new Ms(e.color,e.intensity);break;case"DirectionalLight":o=new ws(e.color,e.intensity);break;case"PointLight":o=new bs(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new Es(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new xs(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new gs(e.color,e.groundColor,e.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var s=r(e.geometry),c=a(e.material);o=s.bones&&s.bones.length>0?new no(s,c):new Ra(s,c);break;case"LOD":o=new to;break;case"Line":o=new ao(r(e.geometry),a(e.material),e.mode);break;case"LineLoop":o=new so(r(e.geometry),a(e.material));break;case"LineSegments":o=new oo(r(e.geometry),a(e.material));break;case"PointCloud":case"Points":o=new ho(r(e.geometry),a(e.material));break;case"Sprite":o=new $a(a(e.material));break;case"Group":o=new lo;break;default:o=new ea}if(o.uuid=e.uuid,void 0!==e.name&&(o.name=e.name),void 0!==e.matrix?(t.fromArray(e.matrix),t.decompose(o.position,o.quaternion,o.scale)):(void 0!==e.position&&o.position.fromArray(e.position),void 0!==e.rotation&&o.rotation.fromArray(e.rotation),void 0!==e.quaternion&&o.quaternion.fromArray(e.quaternion),void 0!==e.scale&&o.scale.fromArray(e.scale)),void 0!==e.castShadow&&(o.castShadow=e.castShadow),void 0!==e.receiveShadow&&(o.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(o.shadow.bias=e.shadow.bias),void 0!==e.shadow.radius&&(o.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&o.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(o.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(o.visible=e.visible),void 0!==e.userData&&(o.userData=e.userData),void 0!==e.children)for(var h=e.children,l=0;l<h.length;l++)o.add(this.parseObject(h[l],i,n));if("LOD"===e.type)for(var u=e.levels,d=0;d<u.length;d++){var p=u[d],f=o.getObjectByProperty("uuid",p.object);void 0!==f&&o.addLevel(f,p.distance)}return o}}()});var _f={UVMapping:300,CubeReflectionMapping:kd,CubeRefractionMapping:jd,EquirectangularReflectionMapping:Wd,EquirectangularRefractionMapping:Xd,SphericalReflectionMapping:qd,CubeUVReflectionMapping:Yd,CubeUVRefractionMapping:Zd},wf={RepeatWrapping:Jd,ClampToEdgeWrapping:Qd,MirroredRepeatWrapping:Kd},Mf={NearestFilter:$d,NearestMipMapNearestFilter:tp,NearestMipMapLinearFilter:ep,LinearFilter:ip,LinearMipMapNearestFilter:np,LinearMipMapLinearFilter:rp};Object.assign(qs.prototype,{
// Virtual base class method to overwrite and implement in subclasses
//	- t [0 .. 1]
getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},
// Get point at relative position in curve according to arc length
// - u [0 .. 1]
getPointAt:function(t){var e=this.getUtoTmapping(t);return this.getPoint(e)},
// Get sequence of points using getPoint( t )
getPoints:function(t){void 0===t&&(t=5);for(var e=[],i=0;i<=t;i++)e.push(this.getPoint(i/t));return e},
// Get sequence of points using getPointAt( u )
getSpacedPoints:function(t){void 0===t&&(t=5);for(var e=[],i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e},
// Get total curve arc length
getLength:function(){var t=this.getLengths();return t[t.length-1]},
// Get list of cumulative segment lengths
getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,i,n=[],r=this.getPoint(0),a=0;for(n.push(0),i=1;i<=t;i++)a+=(e=this.getPoint(i/t)).distanceTo(r),n.push(a),r=e;return this.cacheArcLengths=n,n},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},
// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant
getUtoTmapping:function(t,e){var i,n=this.getLengths(),r=0,a=n.length;// The targeted u distance value to get
i=e||t*n[a-1];for(
// binary search for the index with largest value smaller than target u distance
var o,s=0,c=a-1;s<=c;)if(r=Math.floor(s+(c-s)/2),(// less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats
o=n[r]-i)<0)s=r+1;else{if(!(o>0)){c=r;break}c=r-1}if(r=c,n[r]===i)return r/(a-1);
// we could get finer grain at lengths, or use simple interpolation between two points
var h=n[r];return(r+(i-h)/(n[r+1]-h))/(a-1)},
// Returns a unit vector tangent at t
// In case any sub curve does not implement its tangent derivation,
// 2 points a small delta apart will be used to find its gradient
// which seems to give a reasonable approximation
getTangent:function(t){var e=t-1e-4,i=t+1e-4;
// Capping in case of danger
e<0&&(e=0),i>1&&(i=1);var n=this.getPoint(e);return this.getPoint(i).clone().sub(n).normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},computeFrenetFrames:function(t,e){
// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf
var i,n,r,a=new er,o=[],s=[],c=[],h=new er,l=new ir;
// compute the tangent vectors for each segment on the curve
for(i=0;i<=t;i++)n=i/t,o[i]=this.getTangentAt(n),o[i].normalize();
// select an initial normal vector perpendicular to the first tangent vector,
// and in the direction of the minimum tangent xyz component
s[0]=new er,c[0]=new er;var u=Number.MAX_VALUE,d=Math.abs(o[0].x),p=Math.abs(o[0].y),f=Math.abs(o[0].z);
// compute the slowly-varying normal and binormal vectors for each segment on the curve
for(d<=u&&(u=d,a.set(1,0,0)),p<=u&&(u=p,a.set(0,1,0)),f<=u&&a.set(0,0,1),h.crossVectors(o[0],a).normalize(),s[0].crossVectors(o[0],h),c[0].crossVectors(o[0],s[0]),i=1;i<=t;i++)s[i]=s[i-1].clone(),c[i]=c[i-1].clone(),h.crossVectors(o[i-1],o[i]),h.length()>Number.EPSILON&&(h.normalize(),r=Math.acos(Yp.clamp(o[i-1].dot(o[i]),-1,1)),// clamp for floating pt errors
s[i].applyMatrix4(l.makeRotationAxis(h,r))),c[i].crossVectors(o[i],s[i]);
// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same
if(!0===e)for(r=Math.acos(Yp.clamp(s[0].dot(s[t]),-1,1)),r/=t,o[0].dot(h.crossVectors(s[0],s[t]))>0&&(r=-r),i=1;i<=t;i++)
// twist a little...
s[i].applyMatrix4(l.makeRotationAxis(o[i],r*i)),c[i].crossVectors(o[i],s[i]);return{tangents:o,normals:s,binormals:c}}}),(Ys.prototype=Object.create(qs.prototype)).constructor=Ys,Ys.prototype.isLineCurve=!0,Ys.prototype.getPoint=function(t){if(1===t)return this.v2.clone();var e=this.v2.clone().sub(this.v1);return e.multiplyScalar(t).add(this.v1),e},
// Line curve is linear, so we can overwrite default getPointAt
Ys.prototype.getPointAt=function(t){return this.getPoint(t)},Ys.prototype.getTangent=function(t){return this.v2.clone().sub(this.v1).normalize()},Zs.prototype=Object.assign(Object.create(qs.prototype),{constructor:Zs,add:function(t){this.curves.push(t)},closePath:function(){
// Add a line curve if start and end of lines are not connected
var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Ys(e,t))},
// To get accurate point with reference to
// entire path distance at time t,
// following has to be done:
// 1. Length of each sub path have to be known
// 2. Locate and identify type of curve
// 3. Get t for the curve
// 4. Return curve.getPointAt(t')
getPoint:function(t){
// To think about boundaries points.
for(var e=t*this.getLength(),i=this.getCurveLengths(),n=0;n<i.length;){if(i[n]>=e){var r=i[n]-e,a=this.curves[n],o=a.getLength(),s=0===o?0:1-r/o;return a.getPointAt(s)}n++}return null},
// We cannot use the default THREE.Curve getPoint() with getLength() because in
// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath
// getPoint() depends on getLength
getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},
// cacheLengths must be recalculated.
updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},
// Compute lengths and cache them
// We cannot overwrite getLengths() because UtoT mapping uses it.
getCurveLengths:function(){
// We use cache values if curves and cache array are same length
if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){void 0===t&&(t=40);for(var e=[],i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;for(var e,i=[],n=0,r=this.curves;n<r.length;n++)for(var a=r[n],o=a&&a.isEllipseCurve?2*t:a&&a.isLineCurve?1:a&&a.isSplineCurve?t*a.points.length:t,s=a.getPoints(o),c=0;c<s.length;c++){var h=s[c];e&&e.equals(h)||(// ensures no consecutive points are duplicates
i.push(h),e=h)}return this.autoClose&&i.length>1&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i},/**************************************************************
	 *	Create Geometries Helpers
	 **************************************************************/
/// Generate geometry from path points (for Line or Points objects)
createPointsGeometry:function(t){var e=this.getPoints(t);return this.createGeometry(e)},
// Generate geometry from equidistant sampling along the path
createSpacedPointsGeometry:function(t){var e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){for(var e=new sa,i=0,n=t.length;i<n;i++){var r=t[i];e.vertices.push(new er(r.x,r.y,r.z||0))}return e}}),(Js.prototype=Object.create(qs.prototype)).constructor=Js,Js.prototype.isEllipseCurve=!0,Js.prototype.getPoint=function(t){
// ensures that deltaAngle is 0 .. 2 PI
for(var e=2*Math.PI,i=this.aEndAngle-this.aStartAngle,n=Math.abs(i)<Number.EPSILON;i<0;)i+=e;for(;i>e;)i-=e;i<Number.EPSILON&&(i=n?0:e),!0!==this.aClockwise||n||(i===e?i=-e:i-=e);var r=this.aStartAngle+t*i,a=this.aX+this.xRadius*Math.cos(r),o=this.aY+this.yRadius*Math.sin(r);if(0!==this.aRotation){var s=Math.cos(this.aRotation),c=Math.sin(this.aRotation),h=a-this.aX,l=o-this.aY;
// Rotate the point about the center of the ellipse.
a=h*s-l*c+this.aX,o=h*c+l*s+this.aY}return new Zn(a,o)},(Qs.prototype=Object.create(qs.prototype)).constructor=Qs,Qs.prototype.isSplineCurve=!0,Qs.prototype.getPoint=function(t){var e=this.points,i=(e.length-1)*t,n=Math.floor(i),r=i-n,a=e[0===n?n:n-1],o=e[n],s=e[n>e.length-2?e.length-1:n+1],c=e[n>e.length-3?e.length-1:n+2];return new Zn(js(r,a.x,o.x,s.x,c.x),js(r,a.y,o.y,s.y,c.y))},(Ks.prototype=Object.create(qs.prototype)).constructor=Ks,Ks.prototype.getPoint=function(t){var e=this.v0,i=this.v1,n=this.v2,r=this.v3;return new Zn(Xs(t,e.x,i.x,n.x,r.x),Xs(t,e.y,i.y,n.y,r.y))},($s.prototype=Object.create(qs.prototype)).constructor=$s,$s.prototype.getPoint=function(t){var e=this.v0,i=this.v1,n=this.v2;return new Zn(Ws(t,e.x,i.x,n.x),Ws(t,e.y,i.y,n.y))};var Ef=Object.assign(Object.create(Zs.prototype),{fromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y)},moveTo:function(t,e){this.currentPoint.set(t,e)},lineTo:function(t,e){var i=new Ys(this.currentPoint.clone(),new Zn(t,e));this.curves.push(i),this.currentPoint.set(t,e)},quadraticCurveTo:function(t,e,i,n){var r=new $s(this.currentPoint.clone(),new Zn(t,e),new Zn(i,n));this.curves.push(r),this.currentPoint.set(i,n)},bezierCurveTo:function(t,e,i,n,r,a){var o=new Ks(this.currentPoint.clone(),new Zn(t,e),new Zn(i,n),new Zn(r,a));this.curves.push(o),this.currentPoint.set(r,a)},splineThru:function(t){var e=new Qs([this.currentPoint.clone()].concat(t));this.curves.push(e),this.currentPoint.copy(t[t.length-1])},arc:function(t,e,i,n,r,a){var o=this.currentPoint.x,s=this.currentPoint.y;this.absarc(t+o,e+s,i,n,r,a)},absarc:function(t,e,i,n,r,a){this.absellipse(t,e,i,i,n,r,a)},ellipse:function(t,e,i,n,r,a,o,s){var c=this.currentPoint.x,h=this.currentPoint.y;this.absellipse(t+c,e+h,i,n,r,a,o,s)},absellipse:function(t,e,i,n,r,a,o,s){var c=new Js(t,e,i,n,r,a,o,s);if(this.curves.length>0){
// if a previous curve is present, attempt to join
var h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);var l=c.getPoint(1);this.currentPoint.copy(l)}});tc.prototype=Ef,Ef.constructor=tc,ec.prototype=Object.assign(Object.create(Ef),{constructor:ec,getPointsHoles:function(t){for(var e=[],i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e},
// Get points of shape and holes (keypoints based on segments parameter)
extractAllPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},extractPoints:function(t){return this.extractAllPoints(t)}}),Object.assign(ic.prototype,{moveTo:function(t,e){this.currentPath=new tc,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e)},lineTo:function(t,e){this.currentPath.lineTo(t,e)},quadraticCurveTo:function(t,e,i,n){this.currentPath.quadraticCurveTo(t,e,i,n)},bezierCurveTo:function(t,e,i,n,r,a){this.currentPath.bezierCurveTo(t,e,i,n,r,a)},splineThru:function(t){this.currentPath.splineThru(t)},toShapes:function(t,e){function i(t){for(var e=[],i=0,n=t.length;i<n;i++){var r=t[i],a=new ec;a.curves=r.curves,e.push(a)}return e}function n(t,e){for(var i=e.length,n=!1,r=i-1,a=0;a<i;r=a++){var o=e[r],s=e[a],c=s.x-o.x,h=s.y-o.y;if(Math.abs(h)>Number.EPSILON){if(
// not parallel
h<0&&(o=e[a],c=-c,s=e[r],h=-h),t.y<o.y||t.y>s.y)continue;if(t.y===o.y){if(t.x===o.x)return!0}else{var l=h*(t.x-o.x)-c*(t.y-o.y);if(0===l)return!0;// inPt is on contour ?
if(l<0)continue;n=!n}}else{
// parallel or collinear
if(t.y!==o.y)continue;// parallel
// edge lies on the same horizontal line as inPt
if(s.x<=t.x&&t.x<=o.x||o.x<=t.x&&t.x<=s.x)return!0}}return n}var r=pf.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===e)return i(a);var o,s,c,h=[];if(1===a.length)return s=a[0],c=new ec,c.curves=s.curves,h.push(c),h;var l=!r(a[0].getPoints());l=t?!l:l;
// console.log("Holes first", holesFirst);
var u,d=[],p=[],f=[],m=0;p[m]=void 0,f[m]=[];for(var g=0,v=a.length;g<v;g++)o=r(u=(s=a[g]).getPoints()),(o=t?!o:o)?(!l&&p[m]&&m++,p[m]={s:new ec,p:u},p[m].s.curves=s.curves,l&&m++,f[m]=[]):f[m].push({h:s,p:u[0]});
// only Holes? -> probably all Shapes with wrong orientation
if(!p[0])return i(a);if(p.length>1){for(var y=!1,x=[],b=0,_=p.length;b<_;b++)d[b]=[];for(var b=0,_=p.length;b<_;b++)for(var w=f[b],M=0;M<w.length;M++){for(var E=w[M],T=!0,S=0;S<p.length;S++)n(E.p,p[S].p)&&(b!==S&&x.push({froms:b,tos:S,hole:M}),T?(T=!1,d[S].push(E)):y=!0);T&&d[b].push(E)}
// console.log("ambiguous: ", ambiguous);
x.length>0&&(
// console.log("to change: ", toChange);
y||(f=d))}for(var A,g=0,L=p.length;g<L;g++){c=p[g].s,h.push(c);for(var R=0,P=(A=f[g]).length;R<P;R++)c.holes.push(A[R].h)}
//console.log("shape", shapes);
return h}}),Object.assign(nc.prototype,{isFont:!0,generateShapes:function(t,e,i){
//
void 0===e&&(e=100),void 0===i&&(i=4);for(var n=this.data,r=function(t){for(var i=String(t).split(""),r=e/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,o=0,s=0,c=[],h=0;h<i.length;h++){var l=i[h];if("\n"===l)o=0,s-=a;else{var u=function(t,e,i,r){var a=n.glyphs[t]||n.glyphs["?"];if(a){var o,s,c,h,l,u,d,p,f,m=new ic,g=[];if(a.o)for(var v=a._cachedOutline||(a._cachedOutline=a.o.split(" ")),y=0,x=v.length;y<x;)switch(v[y++]){case"m":// moveTo
o=v[y++]*e+i,s=v[y++]*e+r,m.moveTo(o,s);break;case"l":// lineTo
o=v[y++]*e+i,s=v[y++]*e+r,m.lineTo(o,s);break;case"q":// quadraticCurveTo
c=v[y++]*e+i,h=v[y++]*e+r,l=v[y++]*e+i,u=v[y++]*e+r,m.quadraticCurveTo(l,u,c,h),(f=g[g.length-1])&&(f.x,f.y);break;case"b":// bezierCurveTo
c=v[y++]*e+i,h=v[y++]*e+r,l=v[y++]*e+i,u=v[y++]*e+r,d=v[y++]*e+i,p=v[y++]*e+r,m.bezierCurveTo(l,u,d,p,c,h),(f=g[g.length-1])&&(f.x,f.y)}return{offsetX:a.ha*e,path:m}}}(l,r,o,s);o+=u.offsetX,c.push(u.path)}}return c}(t),a=[],o=0,s=r.length;o<s;o++)Array.prototype.push.apply(a,r[o].toShapes());return a}}),Object.assign(rc.prototype,{load:function(t,e,i,n){var r=this;new hs(this.manager).load(t,function(t){var i;try{i=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),i=JSON.parse(t.substring(65,t.length-2))}var n=r.parse(i);e&&e(n)},i,n)},parse:function(t){return new nc(t)}});var Tf,Sf={getContext:function(){return void 0===Tf&&(Tf=new(window.AudioContext||window.webkitAudioContext)),Tf},setContext:function(t){Tf=t}};Object.assign(ac.prototype,{load:function(t,e,i,n){var r=new hs(this.manager);r.setResponseType("arraybuffer"),r.load(t,function(t){Sf.getContext().decodeAudioData(t,function(t){e(t)})},i,n)}}),Object.assign(oc.prototype,{update:function(){var t,e,i,n,r,a,o,s,c=new ir,h=new ir;return function(l){if(t!==this||e!==l.focus||i!==l.fov||n!==l.aspect*this.aspect||r!==l.near||a!==l.far||o!==l.zoom||s!==this.eyeSep){t=this,e=l.focus,i=l.fov,n=l.aspect*this.aspect,r=l.near,a=l.far,o=l.zoom;
// Off-axis stereoscopic effect based on
// http://paulbourke.net/stereographics/stereorender/
var u,d,p=l.projectionMatrix.clone(),f=(s=this.eyeSep/2)*r/e,m=r*Math.tan(Yp.DEG2RAD*i*.5)/o;
// translate xOffset
h.elements[12]=-s,c.elements[12]=s,
// for left eye
u=-m*n+f,d=m*n+f,p.elements[0]=2*r/(d-u),p.elements[8]=(d+u)/(d-u),this.cameraL.projectionMatrix.copy(p),
// for right eye
u=-m*n-f,d=m*n-f,p.elements[0]=2*r/(d-u),p.elements[8]=(d+u)/(d-u),this.cameraR.projectionMatrix.copy(p)}this.cameraL.matrixWorld.copy(l.matrixWorld).multiply(h),this.cameraR.matrixWorld.copy(l.matrixWorld).multiply(c)}}()}),(sc.prototype=Object.create(ea.prototype)).constructor=sc,cc.prototype=Object.assign(Object.create(ea.prototype),{constructor:cc,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(t){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){this.gain.gain.value=t},updateMatrixWorld:function(){var t=new er,e=new tr,i=new er,n=new er;return function(r){ea.prototype.updateMatrixWorld.call(this,r);var a=this.context.listener,o=this.up;this.matrixWorld.decompose(t,e,i),n.set(0,0,-1).applyQuaternion(e),a.positionX?(a.positionX.setValueAtTime(t.x,this.context.currentTime),a.positionY.setValueAtTime(t.y,this.context.currentTime),a.positionZ.setValueAtTime(t.z,this.context.currentTime),a.forwardX.setValueAtTime(n.x,this.context.currentTime),a.forwardY.setValueAtTime(n.y,this.context.currentTime),a.forwardZ.setValueAtTime(n.z,this.context.currentTime),a.upX.setValueAtTime(o.x,this.context.currentTime),a.upY.setValueAtTime(o.y,this.context.currentTime),a.upZ.setValueAtTime(o.z,this.context.currentTime)):(a.setPosition(t.x,t.y,t.z),a.setOrientation(n.x,n.y,n.z,o.x,o.y,o.z))}}()}),hc.prototype=Object.assign(Object.create(ea.prototype),{constructor:hc,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.onended=this.onEnded.bind(this),t.playbackRate.setValueAtTime(this.playbackRate,this.startTime),t.start(0,this.startTime),this.isPlaying=!0,this.source=t,this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")},pause:function(){if(!1!==this.hasPlaybackControl)return this.source.stop(),this.startTime=this.context.currentTime,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")},stop:function(){if(!1!==this.hasPlaybackControl)return this.source.stop(),this.startTime=0,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),!0===this.isPlaying?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime),this;console.warn("THREE.Audio: this Audio has no playback control.")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.value=t,this}}),lc.prototype=Object.assign(Object.create(hc.prototype),{constructor:lc,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){this.panner.refDistance=t},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){this.panner.rolloffFactor=t},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){this.panner.distanceModel=t},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){this.panner.maxDistance=t},updateMatrixWorld:function(){var t=new er;return function(e){ea.prototype.updateMatrixWorld.call(this,e),t.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(t.x,t.y,t.z)}}()}),Object.assign(uc.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var t=0,e=this.getFrequencyData(),i=0;i<e.length;i++)t+=e[i];return t/e.length}}),Object.assign(dc.prototype,{
// accumulate data in the 'incoming' region into 'accu<i>'
accumulate:function(t,e){
// note: happily accumulating nothing when weight = 0, the caller knows
// the weight and shouldn't have made the call in the first place
var i=this.buffer,n=this.valueSize,r=t*n+n,a=this.cumulativeWeight;if(0===a){
// accuN := incoming * weight
for(var o=0;o!==n;++o)i[r+o]=i[o];a=e}else{var s=e/(
// accuN := accuN + incoming * weight
a+=e);this._mixBufferRegion(i,r,0,s,n)}this.cumulativeWeight=a},
// apply the state of 'accu<i>' to the binding when accus differ
apply:function(t){var e=this.valueSize,i=this.buffer,n=t*e+e,r=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,r<1){
// accuN := accuN + original * ( 1 - cumulativeWeight )
var o=3*e;this._mixBufferRegion(i,n,o,1-r,e)}for(var s=e,c=e+e;s!==c;++s)if(i[s]!==i[s+e]){
// value has changed -> update scene graph
a.setValue(i,n);break}},
// remember the state of the bound property and copy it to both accus
saveOriginalState:function(){var t=this.binding,e=this.buffer,i=this.valueSize,n=3*i;t.getValue(e,n);
// accu[0..1] := orig -- initially detect changes against the original
for(var r=i,a=n;r!==a;++r)e[r]=e[n+r%i];this.cumulativeWeight=0},
// apply the state previously taken via 'saveOriginalState' to the binding
restoreOriginalState:function(){var t=3*this.valueSize;this.binding.setValue(this.buffer,t)},
// mix functions
_select:function(t,e,i,n,r){if(n>=.5)for(var a=0;a!==r;++a)t[e+a]=t[i+a]},_slerp:function(t,e,i,n){tr.slerpFlat(t,e,t,e,t,i,n)},_lerp:function(t,e,i,n,r){for(var a=1-n,o=0;o!==r;++o){var s=e+o;t[s]=t[s]*a+t[i+o]*n}}}),Object.assign(pc.prototype,{getValue:function(t,e){this.bind();// bind all binding
var i=this._targetGroup.nCachedObjects_,n=this._bindings[i];
// and only call .getValue on the first
void 0!==n&&n.getValue(t,e)},setValue:function(t,e){for(var i=this._bindings,n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}}),Object.assign(fc,{Composite:pc,create:function(t,e,i){return t&&t.isAnimationObjectGroup?new fc.Composite(t,e,i):new fc(t,e,i)},/**
	 * Replaces spaces with underscores and removes unsupported characters from
	 * node names, to ensure compatibility with parseTrackName().
	 *
	 * @param  {string} name Node name to be sanitized.
	 * @return {string}
	 */
sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(/[^\w-]/g,"")},parseTrackName:function(){
// Parent directories, delimited by '/' or ':'. Currently unused, but must
// be matched to parse the rest of the track name.
var t=new RegExp("^"+/((?:[\w-]+[\/:])*)/.source+/([\w-\.]+)?/.source+/(?:\.([\w-]+)(?:\[(.+)\])?)?/.source+/\.([\w-]+)(?:\[(.+)\])?/.source+"$"),e=["material","materials","bones"];return function(i){var n=t.exec(i);if(!n)throw new Error("PropertyBinding: Cannot parse trackName: "+i);var r={
// directoryName: matches[ 1 ], // (tschw) currently unused
nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],// required
propertyIndex:n[6]},a=r.nodeName&&r.nodeName.lastIndexOf(".");if(void 0!==a&&-1!==a){var o=r.nodeName.substring(a+1);
// Object names must be checked against a whitelist. Otherwise, there
// is no way to parse 'foo.bar.baz': 'baz' must be a property, but
// 'bar' could be the objectName, or part of a nodeName (which can
// include '.' characters).
-1!==e.indexOf(o)&&(r.nodeName=r.nodeName.substring(0,a),r.objectName=o)}if(null===r.propertyName||0===r.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+i);return r}}(),findNode:function(t,e){if(!e||""===e||"root"===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;
// search into skeleton bones.
if(t.skeleton){var i=function(t){for(var i=0;i<t.bones.length;i++){var n=t.bones[i];if(n.name===e)return n}return null}(t.skeleton);if(i)return i}
// search into node subtree.
if(t.children){var n=function(t){for(var i=0;i<t.length;i++){var r=t[i];if(r.name===e||r.uuid===e)return r;var a=n(r.children);if(a)return a}return null},r=n(t.children);if(r)return r}return null}}),Object.assign(fc.prototype,{// prototype, continued
// these are used to "bind" a nonexistent property
_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)t[e++]=i[n]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[
// Direct
function(t,e){this.node[this.propertyName]=t[e]},function(t,e){this.node[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.node[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[
// EntireArray
function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++]},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[
// ArrayElement
function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[
// HasToFromArray
function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},
// create getter / setter pair for a property in the scene graph
bind:function(){var t=this.node,e=this.parsedPath,i=e.objectName,n=e.propertyName,r=e.propertyIndex;
// ensure there is a value node
if(t||(t=fc.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),
// set fail state so we can just 'return' on error
this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(i){var a=e.objectIndex;
// special cases were we need to reach deeper into the hierarchy to get the face materials....
switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);
// potential future optimization: skip this if propertyIndex is already an integer
// and convert the integer string to a true integer.
t=t.skeleton.bones;
// support resolving morphTarget names into indices.
for(h=0;h<t.length;h++)if(t[h].name===a){a=h;break}break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==a){if(void 0===t[a])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[a]}}
// resolve property
var o=t[n];if(void 0!==o){
// determine versioning scheme
var s=this.Versioning.None;void 0!==t.needsUpdate?(// material
s=this.Versioning.NeedsUpdate,this.targetObject=t):void 0!==t.matrixWorldNeedsUpdate&&(// node transform
s=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=t);
// determine how the property gets bound
var c=this.BindingType.Direct;if(void 0!==r){
// access a sub element of the property array (only primitives are supported right now)
if("morphTargetInfluences"===n){
// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.
// support resolving morphTarget names into indices.
if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);for(h=0;h<this.node.geometry.morphAttributes.position.length;h++)if(t.geometry.morphAttributes.position[h].name===r){r=h;break}}else{if(!t.geometry.morphTargets)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);for(var h=0;h<this.node.geometry.morphTargets.length;h++)if(t.geometry.morphTargets[h].name===r){r=h;break}}}c=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else void 0!==o.fromArray&&void 0!==o.toArray?(
// must use copy for Object3D.Euler/Quaternion
c=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(c=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=n;
// select getter / setter
this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][s]}else{var l=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+n+" but it wasn't found.",t)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null,
// back to the prototype version of getValue / setValue
// note: avoiding to mutate the shape of 'this' via 'delete'
this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),
//!\ DECLARE ALIAS AFTER assign prototype !
Object.assign(fc.prototype,{
// initial state of these methods that calls 'bind'
_getValue_unbound:fc.prototype.getValue,_setValue_unbound:fc.prototype.setValue}),Object.assign(mc.prototype,{isAnimationObjectGroup:!0,add:function(t){for(var e=this._objects,i=e.length,n=this.nCachedObjects_,r=this._indicesByUUID,a=this._paths,o=this._parsedPaths,s=this._bindings,c=s.length,h=0,l=arguments.length;h!==l;++h){var u=arguments[h],d=u.uuid,p=r[d],f=void 0;if(void 0===p){
// unknown object -> add it to the ACTIVE region
p=i++,r[d]=p,e.push(u);
// accounting is done, now do the same for all bindings
for(var m=0,g=c;m!==g;++m)s[m].push(new fc(u,a[m],o[m]))}else if(p<n){f=e[p];
// move existing object to the ACTIVE region
var v=--n,y=e[v];r[y.uuid]=p,e[p]=y,r[d]=v,e[v]=u;
// accounting is done, now do the same for all bindings
for(var m=0,g=c;m!==g;++m){var x=s[m],b=x[v],_=x[p];x[p]=b,void 0===_&&(
// since we do not bother to create new bindings
// for objects that are cached, the binding may
// or may not exist
_=new fc(u,a[m],o[m])),x[v]=_}}else e[p]!==f&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}// for arguments
this.nCachedObjects_=n},remove:function(t){for(var e=this._objects,i=this.nCachedObjects_,n=this._indicesByUUID,r=this._bindings,a=r.length,o=0,s=arguments.length;o!==s;++o){var c=arguments[o],h=c.uuid,l=n[h];if(void 0!==l&&l>=i){
// move existing object into the CACHED region
var u=i++,d=e[u];n[d.uuid]=l,e[l]=d,n[h]=u,e[u]=c;
// accounting is done, now do the same for all bindings
for(var p=0,f=a;p!==f;++p){var m=r[p],g=m[u],v=m[l];m[l]=g,m[u]=v}}}// for arguments
this.nCachedObjects_=i},
// remove & forget
uncache:function(t){for(var e=this._objects,i=e.length,n=this.nCachedObjects_,r=this._indicesByUUID,a=this._bindings,o=a.length,s=0,c=arguments.length;s!==c;++s){var h=arguments[s].uuid,l=r[h];if(void 0!==l)if(delete r[h],l<n){
// object is cached, shrink the CACHED region
var u=--n,d=e[u],p=e[y=--i];
// last cached object takes this object's place
r[d.uuid]=l,e[l]=d,
// last object goes to the activated slot and pop
r[p.uuid]=u,e[u]=p,e.pop();
// accounting is done, now do the same for all bindings
for(var f=0,m=o;f!==m;++f){var g=(x=a[f])[u],v=x[y];x[l]=g,x[u]=v,x.pop()}}else{
// object is active, just swap with the last and pop
var y=--i;r[(p=e[y]).uuid]=l,e[l]=p,e.pop();
// accounting is done, now do the same for all bindings
for(var f=0,m=o;f!==m;++f){var x=a[f];x[l]=x[y],x.pop()}}}// for arguments
this.nCachedObjects_=n},
// Internal interface used by befriended PropertyBinding.Composite:
subscribe_:function(t,e){
// returns an array of bindings for the given path that is changed
// according to the contained objects in the group
var i=this._bindingsIndicesByPath,n=i[t],r=this._bindings;if(void 0!==n)return r[n];var a=this._paths,o=this._parsedPaths,s=this._objects,c=s.length,h=this.nCachedObjects_,l=new Array(c);n=r.length,i[t]=n,a.push(t),o.push(e),r.push(l);for(var u=h,d=s.length;u!==d;++u){var p=s[u];l[u]=new fc(p,t,e)}return l},unsubscribe_:function(t){
// tells the group to forget about a property path and no longer
// update the array previously obtained with 'subscribe_'
var e=this._bindingsIndicesByPath,i=e[t];if(void 0!==i){var n=this._paths,r=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o];e[t[o]]=i,a[i]=s,a.pop(),r[i]=r[o],r.pop(),n[i]=n[o],n.pop()}}}),Object.assign(gc.prototype,{
// State & Scheduling
play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){// forget scheduling
// restart clip
// forget previous loops
return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},
// return true when play has been called
isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},
// Weight
// set the weight stopping any scheduled fading
// although .enabled = false yields an effective weight of zero, this
// method does *not* change .enabled, because it would be confusing
setEffectiveWeight:function(t){
// note: same logic as when updated at runtime
return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},
// return the weight considering fading and .enabled
getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,i){if(t.fadeOut(e),this.fadeIn(e),i){var n=this._clip.duration,r=t._clip.duration,a=r/n,o=n/r;t.warp(1,a,e),this.warp(o,1,e)}return this},crossFadeTo:function(t,e,i){return t.crossFadeFrom(this,e,i)},stopFading:function(){var t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},
// Time Scale Control
// set the time scale stopping any scheduled warping
// although .paused = true yields an effective time scale of zero, this
// method does *not* change .paused, because it would be confusing
setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},
// return the time scale considering warping and .paused
getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,i){var n=this._mixer,r=n.time,a=this._timeScaleInterpolant,o=this.timeScale;null===a&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);var s=a.parameterPositions,c=a.sampleValues;return s[0]=r,s[1]=r+i,c[0]=t/o,c[1]=e/o,this},stopWarping:function(){var t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},
// Object Accessors
getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},
// Interna
_update:function(t,e,i,n){
// called by the mixer
if(this.enabled){var r=this._startTime;if(null!==r){
// check for scheduled start of action
var a=(t-r)*i;if(a<0||0===i)return;
// start
this._startTime=null,// unschedule
e=i*a}
// apply time scale and advance time
e*=this._updateTimeScale(t);var o=this._updateTime(e),s=this._updateWeight(t);if(s>0)for(var c=this._interpolants,h=this._propertyBindings,l=0,u=c.length;l!==u;++l)c[l].evaluate(o),h[l].accumulate(n,s)}else
// call ._updateWeight() to update ._effectiveWeight
this._updateWeight(t)},_updateWeight:function(t){var e=0;if(this.enabled){e=this.weight;var i=this._weightInterpolant;if(null!==i){var n=i.evaluate(t)[0];e*=n,t>i.parameterPositions[1]&&(this.stopFading(),0===n&&(
// faded out, disable
this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){var e=0;if(!this.paused){e=this.timeScale;var i=this._timeScaleInterpolant;if(null!==i){e*=i.evaluate(t)[0],t>i.parameterPositions[1]&&(this.stopWarping(),0===e?
// motion has halted, pause
this.paused=!0:
// warp done - apply final time scale
this.timeScale=e)}}return this._effectiveTimeScale=e,e},_updateTime:function(t){var e=this.time+t;if(0===t)return e;var i=this._clip.duration,n=this.loop,r=this._loopCount;if(2200===n){-1===r&&(
// just started
this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(e>=i)e=i;else{if(!(e<0))break t;e=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{// repetitive Repeat or PingPong
var a=2202===n;if(-1===r&&(
// just started
t>=0?(r=0,this._setEndings(!0,0===this.repetitions,a)):
// when looping in reverse direction, the initial
// transition through zero counts as a repetition,
// so leave loopCount at -1
this._setEndings(0===this.repetitions,!0,a)),e>=i||e<0){
// wrap around
var o=Math.floor(e/i);// signed
e-=i*o,r+=Math.abs(o);var s=this.repetitions-r;if(s<0)
// have to stop (switch state, clamp time, fire event)
this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=t>0?i:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{
// keep running
if(0===s){
// entering the last round
var c=t<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}if(a&&1==(1&r))
// invert time for the "pong round"
return this.time=e,i-e}return this.time=e,e},_setEndings:function(t,e,i){var n=this._interpolantSettings;i?(n.endingStart=2401,n.endingEnd=2401):(
// assuming for LoopOnce atStart == atEnd == true
n.endingStart=t?this.zeroSlopeAtStart?2401:Op:2402,n.endingEnd=e?this.zeroSlopeAtEnd?2401:Op:2402)},_scheduleFading:function(t,e,i){var n=this._mixer,r=n.time,a=this._weightInterpolant;null===a&&(a=n._lendControlInterpolant(),this._weightInterpolant=a);var o=a.parameterPositions,s=a.sampleValues;return o[0]=r,s[0]=e,o[1]=r+t,s[1]=i,this}}),Object.assign(vc.prototype,Yn.prototype,{_bindAction:function(t,e){var i=t._localRoot||this._root,n=t._clip.tracks,r=n.length,a=t._propertyBindings,o=t._interpolants,s=i.uuid,c=this._bindingsByRootAndName,h=c[s];void 0===h&&(h={},c[s]=h);for(var l=0;l!==r;++l){var u=n[l],d=u.name,p=h[d];if(void 0!==p)a[l]=p;else{if(void 0!==(p=a[l])){
// existing binding, make sure the cache knows
null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,s,d));continue}var f=e&&e._propertyBindings[l].binding.parsedPath;++(p=new dc(fc.create(i,d,f),u.ValueTypeName,u.getValueSize())).referenceCount,this._addInactiveBinding(p,s,d),a[l]=p}o[l].resultBuffer=p.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){
// this action has been forgotten by the cache, but the user
// appears to be still using it -> rebind
var e=(t._localRoot||this._root).uuid,i=t._clip.uuid,n=this._actionsByClip[i];this._bindAction(t,n&&n.knownActions[0]),this._addInactiveAction(t,i,e)}
// increment reference counts / sort out state
for(var r=t._propertyBindings,a=0,o=r.length;a!==o;++a){var s=r[a];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){
// decrement reference counts / sort out state
for(var e=t._propertyBindings,i=0,n=e.length;i!==n;++i){var r=e[i];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}},
// Memory manager
_initMemoryManager:function(){this._actions=[],// 'nActiveActions' followed by inactive ones
this._nActiveActions=0,this._actionsByClip={},
// inside:
// {
// 		knownActions: Array< AnimationAction >	- used as prototypes
// 		actionByRoot: AnimationAction			- lookup
// }
this._bindings=[],// 'nActiveBindings' followed by inactive ones
this._nActiveBindings=0,this._bindingsByRootAndName={},// inside: Map< name, PropertyMixer >
this._controlInterpolants=[],// same game as above
this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},
// Memory management for AnimationAction objects
_isActiveAction:function(t){var e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,i){var n=this._actions,r=this._actionsByClip,a=r[e];if(void 0===a)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=a;else{var o=a.knownActions;t._byClipCacheIndex=o.length,o.push(t)}t._cacheIndex=n.length,n.push(t),a.actionByRoot[i]=t},_removeInactiveAction:function(t){var e=this._actions,i=e[e.length-1],n=t._cacheIndex;i._cacheIndex=n,e[n]=i,e.pop(),t._cacheIndex=null;var r=t._clip.uuid,a=this._actionsByClip,o=a[r],s=o.knownActions,c=s[s.length-1],h=t._byClipCacheIndex;c._byClipCacheIndex=h,s[h]=c,s.pop(),t._byClipCacheIndex=null;delete o.actionByRoot[(t._localRoot||this._root).uuid],0===s.length&&delete a[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,i=0,n=e.length;i!==n;++i){var r=e[i];0==--r.referenceCount&&this._removeInactiveBinding(r)}},_lendAction:function(t){
// [ active actions |  inactive actions  ]
// [  active actions >| inactive actions ]
//                 s        a
//                  <-swap->
//                 a        s
var e=this._actions,i=t._cacheIndex,n=this._nActiveActions++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_takeBackAction:function(t){
// [  active actions  | inactive actions ]
// [ active actions |< inactive actions  ]
//        a        s
//         <-swap->
//        s        a
var e=this._actions,i=t._cacheIndex,n=--this._nActiveActions,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},
// Memory management for PropertyMixer objects
_addInactiveBinding:function(t,e,i){var n=this._bindingsByRootAndName,r=n[e],a=this._bindings;void 0===r&&(r={},n[e]=r),r[i]=t,t._cacheIndex=a.length,a.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,i=t.binding,n=i.rootNode.uuid,r=i.path,a=this._bindingsByRootAndName,o=a[n],s=e[e.length-1],c=t._cacheIndex;s._cacheIndex=c,e[c]=s,e.pop(),delete o[r];t:{for(var h in o)break t;delete a[n]}},_lendBinding:function(t){var e=this._bindings,i=t._cacheIndex,n=this._nActiveBindings++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_takeBackBinding:function(t){var e=this._bindings,i=t._cacheIndex,n=--this._nActiveBindings,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},
// Memory management of Interpolants for weight and time scale
_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,i=t[e];return void 0===i&&((i=new As(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=e,t[e]=i),i},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,i=t.__cacheIndex,n=--this._nActiveControlInterpolants,r=e[n];t.__cacheIndex=n,e[n]=t,r.__cacheIndex=i,e[i]=r},_controlInterpolantsResultBuffer:new Float32Array(1),
// return an action for a clip optionally using a custom root target
// object (this method allocates a lot of dynamic memory in case a
// previously unknown clip/root combination is specified)
clipAction:function(t,e){var i=e||this._root,n=i.uuid,r="string"==typeof t?Bs.findByName(i,t):t,a=null!==r?r.uuid:t,o=this._actionsByClip[a],s=null;if(void 0!==o){var c=o.actionByRoot[n];if(void 0!==c)return c;
// we know the clip, so we don't have to parse all
// the bindings again but can just copy
s=o.knownActions[0],
// also, take the clip from the prototype action
null===r&&(r=s._clip)}
// clip must be known when specified via string
if(null===r)return null;
// allocate all resources required to run it
var h=new gc(this,r,e);
// and make the action known to the memory manager
return this._bindAction(h,s),this._addInactiveAction(h,a,n),h},
// get an existing action
existingAction:function(t,e){var i=e||this._root,n=i.uuid,r="string"==typeof t?Bs.findByName(i,t):t,a=r?r.uuid:t,o=this._actionsByClip[a];return void 0!==o?o.actionByRoot[n]||null:null},
// deactivates all previously scheduled actions
stopAllAction:function(){var t=this._actions,e=this._nActiveActions,i=this._bindings,n=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(r=0;r!==e;++r)t[r].reset();for(var r=0;r!==n;++r)i[r].useCount=0;return this},
// advance the time and update apply the animation
update:function(t){t*=this.timeScale;
// run active actions
for(var e=this._actions,i=this._nActiveActions,n=this.time+=t,r=Math.sign(t),a=this._accuIndex^=1,o=0;o!==i;++o){e[o]._update(n,t,r,a)}for(var s=this._bindings,c=this._nActiveBindings,o=0;o!==c;++o)s[o].apply(a);return this},
// return this mixer's root target object
getRoot:function(){return this._root},
// free all resources specific to a particular clip
uncacheClip:function(t){var e=this._actions,i=t.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){for(var a=r.knownActions,o=0,s=a.length;o!==s;++o){var c=a[o];this._deactivateAction(c);var h=c._cacheIndex,l=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,l._cacheIndex=h,e[h]=l,e.pop(),this._removeInactiveBindingsForAction(c)}delete n[i]}},
// free all resources specific to a particular root target object
uncacheRoot:function(t){var e=t.uuid,i=this._actionsByClip;for(var n in i){var r=i[n].actionByRoot[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}var a=this._bindingsByRootAndName[e];if(void 0!==a)for(var o in a){var s=a[o];s.restoreOriginalState(),this._removeInactiveBinding(s)}},
// remove a targeted clip from the cache
uncacheAction:function(t,e){var i=this.existingAction(t,e);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}),yc.prototype.clone=function(){return new yc(void 0===this.value.clone?this.value:this.value.clone())},xc.prototype=Object.assign(Object.create(ba.prototype),{constructor:xc,isInstancedBufferGeometry:!0,addGroup:function(t,e,i){this.groups.push({start:t,count:e,materialIndex:i})},copy:function(t){var e=t.index;null!==e&&this.setIndex(e.clone());var i=t.attributes;for(var n in i){var r=i[n];this.addAttribute(n,r.clone())}for(var a=t.groups,o=0,s=a.length;o<s;o++){var c=a[o];this.addGroup(c.start,c.count,c.materialIndex)}return this}}),Object.defineProperties(bc.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(bc.prototype,{isInterleavedBufferAttribute:!0,setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=r,this}}),Object.defineProperty(_c.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(_c.prototype,{isInterleavedBuffer:!0,setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==t?t.length/this.stride:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.dynamic=t.dynamic,this},copyAt:function(t,e,i){t*=this.stride,i*=e.stride;for(var n=0,r=this.stride;n<r;n++)this.array[t+n]=e.array[i+n];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}}),wc.prototype=Object.assign(Object.create(_c.prototype),{constructor:wc,isInstancedInterleavedBuffer:!0,copy:function(t){return _c.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),Mc.prototype=Object.assign(Object.create(ca.prototype),{constructor:Mc,isInstancedBufferAttribute:!0,copy:function(t){return ca.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),Object.assign(Ec.prototype,{linePrecision:1,set:function(t,e){
// direction is assumed to be normalized (for accurate distance calculations)
this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize()):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),// set origin in plane of camera
this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e){var i=[];return Sc(t,this,i,e),i.sort(Tc),i},intersectObjects:function(t,e){var i=[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(var n=0,r=t.length;n<r;n++)Sc(t[n],this,i,e);return i.sort(Tc),i}}),Object.assign(Ac.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),// see #10732
this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var e=("undefined"==typeof performance?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}),Object.assign(Lc.prototype,{set:function(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},
// restrict phi to be betwee EPS and PI-EPS
makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(t){// equator angle around y-up axis
return this.radius=t.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t.x,t.z),this.phi=Math.acos(Yp.clamp(t.y/this.radius,-1,1))),this}}),Object.assign(Rc.prototype,{set:function(t,e,i){return this.radius=t,this.theta=e,this.y=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.radius=Math.sqrt(t.x*t.x+t.z*t.z),this.theta=Math.atan2(t.x,t.z),this.y=t.y,this}}),(Pc.prototype=Object.create(ea.prototype)).constructor=Pc,Pc.prototype.isImmediateRenderObject=!0,(Cc.prototype=Object.create(oo.prototype)).constructor=Cc,Cc.prototype.update=function(){var t=new er,e=new er,i=new Yr;return function(){var n=["a","b","c"];this.object.updateMatrixWorld(!0),i.getNormalMatrix(this.object.matrixWorld);var r=this.object.matrixWorld,a=this.geometry.attributes.position,o=this.object.geometry;if(o&&o.isGeometry)for(var s=o.vertices,c=o.faces,h=0,l=0,u=c.length;l<u;l++)for(var d=c[l],p=0,f=d.vertexNormals.length;p<f;p++){var m=s[d[n[p]]],g=d.vertexNormals[p];t.copy(m).applyMatrix4(r),e.copy(g).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),a.setXYZ(h,t.x,t.y,t.z),h+=1,a.setXYZ(h,e.x,e.y,e.z),h+=1}else if(o&&o.isBufferGeometry)
// for simplicity, ignore index and drawcalls, and render every normal
for(var v=o.attributes.position,y=o.attributes.normal,h=0,p=0,f=v.count;p<f;p++)t.set(v.getX(p),v.getY(p),v.getZ(p)).applyMatrix4(r),e.set(y.getX(p),y.getY(p),y.getZ(p)),e.applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),a.setXYZ(h,t.x,t.y,t.z),h+=1,a.setXYZ(h,e.x,e.y,e.z),h+=1;a.needsUpdate=!0}}(),(Ic.prototype=Object.create(ea.prototype)).constructor=Ic,Ic.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},Ic.prototype.update=function(){var t=new er,e=new er;return function(){this.light.updateMatrixWorld();var i=this.light.distance?this.light.distance:1e3,n=i*Math.tan(this.light.angle);this.cone.scale.set(n,n,i),t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(e.sub(t)),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}(),(Nc.prototype=Object.create(oo.prototype)).constructor=Nc,Nc.prototype.onBeforeRender=function(){var t=new er,e=new ir,i=new ir;return function(){var n=this.bones,r=this.geometry,a=r.getAttribute("position");i.getInverse(this.root.matrixWorld);for(var o=0,s=0;o<n.length;o++){var c=n[o];c.parent&&c.parent.isBone&&(e.multiplyMatrices(i,c.matrixWorld),t.setFromMatrixPosition(e),a.setXYZ(s,t.x,t.y,t.z),e.multiplyMatrices(i,c.parent.matrixWorld),t.setFromMatrixPosition(e),a.setXYZ(s+1,t.x,t.y,t.z),s+=2)}r.getAttribute("position").needsUpdate=!0}}(),(Oc.prototype=Object.create(Ra.prototype)).constructor=Oc,Oc.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},Oc.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)},(Dc.prototype=Object.create(ea.prototype)).constructor=Dc,Dc.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},Dc.prototype.update=function(){
// calculate new dimensions of the helper
var t=.5*this.light.width,e=.5*this.light.height,i=this.line.geometry.attributes.position,n=i.array;
// update vertices
n[0]=t,n[1]=-e,n[2]=0,n[3]=t,n[4]=e,n[5]=0,n[6]=-t,n[7]=e,n[8]=0,n[9]=-t,n[10]=-e,n[11]=0,n[12]=t,n[13]=-e,n[14]=0,i.needsUpdate=!0,void 0!==this.color?this.line.material.color.set(this.color):this.line.material.color.copy(this.light.color)},(Fc.prototype=Object.create(ea.prototype)).constructor=Fc,Fc.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},Fc.prototype.update=function(){var t=new er,e=new Fr,i=new Fr;return function(){var n=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var r=n.geometry.getAttribute("color");e.copy(this.light.color),i.copy(this.light.groundColor);for(var a=0,o=r.count;a<o;a++){var s=a<o/2?e:i;r.setXYZ(a,s.r,s.g,s.b)}r.needsUpdate=!0}n.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate())}}(),(Bc.prototype=Object.create(oo.prototype)).constructor=Bc,(zc.prototype=Object.create(oo.prototype)).constructor=zc,(Gc.prototype=Object.create(oo.prototype)).constructor=Gc,Gc.prototype.update=function(){var t=new er,e=new er,i=new Yr;return function(){this.object.updateMatrixWorld(!0),i.getNormalMatrix(this.object.matrixWorld);for(var n=this.object.matrixWorld,r=this.geometry.attributes.position,a=this.object.geometry,o=a.vertices,s=a.faces,c=0,h=0,l=s.length;h<l;h++){var u=s[h],d=u.normal;t.copy(o[u.a]).add(o[u.b]).add(o[u.c]).divideScalar(3).applyMatrix4(n),e.copy(d).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),r.setXYZ(c,t.x,t.y,t.z),c+=1,r.setXYZ(c,e.x,e.y,e.z),c+=1}r.needsUpdate=!0}}(),(Hc.prototype=Object.create(ea.prototype)).constructor=Hc,Hc.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},Hc.prototype.update=function(){var t=new er,e=new er,i=new er;return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),i.subVectors(e,t),this.lightPlane.lookAt(i),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(i),this.targetLine.scale.z=i.length()}}(),(Vc.prototype=Object.create(oo.prototype)).constructor=Vc,Vc.prototype.update=function(){function t(t,a,o,s){n.set(a,o,s).unproject(r);var c=i[t];if(void 0!==c)for(var h=e.getAttribute("position"),l=0,u=c.length;l<u;l++)h.setXYZ(c[l],n.x,n.y,n.z)}var e,i,n=new er,r=new ia;return function(){e=this.geometry,i=this.pointMap;
// we need just camera projection matrix
// world matrix must be identity
r.projectionMatrix.copy(this.camera.projectionMatrix),
// center / target
t("c",0,0,-1),t("t",0,0,1),
// near
t("n1",-1,-1,-1),t("n2",1,-1,-1),t("n3",-1,1,-1),t("n4",1,1,-1),
// far
t("f1",-1,-1,1),t("f2",1,-1,1),t("f3",-1,1,1),t("f4",1,1,1),
// up
t("u1",.7,1.1,-1),t("u2",-.7,1.1,-1),t("u3",0,2,-1),
// cross
t("cf1",-1,0,1),t("cf2",1,0,1),t("cf3",0,-1,1),t("cf4",0,1,1),t("cn1",-1,0,-1),t("cn2",1,0,-1),t("cn3",0,-1,-1),t("cn4",0,1,-1),e.getAttribute("position").needsUpdate=!0}}(),(kc.prototype=Object.create(oo.prototype)).constructor=kc,kc.prototype.update=function(){var t=new Xr;return function(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&t.setFromObject(this.object),!t.isEmpty()){var i=t.min,n=t.max,r=this.geometry.attributes.position,a=r.array;a[0]=n.x,a[1]=n.y,a[2]=n.z,a[3]=i.x,a[4]=n.y,a[5]=n.z,a[6]=i.x,a[7]=i.y,a[8]=n.z,a[9]=n.x,a[10]=i.y,a[11]=n.z,a[12]=n.x,a[13]=n.y,a[14]=i.z,a[15]=i.x,a[16]=n.y,a[17]=i.z,a[18]=i.x,a[19]=i.y,a[20]=i.z,a[21]=n.x,a[22]=i.y,a[23]=i.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),kc.prototype.setFromObject=function(t){return this.object=t,this.update(),this},(jc.prototype=Object.create(oo.prototype)).constructor=jc,jc.prototype.onBeforeRender=function(){var t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5))},(Wc.prototype=Object.create(ao.prototype)).constructor=Wc,Wc.prototype.onBeforeRender=function(){var t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),// sign does not matter
this.scale.set(.5*this.size,.5*this.size,t),this.lookAt(this.plane.normal),this.updateMatrixWorld()};/**
 * @author WestLangley / http://github.com/WestLangley
 * @author zz85 / http://github.com/zz85
 * @author bhouston / http://clara.io
 *
 * Creates an arrow for visualizing directions
 *
 * Parameters:
 *  dir - Vector3
 *  origin - Vector3
 *  length - Number
 *  color - color in hex value
 *  headLength - Number
 *  headWidth - Number
 */
var Af,Lf;(Xc.prototype=Object.create(ea.prototype)).constructor=Xc,Xc.prototype.setDirection=function(){var t,e=new er;return function(i){
// dir is assumed to be normalized
i.y>.99999?this.quaternion.set(0,0,0,1):i.y<-.99999?this.quaternion.set(1,0,0,0):(e.set(i.z,0,-i.x).normalize(),t=Math.acos(i.y),this.quaternion.setFromAxisAngle(e,t))}}(),Xc.prototype.setLength=function(t,e,i){void 0===e&&(e=.2*t),void 0===i&&(i=.2*e),this.line.scale.set(1,Math.max(0,t-e),1),this.line.updateMatrix(),this.cone.scale.set(i,e,i),this.cone.position.y=t,this.cone.updateMatrix()},Xc.prototype.setColor=function(t){this.line.material.color.copy(t),this.cone.material.color.copy(t)},(qc.prototype=Object.create(oo.prototype)).constructor=qc;
//
var Rf=new er,Pf=new Yc,Cf=new Yc,If=new Yc;(Zc.prototype=Object.create(qs.prototype)).constructor=Zc,Zc.prototype.getPoint=function(t){var e=this.points,i=e.length,n=(i-(this.closed?0:1))*t,r=Math.floor(n),a=n-r;this.closed?r+=r>0?0:(Math.floor(Math.abs(r)/e.length)+1)*e.length:0===a&&r===i-1&&(r=i-2,a=1);var o,s,c,h;if(// 4 points
this.closed||r>0?o=e[(r-1)%i]:(
// extrapolate first point
Rf.subVectors(e[0],e[1]).add(e[0]),o=Rf),s=e[r%i],c=e[(r+1)%i],this.closed||r+2<i?h=e[(r+2)%i]:(
// extrapolate last point
Rf.subVectors(e[i-1],e[i-2]).add(e[i-1]),h=Rf),void 0===this.type||"centripetal"===this.type||"chordal"===this.type){
// init Centripetal / Chordal Catmull-Rom
var l="chordal"===this.type?.5:.25,u=Math.pow(o.distanceToSquared(s),l),d=Math.pow(s.distanceToSquared(c),l),p=Math.pow(c.distanceToSquared(h),l);
// safety check for repeated points
d<1e-4&&(d=1),u<1e-4&&(u=d),p<1e-4&&(p=d),Pf.initNonuniformCatmullRom(o.x,s.x,c.x,h.x,u,d,p),Cf.initNonuniformCatmullRom(o.y,s.y,c.y,h.y,u,d,p),If.initNonuniformCatmullRom(o.z,s.z,c.z,h.z,u,d,p)}else if("catmullrom"===this.type){var f=void 0!==this.tension?this.tension:.5;Pf.initCatmullRom(o.x,s.x,c.x,h.x,f),Cf.initCatmullRom(o.y,s.y,c.y,h.y,f),If.initCatmullRom(o.z,s.z,c.z,h.z,f)}return new er(Pf.calc(a),Cf.calc(a),If.calc(a))},(Jc.prototype=Object.create(qs.prototype)).constructor=Jc,Jc.prototype.getPoint=function(t){var e=this.v0,i=this.v1,n=this.v2,r=this.v3;return new er(Xs(t,e.x,i.x,n.x,r.x),Xs(t,e.y,i.y,n.y,r.y),Xs(t,e.z,i.z,n.z,r.z))},(Qc.prototype=Object.create(qs.prototype)).constructor=Qc,Qc.prototype.getPoint=function(t){var e=this.v0,i=this.v1,n=this.v2;return new er(Ws(t,e.x,i.x,n.x),Ws(t,e.y,i.y,n.y),Ws(t,e.z,i.z,n.z))},(Kc.prototype=Object.create(qs.prototype)).constructor=Kc,Kc.prototype.getPoint=function(t){if(1===t)return this.v2.clone();var e=new er;// diff
return e.subVectors(this.v2,this.v1),e.multiplyScalar(t),e.add(this.v1),e},($c.prototype=Object.create(Js.prototype)).constructor=$c;/**
 * @author alteredq / http://alteredqualia.com/
 */
var Uf={createMultiMaterialObject:function(t,e){for(var i=new lo,n=0,r=e.length;n<r;n++)i.add(new Ra(t,e[n]));return i},detach:function(t,e,i){t.applyMatrix(e.matrixWorld),e.remove(t),i.add(t)},attach:function(t,e,i){t.applyMatrix((new ir).getInverse(i.matrixWorld)),e.remove(t),i.add(t)}};
//
qs.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(qs.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},th.prototype=Object.create(Zc.prototype),eh.prototype=Object.create(Zc.prototype),ih.prototype=Object.create(Zc.prototype),Object.assign(ih.prototype,{initFromArray:function(t){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(t){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(t){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),Bc.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Nc.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},
//
Object.assign(Br.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(Xr.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),Aa.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Yp.random16=function(){return console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead."),Math.random()},Object.assign(Yr.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(t){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBuffer:function(t,e,i){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(t,e,i){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(ir.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){var t;return function(){return void 0===t&&(t=new er),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),t.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(t){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(t,e,i){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(t,e,i){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,i,n,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,n,i,r,a)}}),Zr.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},tr.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},Object.assign(Sa.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(ec.prototype,{extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new No(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new jo(this,t)}}),Object.assign(Zn.prototype,{fromAttribute:function(t,e,i){return console.error("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)}}),Object.assign(er.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,i){return console.error("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)}}),Object.assign(Qn.prototype,{fromAttribute:function(t,e,i){return console.error("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)}}),
//
sa.prototype.computeTangents=function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},Object.assign(ea.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)}}),Object.defineProperties(ea.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties(to.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(eo.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),Object.defineProperty(qs.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),
//
ra.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},
//
Object.defineProperties(ms.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),
//
Object.defineProperties(ca.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}}}),Object.assign(ba.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addDrawCall:function(t,e,i){void 0!==i&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}}),Object.defineProperties(ba.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),
//
Object.defineProperties(yc.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),
//
Object.defineProperties(Vr.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Fr}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}}}),Object.defineProperties(ns.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(kr.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),
//
Object.assign(qa.prototype,{getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}}),Object.defineProperties(qa.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),this.shadowMap.cullFace=t}}}),Object.defineProperties(Qr.prototype,{cullFace:{get:function(){return this.renderReverseSided?Zu:Yu},set:function(t){var e=t!==Yu;console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+e+"."),this.renderReverseSided=e}}}),
//
Object.defineProperties(Kn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),
//
hc.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var e=this;return(new ac).load(t,function(t){e.setBuffer(t)}),this},uc.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},
//
sc.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};
//
var Nf,Of={merge:function(t,e,i){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var n;e.isMesh&&(e.matrixAutoUpdate&&e.updateMatrix(),n=e.matrix,e=e.geometry),t.merge(e,n,i)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}},Df={crossOrigin:void 0,loadTexture:function(t,e,i,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var r=new fs;r.setCrossOrigin(this.crossOrigin);var a=r.load(t,i,void 0,n);return e&&(a.mapping=e),a},loadTextureCube:function(t,e,i,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var r=new ps;r.setCrossOrigin(this.crossOrigin);var a=r.load(t,i,void 0,n);return e&&(a.mapping=e),a},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}},Ff=Object.freeze({WebGLRenderTargetCube:$n,WebGLRenderTarget:Kn,WebGLRenderer:qa,ShaderLib:cf,UniformsLib:af,UniformsUtils:of,ShaderChunk:sf,FogExp2:Ya,Fog:Za,Scene:Ja,LensFlare:Qa,Sprite:$a,LOD:to,SkinnedMesh:no,Skeleton:eo,Bone:io,Mesh:Ra,LineSegments:oo,LineLoop:so,Line:ao,Points:ho,Group:lo,VideoTexture:uo,DataTexture:nr,CompressedTexture:po,CubeTexture:rr,CanvasTexture:Gr,DepthTexture:fo,Texture:Jn,CompressedTextureLoader:ls,DataTextureLoader:us,CubeTextureLoader:ps,TextureLoader:fs,ObjectLoader:ks,MaterialLoader:zs,BufferGeometryLoader:Gs,DefaultLoadingManager:vf,LoadingManager:cs,JSONLoader:Vs,ImageLoader:ds,FontLoader:rc,FileLoader:hs,Loader:Hs,Cache:gf,AudioLoader:ac,SpotLightShadow:ys,SpotLight:xs,PointLight:bs,RectAreaLight:Es,HemisphereLight:gs,DirectionalLightShadow:_s,DirectionalLight:ws,AmbientLight:Ms,LightShadow:vs,Light:ms,StereoCamera:oc,PerspectiveCamera:ra,OrthographicCamera:na,CubeCamera:sc,ArrayCamera:Wa,Camera:ia,AudioListener:cc,PositionalAudio:lc,AudioContext:Sf,AudioAnalyser:uc,Audio:hc,VectorKeyframeTrack:Ps,StringKeyframeTrack:Ns,QuaternionKeyframeTrack:Is,NumberKeyframeTrack:Us,ColorKeyframeTrack:Ds,BooleanKeyframeTrack:Os,PropertyMixer:dc,PropertyBinding:fc,KeyframeTrack:Fs,AnimationUtils:yf,AnimationObjectGroup:mc,AnimationMixer:vc,AnimationClip:Bs,Uniform:yc,InstancedBufferGeometry:xc,BufferGeometry:ba,GeometryIdCount:oa,Geometry:sa,InterleavedBufferAttribute:bc,InstancedInterleavedBuffer:wc,InterleavedBuffer:_c,InstancedBufferAttribute:Mc,Face3:aa,Object3D:ea,Raycaster:Ec,Layers:ta,EventDispatcher:Yn,Clock:Ac,QuaternionLinearInterpolant:Cs,LinearInterpolant:As,DiscreteInterpolant:Ls,CubicInterpolant:Ss,Interpolant:Ts,Triangle:La,Math:Yp,Spherical:Lc,Cylindrical:Rc,Plane:Zr,Frustum:Jr,Sphere:qr,Ray:Sa,Matrix4:ir,Matrix3:Yr,Box3:Xr,Box2:Br,Line3:Aa,Euler:$r,Vector4:Qn,Vector3:er,Vector2:Zn,Quaternion:tr,Color:Fr,ImmediateRenderObject:Pc,VertexNormalsHelper:Cc,SpotLightHelper:Ic,SkeletonHelper:Nc,PointLightHelper:Oc,RectAreaLightHelper:Dc,HemisphereLightHelper:Fc,GridHelper:Bc,PolarGridHelper:zc,FaceNormalsHelper:Gc,DirectionalLightHelper:Hc,CameraHelper:Vc,BoxHelper:kc,Box3Helper:jc,PlaneHelper:Wc,ArrowHelper:Xc,AxisHelper:qc,CatmullRomCurve3:Zc,CubicBezierCurve3:Jc,QuadraticBezierCurve3:Qc,LineCurve3:Kc,ArcCurve:$c,EllipseCurve:Js,SplineCurve:Qs,CubicBezierCurve:Ks,QuadraticBezierCurve:$s,LineCurve:Ys,Shape:ec,Path:tc,ShapePath:ic,Font:nc,CurvePath:Zs,Curve:qs,ShapeUtils:pf,SceneUtils:Uf,WebGLUtils:Xa,WireframeGeometry:mo,ParametricGeometry:go,ParametricBufferGeometry:vo,TetrahedronGeometry:bo,TetrahedronBufferGeometry:_o,OctahedronGeometry:wo,OctahedronBufferGeometry:Mo,IcosahedronGeometry:Eo,IcosahedronBufferGeometry:To,DodecahedronGeometry:So,DodecahedronBufferGeometry:Ao,PolyhedronGeometry:yo,PolyhedronBufferGeometry:xo,TubeGeometry:Lo,TubeBufferGeometry:Ro,TorusKnotGeometry:Po,TorusKnotBufferGeometry:Co,TorusGeometry:Io,TorusBufferGeometry:Uo,TextGeometry:Do,TextBufferGeometry:Fo,SphereGeometry:Bo,SphereBufferGeometry:zo,RingGeometry:Go,RingBufferGeometry:Ho,PlaneGeometry:Ma,PlaneBufferGeometry:Ea,LatheGeometry:Vo,LatheBufferGeometry:ko,ShapeGeometry:jo,ShapeBufferGeometry:Wo,ExtrudeGeometry:No,ExtrudeBufferGeometry:Oo,EdgesGeometry:Xo,ConeGeometry:Zo,ConeBufferGeometry:Jo,CylinderGeometry:qo,CylinderBufferGeometry:Yo,CircleGeometry:Qo,CircleBufferGeometry:Ko,BoxGeometry:_a,BoxBufferGeometry:wa,ShadowMaterial:$o,SpriteMaterial:Ka,RawShaderMaterial:ts,ShaderMaterial:kr,PointsMaterial:co,MeshPhysicalMaterial:is,MeshStandardMaterial:es,MeshPhongMaterial:ns,MeshToonMaterial:rs,MeshNormalMaterial:as,MeshLambertMaterial:os,MeshDepthMaterial:jr,MeshDistanceMaterial:Wr,MeshBasicMaterial:Ta,LineDashedMaterial:ss,LineBasicMaterial:ro,Material:Vr,Float64BufferAttribute:va,Float32BufferAttribute:ga,Uint32BufferAttribute:ma,Int32BufferAttribute:fa,Uint16BufferAttribute:pa,Int16BufferAttribute:da,Uint8ClampedBufferAttribute:ua,Uint8BufferAttribute:la,Int8BufferAttribute:ha,BufferAttribute:ca,REVISION:Xu,MOUSE:{LEFT:0,MIDDLE:1,RIGHT:2},CullFaceNone:qu,CullFaceBack:Yu,CullFaceFront:Zu,CullFaceFrontBack:3,FrontFaceDirectionCW:Ju,FrontFaceDirectionCCW:1,BasicShadowMap:0,PCFShadowMap:Qu,PCFSoftShadowMap:Ku,FrontSide:$u,BackSide:td,DoubleSide:ed,FlatShading:1,SmoothShading:2,NoColors:id,FaceColors:nd,VertexColors:rd,NoBlending:ad,NormalBlending:od,AdditiveBlending:sd,SubtractiveBlending:cd,MultiplyBlending:hd,CustomBlending:ld,AddEquation:ud,SubtractEquation:dd,ReverseSubtractEquation:pd,MinEquation:fd,MaxEquation:md,ZeroFactor:gd,OneFactor:vd,SrcColorFactor:yd,OneMinusSrcColorFactor:xd,SrcAlphaFactor:bd,OneMinusSrcAlphaFactor:_d,DstAlphaFactor:wd,OneMinusDstAlphaFactor:Md,DstColorFactor:Ed,OneMinusDstColorFactor:Td,SrcAlphaSaturateFactor:Sd,NeverDepth:Ad,AlwaysDepth:Ld,LessDepth:Rd,LessEqualDepth:Pd,EqualDepth:Cd,GreaterEqualDepth:Id,GreaterDepth:Ud,NotEqualDepth:Nd,MultiplyOperation:Od,MixOperation:Dd,AddOperation:Fd,NoToneMapping:Bd,LinearToneMapping:zd,ReinhardToneMapping:Gd,Uncharted2ToneMapping:Hd,CineonToneMapping:Vd,UVMapping:300,CubeReflectionMapping:kd,CubeRefractionMapping:jd,EquirectangularReflectionMapping:Wd,EquirectangularRefractionMapping:Xd,SphericalReflectionMapping:qd,CubeUVReflectionMapping:Yd,CubeUVRefractionMapping:Zd,RepeatWrapping:Jd,ClampToEdgeWrapping:Qd,MirroredRepeatWrapping:Kd,NearestFilter:$d,NearestMipMapNearestFilter:tp,NearestMipMapLinearFilter:ep,LinearFilter:ip,LinearMipMapNearestFilter:np,LinearMipMapLinearFilter:rp,UnsignedByteType:ap,ByteType:op,ShortType:sp,UnsignedShortType:cp,IntType:hp,UnsignedIntType:lp,FloatType:up,HalfFloatType:dp,UnsignedShort4444Type:pp,UnsignedShort5551Type:fp,UnsignedShort565Type:mp,UnsignedInt248Type:gp,AlphaFormat:vp,RGBFormat:yp,RGBAFormat:xp,LuminanceFormat:bp,LuminanceAlphaFormat:_p,RGBEFormat:wp,DepthFormat:Mp,DepthStencilFormat:Ep,RGB_S3TC_DXT1_Format:Tp,RGBA_S3TC_DXT1_Format:Sp,RGBA_S3TC_DXT3_Format:Ap,RGBA_S3TC_DXT5_Format:Lp,RGB_PVRTC_4BPPV1_Format:Rp,RGB_PVRTC_2BPPV1_Format:Pp,RGBA_PVRTC_4BPPV1_Format:Cp,RGBA_PVRTC_2BPPV1_Format:Ip,RGB_ETC1_Format:Up,LoopOnce:2200,LoopRepeat:Np,LoopPingPong:2202,InterpolateDiscrete:2300,InterpolateLinear:2301,InterpolateSmooth:2302,ZeroCurvatureEnding:Op,ZeroSlopeEnding:2401,WrapAroundEnding:2402,TrianglesDrawMode:Dp,TriangleStripDrawMode:Fp,TriangleFanDrawMode:Bp,LinearEncoding:zp,sRGBEncoding:Gp,GammaEncoding:Hp,RGBEEncoding:Vp,LogLuvEncoding:3003,RGBM7Encoding:kp,RGBM16Encoding:jp,RGBDEncoding:Wp,BasicDepthPacking:Xp,RGBADepthPacking:qp,CubeGeometry:_a,Face4:/**
 * @author mrdoob / http://mrdoob.com/
 */
function(t,e,i,n,r,a,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new aa(t,e,i,r,a,o)},LineStrip:0,LinePieces:1,MeshFaceMaterial:function(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t},MultiMaterial:function(t){return void 0===t&&(t=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t},PointCloud:function(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new ho(t,e)},Particle:function(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new $a(t)},ParticleSystem:function(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new ho(t,e)},PointCloudMaterial:function(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new co(t)},ParticleBasicMaterial:function(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new co(t)},ParticleSystemMaterial:function(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new co(t)},Vertex:function(t,e,i){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new er(t,e,i)},DynamicBufferAttribute:
//
function(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new ca(t,e).setDynamic(!0)},Int8Attribute:function(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new ha(t,e)},Uint8Attribute:function(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new la(t,e)},Uint8ClampedAttribute:function(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new ua(t,e)},Int16Attribute:function(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new da(t,e)},Uint16Attribute:function(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new pa(t,e)},Int32Attribute:function(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new fa(t,e)},Uint32Attribute:function(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new ma(t,e)},Float32Attribute:function(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new ga(t,e)},Float64Attribute:function(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new va(t,e)},ClosedSplineCurve3:th,SplineCurve3:eh,Spline:ih,BoundingBoxHelper:
//
function(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new kc(t,e)},EdgesHelper:function(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new oo(new Xo(t.geometry),new ro({color:void 0!==e?e:16777215}))},WireframeHelper:function(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new oo(new mo(t.geometry),new ro({color:void 0!==e?e:16777215}))},XHRLoader:
//
function(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new hs(t)},BinaryTextureLoader:function(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new us(t)},GeometryUtils:Of,ImageUtils:Df,Projector:
//
function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(t,e){console.warn("THREE.Projector: .projectVector() is now vector.project()."),t.project(e)},this.unprojectVector=function(t,e){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),t.unproject(e)},this.pickingRay=function(){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}},CanvasRenderer:
//
function(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}}}),Bf=window.THREE||Ff,zf=Nf=function(t,e){
// helpers
/**
	 * Checks if the pressed key is any of the configured modifier keys for
	 * a specified behavior.
	 * 
	 * @param {number | number[]} keys 
	 * @param {number} key 
	 * 
	 * @returns {boolean} `true` if `keys` contains or equals `key`
	 */
function i(t,e){return Array.isArray(t)?-1!==t.indexOf(e):t===e}
// listeners
function n(t){!1!==p.enabled&&(window.removeEventListener("keydown",n),v=g,g===f.NONE&&(i(p.keys[f.ROTATE],t.keyCode)&&!p.noRotate?g=f.ROTATE:i(p.keys[f.ZOOM],t.keyCode)&&!p.noZoom?g=f.ZOOM:i(p.keys[f.PAN],t.keyCode)&&!p.noPan&&(g=f.PAN)))}function r(t){!1!==p.enabled&&(g=v,window.addEventListener("keydown",n,!1))}function a(t){!1!==p.enabled&&(t.preventDefault(),t.stopPropagation(),g===f.NONE&&(g=t.button),g!==f.ROTATE||p.noRotate?g!==f.ZOOM||p.noZoom?g!==f.PAN||p.noPan||(A.copy(I(t.pageX,t.pageY)),L.copy(A)):(M.copy(I(t.pageX,t.pageY)),E.copy(M)):(b.copy(U(t.pageX,t.pageY)),x.copy(b)),document.addEventListener("mousemove",o,!1),document.addEventListener("mouseup",s,!1),p.dispatchEvent(P))}function o(t){!1!==p.enabled&&(t.preventDefault(),t.stopPropagation(),g!==f.ROTATE||p.noRotate?g!==f.ZOOM||p.noZoom?g!==f.PAN||p.noPan||L.copy(I(t.pageX,t.pageY)):E.copy(I(t.pageX,t.pageY)):(x.copy(b),b.copy(U(t.pageX,t.pageY))))}function s(t){!1!==p.enabled&&(t.preventDefault(),t.stopPropagation(),g=f.NONE,document.removeEventListener("mousemove",o),document.removeEventListener("mouseup",s),p.dispatchEvent(C))}function c(t){if(!1!==p.enabled){switch(t.preventDefault(),t.stopPropagation(),t.deltaMode){case 2:
// Zoom in pages
M.y-=.025*t.deltaY;break;case 1:
// Zoom in lines
M.y-=.01*t.deltaY;break;default:
// undefined, 0, assume pixels
M.y-=25e-5*t.deltaY}p.dispatchEvent(P),p.dispatchEvent(C)}}function h(t){if(!1!==p.enabled){switch(t.touches.length){case 1:g=f.TOUCH_ROTATE,b.copy(U(t.touches[0].pageX,t.touches[0].pageY)),x.copy(b);break;default:// 2 or more
g=f.TOUCH_ZOOM_PAN;var e=t.touches[0].pageX-t.touches[1].pageX,i=t.touches[0].pageY-t.touches[1].pageY;S=T=Math.sqrt(e*e+i*i);var n=(t.touches[0].pageX+t.touches[1].pageX)/2,r=(t.touches[0].pageY+t.touches[1].pageY)/2;A.copy(I(n,r)),L.copy(A)}p.dispatchEvent(P)}}function l(t){if(!1!==p.enabled)switch(t.preventDefault(),t.stopPropagation(),t.touches.length){case 1:x.copy(b),b.copy(U(t.touches[0].pageX,t.touches[0].pageY));break;default:// 2 or more
var e=t.touches[0].pageX-t.touches[1].pageX,i=t.touches[0].pageY-t.touches[1].pageY;S=Math.sqrt(e*e+i*i);var n=(t.touches[0].pageX+t.touches[1].pageX)/2,r=(t.touches[0].pageY+t.touches[1].pageY)/2;L.copy(I(n,r))}}function u(t){if(!1!==p.enabled){switch(t.touches.length){case 0:g=f.NONE;break;case 1:g=f.TOUCH_ROTATE,b.copy(U(t.touches[0].pageX,t.touches[0].pageY)),x.copy(b)}p.dispatchEvent(C)}}function d(t){!1!==p.enabled&&t.preventDefault()}var p=this,f={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4};this.object=t,this.domElement=void 0!==e?e:document,
// API
this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,/**
	 * `KeyboardEvent.keyCode` values which should trigger the different 
	 * interaction states. Each element can be a single code or an array
	 * of codes. All elements are required.
	 */
this.keys=[65,83,68],
// internals
this.target=new Bf.Vector3;var m=new Bf.Vector3,g=f.NONE,v=f.NONE,y=new Bf.Vector3,x=new Bf.Vector2,b=new Bf.Vector2,_=new Bf.Vector3,w=0,M=new Bf.Vector2,E=new Bf.Vector2,T=0,S=0,A=new Bf.Vector2,L=new Bf.Vector2;
// for reset
this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.up0=this.object.up.clone();
// events
var R={type:"change"},P={type:"start"},C={type:"end"};
// methods
this.handleResize=function(){if(this.domElement===document)this.screen.left=0,this.screen.top=0,this.screen.width=window.innerWidth,this.screen.height=window.innerHeight;else{var t=this.domElement.getBoundingClientRect(),e=this.domElement.ownerDocument.documentElement;this.screen.left=t.left+window.pageXOffset-e.clientLeft,this.screen.top=t.top+window.pageYOffset-e.clientTop,this.screen.width=t.width,this.screen.height=t.height}},this.handleEvent=function(t){"function"==typeof this[t.type]&&this[t.type](t)};var I=function(){var t=new Bf.Vector2;return function(e,i){return t.set((e-p.screen.left)/p.screen.width,(i-p.screen.top)/p.screen.height),t}}(),U=function(){var t=new Bf.Vector2;return function(e,i){return t.set((e-.5*p.screen.width-p.screen.left)/(.5*p.screen.width),(p.screen.height+2*(p.screen.top-i))/p.screen.width),t}}();this.rotateCamera=function(){var t,e=new Bf.Vector3,i=new Bf.Quaternion,n=new Bf.Vector3,r=new Bf.Vector3,a=new Bf.Vector3,o=new Bf.Vector3;return function(){o.set(b.x-x.x,b.y-x.y,0),(t=o.length())?(y.copy(p.object.position).sub(p.target),n.copy(y).normalize(),r.copy(p.object.up).normalize(),a.crossVectors(r,n).normalize(),r.setLength(b.y-x.y),a.setLength(b.x-x.x),o.copy(r.add(a)),e.crossVectors(o,y).normalize(),t*=p.rotateSpeed,i.setFromAxisAngle(e,t),y.applyQuaternion(i),p.object.up.applyQuaternion(i),_.copy(e),w=t):!p.staticMoving&&w&&(w*=Math.sqrt(1-p.dynamicDampingFactor),y.copy(p.object.position).sub(p.target),i.setFromAxisAngle(_,w),y.applyQuaternion(i),p.object.up.applyQuaternion(i)),x.copy(b)}}(),this.zoomCamera=function(){var t;g===f.TOUCH_ZOOM_PAN?(t=T/S,T=S,y.multiplyScalar(t)):(1!==(t=1+(E.y-M.y)*p.zoomSpeed)&&t>0&&y.multiplyScalar(t),p.staticMoving?M.copy(E):M.y+=(E.y-M.y)*this.dynamicDampingFactor)},this.panCamera=function(){var t=new Bf.Vector2,e=new Bf.Vector3,i=new Bf.Vector3;return function(){t.copy(L).sub(A),t.lengthSq()&&(t.multiplyScalar(y.length()*p.panSpeed),i.copy(y).cross(p.object.up).setLength(t.x),i.add(e.copy(p.object.up).setLength(t.y)),p.object.position.add(i),p.target.add(i),p.staticMoving?A.copy(L):A.add(t.subVectors(L,A).multiplyScalar(p.dynamicDampingFactor)))}}(),this.checkDistances=function(){p.noZoom&&p.noPan||(y.lengthSq()>p.maxDistance*p.maxDistance&&(p.object.position.addVectors(p.target,y.setLength(p.maxDistance)),M.copy(E)),y.lengthSq()<p.minDistance*p.minDistance&&(p.object.position.addVectors(p.target,y.setLength(p.minDistance)),M.copy(E)))},this.update=function(){y.subVectors(p.object.position,p.target),p.noRotate||p.rotateCamera(),p.noZoom||p.zoomCamera(),p.noPan||p.panCamera(),p.object.position.addVectors(p.target,y),p.checkDistances(),p.object.lookAt(p.target),m.distanceToSquared(p.object.position)>1e-6&&(p.dispatchEvent(R),m.copy(p.object.position))},this.reset=function(){g=f.NONE,v=f.NONE,p.target.copy(p.target0),p.object.position.copy(p.position0),p.object.up.copy(p.up0),y.subVectors(p.object.position,p.target),p.object.lookAt(p.target),p.dispatchEvent(R),m.copy(p.object.position)},this.dispose=function(){this.domElement.removeEventListener("contextmenu",d,!1),this.domElement.removeEventListener("mousedown",a,!1),this.domElement.removeEventListener("wheel",c,!1),this.domElement.removeEventListener("touchstart",h,!1),this.domElement.removeEventListener("touchend",u,!1),this.domElement.removeEventListener("touchmove",l,!1),document.removeEventListener("mousemove",o,!1),document.removeEventListener("mouseup",s,!1),window.removeEventListener("keydown",n,!1),window.removeEventListener("keyup",r,!1)},this.domElement.addEventListener("contextmenu",d,!1),this.domElement.addEventListener("mousedown",a,!1),this.domElement.addEventListener("wheel",c,!1),this.domElement.addEventListener("touchstart",h,!1),this.domElement.addEventListener("touchend",u,!1),this.domElement.addEventListener("touchmove",l,!1),window.addEventListener("keydown",n,!1),window.addEventListener("keyup",r,!1),this.handleResize(),
// force an update at start
this.update()};Nf.prototype=Object.create(Bf.EventDispatcher.prototype);return rh({props:{graphData:{default:[],onChange:function(t,e){e.onFrame=null}},graphType:{default:"network"},idField:{default:"id"},onNodeClick:{}},init:function(t,i){i.domNode=t,
// Wipe DOM
t.innerHTML="",
// Add info space
t.appendChild(i.infoElem=document.createElement("div")),i.infoElem.className="graph-info-msg";
// Setup tooltip
var n=document.createElement("div");n.className="graph-tooltip",t.appendChild(n);
// Capture mouse coords on move
var r=new bn,a=new e;a.x=-2,// Initialize off canvas
a.y=-2,t.addEventListener("mousemove",function(e){
// update the mouse pos
var r=function(t){var e=t.getBoundingClientRect(),i=window.pageXOffset||document.documentElement.scrollLeft,n=window.pageYOffset||document.documentElement.scrollTop;return{top:e.top+n,left:e.left+i}}(t),o={x:e.pageX-r.left,y:e.pageY-r.top};a.x=o.x/i.width*2-1,a.y=-o.y/i.height*2+1,
// Move tooltip
n.style.top=o.y-40+"px",n.style.left=o.x-20+"px"},!1),
// Handle click events on nodes
t.addEventListener("click",function(t){if(i.onNodeClick){r.setFromCamera(a,i.camera);var e=r.intersectObjects(i.graphScene.children).filter(function(t){return t.object.__data});// Check only objects with data (nodes)
e.length&&i.onNodeClick(e[0].object.__data)}},!1),
// Setup renderer
i.renderer=new Qt({antialias:!0,alpha:!0}),t.appendChild(i.renderer.domElement);
// Setup scene
var o=new te;o.add(i.graphScene=new fe),
// Add lights
o.add(new Mi(12303291)),o.add(new wi(16777215,.6)),
// Setup camera
i.camera=new Zt,i.camera.far=2e4;
// Add camera interaction
var s=new zf(i.camera,i.renderer.domElement);
// Kick-off renderer
!function t(){i.onFrame&&i.onFrame(),
// Update tooltip
r.setFromCamera(a,i.camera);var e=r.intersectObjects(i.graphScene.children).filter(function(t){return t.object.name});// Check only objects with labels
n.textContent=e.length?e[0].object.name:"",
// Frame cycle
s.update(),i.renderer.render(o,i.camera),requestAnimationFrame(t)}()},update:function(t){
// update layput
this.resizeCanvas(),t.onFrame=null,// Pause simulation
t.infoElem.textContent="Loading...",Array.isArray(t.graphData)&&(console.info("Graph loading",t.graphData.length,"records"),
// init records' dimensions
t.dimensions=[],t.graphData.forEach(function(t){for(var e in t)t.hasOwnProperty(e)&&t[e]})),t.infoElem.textContent=""},methods:{resizeCanvas:function(t){t.domNode.offsetWidth&&t.domNode.offsetHeight&&(t.width=t.domNode.offsetWidth,t.height=t.domNode.offsetHeight),t.width&&t.height&&(t.renderer.setSize(t.width,t.height),t.camera.aspect=t.width/t.height,t.camera.updateProjectionMatrix())}}})});